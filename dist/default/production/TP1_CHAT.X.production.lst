

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Sep 19 15:23:01 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F46J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    43                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    44  0000                     
    45                           ; Version 1.45
    46                           ; Generated 16/11/2017 GMT
    47                           ; 
    48                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC18F46J50 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     
    80                           	psect	idataCOMRAM
    81  001590                     __pidataCOMRAM:
    82                           	opt stack 0
    83                           
    84                           ;initializer for _BankIndex
    85  001590  FF                 	db	255
    86                           
    87                           ;initializer for _defaultHops
    88  001591  04                 	db	4
    89                           
    90                           	psect	idataBANK0
    91  001594                     __pidataBANK0:
    92                           	opt stack 0
    93                           
    94                           ;initializer for _AcknowledgementSeq
    95  001594  FF                 	db	255
    96                           
    97                           	psect	idataBANK1
    98  001588                     __pidataBANK1:
    99                           	opt stack 0
   100                           
   101                           ;initializer for _myLongAddress
   102  001588  01                 	db	1
   103  001589  11                 	db	17
   104  00158A  22                 	db	34
   105  00158B  33                 	db	51
   106  00158C  44                 	db	68
   107  00158D  55                 	db	85
   108  00158E  66                 	db	102
   109  00158F  11                 	db	17
   110                           
   111                           	psect	smallconst
   112  000F00                     __psmallconst:
   113                           	opt stack 0
   114  000F00  00                 	db	0
   115  000F01                     _ScanTime:
   116                           	opt stack 0
   117  000F01  03C0               	dw	960
   118  000F03  0000               	dw	0
   119  000F05  05A0               	dw	1440
   120  000F07  0000               	dw	0
   121  000F09  0960               	dw	2400
   122  000F0B  0000               	dw	0
   123  000F0D  10E0               	dw	4320
   124  000F0F  0000               	dw	0
   125  000F11  1FE0               	dw	8160
   126  000F13  0000               	dw	0
   127  000F15  3DE0               	dw	15840
   128  000F17  0000               	dw	0
   129  000F19  79E0               	dw	31200
   130  000F1B  0000               	dw	0
   131  000F1D  F1E0               	dw	61920
   132  000F1F  0000               	dw	0
   133  000F21  E1E0               	dw	57824
   134  000F23  0001               	dw	1
   135  000F25  C1E0               	dw	49632
   136  000F27  0003               	dw	3
   137  000F29  81E0               	dw	33248
   138  000F2B  0007               	dw	7
   139  000F2D  01E0               	dw	480
   140  000F2F  000F               	dw	15
   141  000F31  01E0               	dw	480
   142  000F33  001E               	dw	30
   143  000F35  3D44               	dw	15684
   144  000F37  001B               	dw	27
   145  000F39  B40D               	dw	46093
   146  000F3B  0015               	dw	21
   147  000F3D                     __end_of_ScanTime:
   148                           	opt stack 0
   149  000F3D                     _octpowers:
   150                           	opt stack 0
   151  000F3D  0001               	dw	1
   152  000F3F  0008               	dw	8
   153  000F41  0040               	dw	64
   154  000F43  0200               	dw	512
   155  000F45  1000               	dw	4096
   156  000F47  8000               	dw	32768
   157  000F49                     __end_of_octpowers:
   158                           	opt stack 0
   159  000F49                     _dpowers:
   160                           	opt stack 0
   161  000F49  0001               	dw	1
   162  000F4B  000A               	dw	10
   163  000F4D  0064               	dw	100
   164  000F4F  03E8               	dw	1000
   165  000F51  2710               	dw	10000
   166  000F53                     __end_of_dpowers:
   167                           	opt stack 0
   168  000F53                     _hexpowers:
   169                           	opt stack 0
   170  000F53  0001               	dw	1
   171  000F55  0010               	dw	16
   172  000F57  0100               	dw	256
   173  000F59  1000               	dw	4096
   174  000F5B                     __end_of_hexpowers:
   175                           	opt stack 0
   176  0000                     _RPOR17	set	3799
   177  0000                     _RPINR16	set	3830
   178  0000                     _RPINR1	set	3815
   179  0000                     _PPSCONbits	set	3839
   180  0000                     _ANCON1	set	3913
   181  0000                     _ANCON0	set	3912
   182  0000                     _TMR0L	set	4054
   183  0000                     _TXREG2	set	4009
   184  0000                     _TXSTA2bits	set	4008
   185  0000                     _RCREG2	set	4010
   186  0000                     _RCSTA2bits	set	3996
   187  0000                     _RCSTA2	set	3996
   188  0000                     _TXSTA2	set	4008
   189  0000                     _SPBRG2	set	4011
   190  0000                     _SPBRGH2	set	3965
   191  0000                     _BAUDCON1bits	set	3966
   192  0000                     _INTCON3bits	set	4080
   193  0000                     _LATCbits	set	3979
   194  0000                     _SSP1CON1	set	4038
   195  0000                     _SSP1STAT	set	4039
   196  0000                     _TRISCbits	set	3988
   197  0000                     _LATDbits	set	3980
   198  0000                     _TRISDbits	set	3989
   199  0000                     _LATBbits	set	3978
   200  0000                     _TRISAbits	set	3986
   201  0000                     _TRISBbits	set	3987
   202  0000                     _LATE	set	3981
   203  0000                     _LATD	set	3980
   204  0000                     _LATB	set	3978
   205  0000                     _LATA	set	3977
   206  0000                     _TRISE	set	3990
   207  0000                     _TRISC	set	3988
   208  0000                     _TRISB	set	3987
   209  0000                     _TRISA	set	3986
   210  0000                     _INTCON2bits	set	4081
   211  0000                     _EECON2	set	4007
   212  0000                     _INTCON	set	4082
   213  0000                     _OSCTUNEbits	set	3995
   214  0000                     _WDTCONbits	set	4032
   215  0000                     _OSCCON	set	4051
   216  0000                     _TMR1H	set	4047
   217  0000                     _TMR1L	set	4046
   218  0000                     _T1CONbits	set	4045
   219  0000                     _PIE1bits	set	3997
   220  0000                     _T1CON	set	4045
   221  0000                     _SSP2CON1bits	set	3954
   222  0000                     _SSP1CON1bits	set	4038
   223  0000                     _SSP1BUF	set	4041
   224  0000                     _PIR1bits	set	3998
   225  0000                     _INTCONbits	set	4082
   226  0000                     _PIE3bits	set	4003
   227  0000                     _SSP2CON2	set	3953
   228  0000                     _SSP2CON1	set	3954
   229  0000                     _SSP2ADD	set	3956
   230  0000                     _SSP2STAT	set	3955
   231  0000                     _PIR3bits	set	4004
   232  0000                     _TRISD	set	3989
   233  0000                     _SSP2BUF	set	3957
   234  0000                     _SSP2CON2bits	set	3953
   235  0000                     _PORTBbits	set	3969
   236  000F5B  30                 	db	48	;'0'
   237  000F5C  31                 	db	49	;'1'
   238  000F5D  32                 	db	50	;'2'
   239  000F5E  33                 	db	51	;'3'
   240  000F5F  34                 	db	52	;'4'
   241  000F60  35                 	db	53	;'5'
   242  000F61  36                 	db	54	;'6'
   243  000F62  37                 	db	55	;'7'
   244  000F63  38                 	db	56	;'8'
   245  000F64  39                 	db	57	;'9'
   246  000F65  41                 	db	65	;'A'
   247  000F66  42                 	db	66	;'B'
   248  000F67  43                 	db	67	;'C'
   249  000F68  44                 	db	68	;'D'
   250  000F69  45                 	db	69	;'E'
   251  000F6A  46                 	db	70	;'F'
   252  000F6B  00                 	db	0
   253  000F6C  30                 	db	48	;'0'
   254  000F6D  31                 	db	49	;'1'
   255  000F6E  32                 	db	50	;'2'
   256  000F6F  33                 	db	51	;'3'
   257  000F70  34                 	db	52	;'4'
   258  000F71  35                 	db	53	;'5'
   259  000F72  36                 	db	54	;'6'
   260  000F73  37                 	db	55	;'7'
   261  000F74  38                 	db	56	;'8'
   262  000F75  39                 	db	57	;'9'
   263  000F76  61                 	db	97	;'a'
   264  000F77  62                 	db	98	;'b'
   265  000F78  63                 	db	99	;'c'
   266  000F79  64                 	db	100	;'d'
   267  000F7A  65                 	db	101	;'e'
   268  000F7B  66                 	db	102	;'f'
   269  000F7C  00                 	db	0
   270  000F7D  52                 	db	82	;'R'
   271  000F7E  58                 	db	88	;'X'
   272  000F7F  20                 	db	32
   273  000F80  4D                 	db	77	;'M'
   274  000F81  65                 	db	101	;'e'
   275  000F82  73                 	db	115	;'s'
   276  000F83  73                 	db	115	;'s'
   277  000F84  61                 	db	97	;'a'
   278  000F85  67                 	db	103	;'g'
   279  000F86  65                 	db	101	;'e'
   280  000F87  73                 	db	115	;'s'
   281  000F88  3A                 	db	58	;':'
   282  000F89  20                 	db	32
   283  000F8A  25                 	db	37
   284  000F8B  33                 	db	51	;'3'
   285  000F8C  64                 	db	100	;'d'
   286  000F8D  00                 	db	0
   287  000F8E  54                 	db	84	;'T'
   288  000F8F  58                 	db	88	;'X'
   289  000F90  20                 	db	32
   290  000F91  4D                 	db	77	;'M'
   291  000F92  65                 	db	101	;'e'
   292  000F93  73                 	db	115	;'s'
   293  000F94  73                 	db	115	;'s'
   294  000F95  61                 	db	97	;'a'
   295  000F96  67                 	db	103	;'g'
   296  000F97  65                 	db	101	;'e'
   297  000F98  73                 	db	115	;'s'
   298  000F99  3A                 	db	58	;':'
   299  000F9A  20                 	db	32
   300  000F9B  25                 	db	37
   301  000F9C  33                 	db	51	;'3'
   302  000F9D  64                 	db	100	;'d'
   303  000F9E  00                 	db	0
   304  000F9F                     STR_3:
   305  000F9F  54                 	db	84	;'T'
   306  000FA0  65                 	db	101	;'e'
   307  000FA1  73                 	db	115	;'s'
   308  000FA2  74                 	db	116	;'t'
   309  000FA3  00                 	db	0
   310  000FA4                     STR_4:
   311  000FA4  6F                 	db	111	;'o'
   312  000FA5  6B                 	db	107	;'k'
   313  000FA6  00                 	db	0
   314                           
   315                           ; #config settings
   316  000FA7  00                 	db	0	; dummy byte at the end
   317  0000                     
   318                           	psect	cinit
   319  001058                     __pcinit:
   320                           	opt stack 0
   321  001058                     start_initialization:
   322                           	opt stack 0
   323  001058                     __initialization:
   324                           	opt stack 0
   325                           
   326                           ; Initialize objects allocated to BANK1 (8 bytes)
   327                           ; load TBLPTR registers with __pidataBANK1
   328  001058  0E88               	movlw	low __pidataBANK1
   329  00105A  6EF6               	movwf	tblptrl,c
   330  00105C  0E15               	movlw	high __pidataBANK1
   331  00105E  6EF7               	movwf	tblptrh,c
   332  001060  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   333  001062  6EF8               	movwf	tblptru,c
   334  001064  EE01  F09C         	lfsr	0,__pdataBANK1
   335  001068  EE10 F008          	lfsr	1,8
   336  00106C                     copy_data0:
   337  00106C  0009               	tblrd		*+
   338  00106E  CFF5 FFEE          	movff	tablat,postinc0
   339  001072  50E5               	movf	postdec1,w,c
   340  001074  50E1               	movf	fsr1l,w,c
   341  001076  E1FA               	bnz	copy_data0
   342                           
   343                           ; Initialize objects allocated to BANK0 (1 bytes)
   344                           ; load TBLPTR registers with __pidataBANK0
   345  001078  0E94               	movlw	low __pidataBANK0
   346  00107A  6EF6               	movwf	tblptrl,c
   347  00107C  0E15               	movlw	high __pidataBANK0
   348  00107E  6EF7               	movwf	tblptrh,c
   349  001080  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   350  001082  6EF8               	movwf	tblptru,c
   351  001084  0009               	tblrd		*+	;fetch initializer
   352  001086  CFF5 F0FC          	movff	tablat,__pdataBANK0
   353                           
   354                           ; Initialize objects allocated to COMRAM (2 bytes)
   355                           ; load TBLPTR registers with __pidataCOMRAM
   356  00108A  0E90               	movlw	low __pidataCOMRAM
   357  00108C  6EF6               	movwf	tblptrl,c
   358  00108E  0E15               	movlw	high __pidataCOMRAM
   359  001090  6EF7               	movwf	tblptrh,c
   360  001092  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   361  001094  6EF8               	movwf	tblptru,c
   362  001096  0009               	tblrd		*+	;fetch initializer
   363  001098  CFF5 F05B          	movff	tablat,__pdataCOMRAM
   364  00109C  0009               	tblrd		*+	;fetch initializer
   365  00109E  CFF5 F05C          	movff	tablat,__pdataCOMRAM+1
   366                           
   367                           ; Clear objects allocated to BANK3 (140 bytes)
   368  0010A2  EE03  F000         	lfsr	0,__pbssBANK3
   369  0010A6  0E8C               	movlw	140
   370  0010A8                     clear_0:
   371  0010A8  6AEE               	clrf	postinc0,c
   372  0010AA  06E8               	decf	wreg,f,c
   373  0010AC  E1FD               	bnz	clear_0
   374                           
   375                           ; Clear objects allocated to BANK2 (160 bytes)
   376  0010AE  EE02  F000         	lfsr	0,__pbssBANK2
   377  0010B2  0EA0               	movlw	160
   378  0010B4                     clear_1:
   379  0010B4  6AEE               	clrf	postinc0,c
   380  0010B6  06E8               	decf	wreg,f,c
   381  0010B8  E1FD               	bnz	clear_1
   382                           
   383                           ; Clear objects allocated to BANK1 (156 bytes)
   384  0010BA  EE01  F000         	lfsr	0,__pbssBANK1
   385  0010BE  0E9C               	movlw	156
   386  0010C0                     clear_2:
   387  0010C0  6AEE               	clrf	postinc0,c
   388  0010C2  06E8               	decf	wreg,f,c
   389  0010C4  E1FD               	bnz	clear_2
   390                           
   391                           ; Clear objects allocated to BANK0 (138 bytes)
   392  0010C6  EE00  F060         	lfsr	0,__pbssBANK0
   393  0010CA  0E8A               	movlw	138
   394  0010CC                     clear_3:
   395  0010CC  6AEE               	clrf	postinc0,c
   396  0010CE  06E8               	decf	wreg,f,c
   397  0010D0  E1FD               	bnz	clear_3
   398                           
   399                           ; Clear objects allocated to COMRAM (44 bytes)
   400  0010D2  EE00  F02F         	lfsr	0,__pbssCOMRAM
   401  0010D6  0E2C               	movlw	44
   402  0010D8                     clear_4:
   403  0010D8  6AEE               	clrf	postinc0,c
   404  0010DA  06E8               	decf	wreg,f,c
   405  0010DC  E1FD               	bnz	clear_4
   406  0010DE                     end_of_initialization:
   407                           	opt stack 0
   408  0010DE                     __end_of__initialization:
   409                           	opt stack 0
   410  0010DE  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   411  0010E0  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   412  0010E2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   413  0010E4  6EF8               	movwf	tblptru,c
   414  0010E6  0100               	movlb	0
   415  0010E8  EF45  F00A         	goto	_main	;jump to C main() function
   416                           tblptru	equ	0xFF8
   417                           tblptrh	equ	0xFF7
   418                           tblptrl	equ	0xFF6
   419                           tablat	equ	0xFF5
   420                           postinc0	equ	0xFEE
   421                           wreg	equ	0xFE8
   422                           postdec1	equ	0xFE5
   423                           fsr1l	equ	0xFE1
   424                           
   425                           	psect	bssCOMRAM
   426  00002F                     __pbssCOMRAM:
   427                           	opt stack 0
   428  00002F                     _MACRxPacket:
   429                           	opt stack 0
   430  00002F                     	ds	11
   431  00003A                     _MTP:
   432                           	opt stack 0
   433  00003A                     	ds	7
   434  000041                     _MiWiStateMachine:
   435                           	opt stack 0
   436  000041                     	ds	2
   437  000043                     _MRF24J40Status:
   438                           	opt stack 0
   439  000043                     	ds	1
   440  000044                     _role:
   441                           	opt stack 0
   442  000044                     	ds	1
   443  000045                     _MiWiSeqNum:
   444                           	opt stack 0
   445  000045                     	ds	1
   446  000046                     _myParent:
   447                           	opt stack 0
   448  000046                     	ds	1
   449  000047                     _TxData:
   450                           	opt stack 0
   451  000047                     	ds	1
   452  000048                     _tempNodeStatus:
   453                           	opt stack 0
   454  000048                     	ds	1
   455  000049                     _ActiveScanResultIndex:
   456                           	opt stack 0
   457  000049                     	ds	1
   458  00004A                     _ConnMode:
   459                           	opt stack 0
   460  00004A                     	ds	1
   461  00004B                     _timerExtension1:
   462                           	opt stack 0
   463  00004B                     	ds	1
   464  00004C                     _TextPtr:
   465                           	opt stack 0
   466  00004C                     	ds	1
   467  00004D                     _CommandPtr:
   468                           	opt stack 0
   469  00004D                     	ds	1
   470  00004E                     _TextLen:
   471                           	opt stack 0
   472  00004E                     	ds	1
   473  00004F                     _CommandLen:
   474                           	opt stack 0
   475  00004F                     	ds	1
   476  000050                     _myNetworkAddress:
   477                           	opt stack 0
   478  000050                     	ds	2
   479  000052                     _MAC_PANID:
   480                           	opt stack 0
   481  000052                     	ds	2
   482  000054                     _myPANID:
   483                           	opt stack 0
   484  000054                     	ds	2
   485  000056                     _myShortAddress:
   486                           	opt stack 0
   487  000056                     	ds	2
   488  000058                     _tempShortAddress:
   489                           	opt stack 0
   490  000058                     	ds	2
   491  00005A                     _currentChannel:
   492                           	opt stack 0
   493  00005A                     	ds	1
   494                           tblptru	equ	0xFF8
   495                           tblptrh	equ	0xFF7
   496                           tblptrl	equ	0xFF6
   497                           tablat	equ	0xFF5
   498                           postinc0	equ	0xFEE
   499                           wreg	equ	0xFE8
   500                           postdec1	equ	0xFE5
   501                           fsr1l	equ	0xFE1
   502                           
   503                           	psect	dataCOMRAM
   504  00005B                     __pdataCOMRAM:
   505                           	opt stack 0
   506  00005B                     _BankIndex:
   507                           	opt stack 0
   508  00005B                     	ds	1
   509  00005C                     _defaultHops:
   510                           	opt stack 0
   511  00005C                     	ds	1
   512                           tblptru	equ	0xFF8
   513                           tblptrh	equ	0xFF7
   514                           tblptrl	equ	0xFF6
   515                           tablat	equ	0xFF5
   516                           postinc0	equ	0xFEE
   517                           wreg	equ	0xFE8
   518                           postdec1	equ	0xFE5
   519                           fsr1l	equ	0xFE1
   520                           
   521                           	psect	bssBANK0
   522  000060                     __pbssBANK0:
   523                           	opt stack 0
   524  000060                     _rxMessage:
   525                           	opt stack 0
   526  000060                     	ds	10
   527  00006A                     _RouterFailures:
   528                           	opt stack 0
   529  00006A                     	ds	8
   530  000072                     _RoutingTable:
   531                           	opt stack 0
   532  000072                     	ds	8
   533  00007A                     _tempLongAddress:
   534                           	opt stack 0
   535  00007A                     	ds	8
   536  000082                     _LCDCommand:
   537                           	opt stack 0
   538  000082                     	ds	4
   539  000086                     _switch1PressTime:
   540                           	opt stack 0
   541  000086                     	ds	4
   542  00008A                     _switch0PressTime:
   543                           	opt stack 0
   544  00008A                     	ds	4
   545  00008E                     _MACInitParams:
   546                           	opt stack 0
   547  00008E                     	ds	3
   548  000091                     _failureCounter:
   549                           	opt stack 0
   550  000091                     	ds	2
   551  000093                     _AcknowledgementAddr:
   552                           	opt stack 0
   553  000093                     	ds	2
   554  000095                     _MACCurrentChannel:
   555                           	opt stack 0
   556  000095                     	ds	1
   557  000096                     _IEEESeqNum:
   558                           	opt stack 0
   559  000096                     	ds	1
   560  000097                     _knownCoordinators:
   561                           	opt stack 0
   562  000097                     	ds	1
   563  000098                     _MiWiAckRequired:
   564                           	opt stack 0
   565  000098                     	ds	1
   566  000099                     _MiWiCapacityInfo:
   567                           	opt stack 0
   568  000099                     	ds	1
   569  00009A                     _timerExtension2:
   570                           	opt stack 0
   571  00009A                     	ds	1
   572  00009B                     _TxBuffer:
   573                           	opt stack 0
   574  00009B                     	ds	51
   575  0000CE                     _openSocketInfo:
   576                           	opt stack 0
   577  0000CE                     	ds	26
   578  0000E8                     _tempPANID:
   579                           	opt stack 0
   580  0000E8                     	ds	2
   581                           tblptru	equ	0xFF8
   582                           tblptrh	equ	0xFF7
   583                           tblptrl	equ	0xFF6
   584                           tablat	equ	0xFF5
   585                           postinc0	equ	0xFEE
   586                           wreg	equ	0xFE8
   587                           postdec1	equ	0xFE5
   588                           fsr1l	equ	0xFE1
   589                           
   590                           	psect	dataBANK0
   591  0000FC                     __pdataBANK0:
   592                           	opt stack 0
   593  0000FC                     _AcknowledgementSeq:
   594                           	opt stack 0
   595  0000FC                     	ds	1
   596                           tblptru	equ	0xFF8
   597                           tblptrh	equ	0xFF7
   598                           tblptrl	equ	0xFF6
   599                           tablat	equ	0xFF5
   600                           postinc0	equ	0xFEE
   601                           wreg	equ	0xFE8
   602                           postdec1	equ	0xFE5
   603                           fsr1l	equ	0xFE1
   604                           
   605                           	psect	bssBANK1
   606  000100                     __pbssBANK1:
   607                           	opt stack 0
   608  000100                     _BroadcastRecords:
   609                           	opt stack 0
   610  000100                     	ds	32
   611  000120                     _ConnectionTable:
   612                           	opt stack 0
   613  000120                     	ds	91
   614  00017B                     _LCDText:
   615                           	opt stack 0
   616  00017B                     	ds	33
   617                           tblptru	equ	0xFF8
   618                           tblptrh	equ	0xFF7
   619                           tblptrl	equ	0xFF6
   620                           tablat	equ	0xFF5
   621                           postinc0	equ	0xFEE
   622                           wreg	equ	0xFE8
   623                           postdec1	equ	0xFE5
   624                           fsr1l	equ	0xFE1
   625                           
   626                           	psect	dataBANK1
   627  00019C                     __pdataBANK1:
   628                           	opt stack 0
   629  00019C                     _myLongAddress:
   630                           	opt stack 0
   631  00019C                     	ds	8
   632                           tblptru	equ	0xFF8
   633                           tblptrh	equ	0xFF7
   634                           tblptrl	equ	0xFF6
   635                           tablat	equ	0xFF5
   636                           postinc0	equ	0xFEE
   637                           wreg	equ	0xFE8
   638                           postdec1	equ	0xFE5
   639                           fsr1l	equ	0xFE1
   640                           
   641                           	psect	bssBANK2
   642  000200                     __pbssBANK2:
   643                           	opt stack 0
   644  000200                     _RxBuffer:
   645                           	opt stack 0
   646  000200                     	ds	160
   647                           tblptru	equ	0xFF8
   648                           tblptrh	equ	0xFF7
   649                           tblptrl	equ	0xFF6
   650                           tablat	equ	0xFF5
   651                           postinc0	equ	0xFEE
   652                           wreg	equ	0xFE8
   653                           postdec1	equ	0xFE5
   654                           fsr1l	equ	0xFE1
   655                           
   656                           	psect	bssBANK3
   657  000300                     __pbssBANK3:
   658                           	opt stack 0
   659  000300                     _ActiveScanResults:
   660                           	opt stack 0
   661  000300                     	ds	140
   662                           tblptru	equ	0xFF8
   663                           tblptrh	equ	0xFF7
   664                           tblptrl	equ	0xFF6
   665                           tablat	equ	0xFF5
   666                           postinc0	equ	0xFEE
   667                           wreg	equ	0xFE8
   668                           postdec1	equ	0xFE5
   669                           fsr1l	equ	0xFE1
   670                           
   671                           	psect	cstackBANK0
   672  0000EA                     __pcstackBANK0:
   673                           	opt stack 0
   674  0000EA                     ?___lmul:
   675                           	opt stack 0
   676  0000EA                     I2CWrite@BufferLen:
   677                           	opt stack 0
   678  0000EA                     uartWrite@c:
   679                           	opt stack 0
   680  0000EA                     ___lmul@multiplier:
   681                           	opt stack 0
   682                           
   683                           ; 4 bytes @ 0x0
   684  0000EA                     	ds	1
   685  0000EB                     I2CWrite@Commandlen:
   686                           	opt stack 0
   687  0000EB                     uartRead@val:
   688                           	opt stack 0
   689  0000EB                     __uartPrint@str:
   690                           	opt stack 0
   691                           
   692                           ; 2 bytes @ 0x1
   693  0000EB                     	ds	2
   694  0000ED                     ??__uartPrint:
   695                           
   696                           ; 1 bytes @ 0x3
   697  0000ED                     	ds	1
   698  0000EE                     ___lmul@multiplicand:
   699                           	opt stack 0
   700                           
   701                           ; 4 bytes @ 0x4
   702  0000EE                     	ds	1
   703  0000EF                     __uartPrint@i:
   704                           	opt stack 0
   705                           
   706                           ; 2 bytes @ 0x5
   707  0000EF                     	ds	3
   708  0000F2                     ___lmul@product:
   709                           	opt stack 0
   710                           
   711                           ; 4 bytes @ 0x8
   712  0000F2                     	ds	4
   713  0000F6                     DELAY_ms@ms:
   714                           	opt stack 0
   715                           
   716                           ; 2 bytes @ 0xC
   717  0000F6                     	ds	2
   718  0000F8                     DELAY_ms@cyclesRequiredForEntireDelay:
   719                           	opt stack 0
   720                           
   721                           ; 4 bytes @ 0xE
   722  0000F8                     	ds	4
   723  0000FC                     tblptru	equ	0xFF8
   724                           tblptrh	equ	0xFF7
   725                           tblptrl	equ	0xFF6
   726                           tablat	equ	0xFF5
   727                           postinc0	equ	0xFEE
   728                           wreg	equ	0xFE8
   729                           postdec1	equ	0xFE5
   730                           fsr1l	equ	0xFE1
   731                           
   732                           ; 1 bytes @ 0x12
   733                           
   734                           	psect	cstackCOMRAM
   735  000001                     __pcstackCOMRAM:
   736                           	opt stack 0
   737  000001                     ?i2___lmul:
   738                           	opt stack 0
   739  000001                     SPIPut@i:
   740                           	opt stack 0
   741  000001                     i2___lmul@multiplier:
   742                           	opt stack 0
   743                           
   744                           ; 4 bytes @ 0x0
   745  000001                     	ds	1
   746  000002                     SPIPut@v:
   747                           	opt stack 0
   748                           
   749                           ; 1 bytes @ 0x1
   750  000002                     	ds	1
   751  000003                     PHYSetShortRAMAddr@value:
   752                           	opt stack 0
   753  000003                     PHYGetShortRAMAddr@address:
   754                           	opt stack 0
   755  000003                     PHYGetLongRAMAddr@address:
   756                           	opt stack 0
   757                           
   758                           ; 2 bytes @ 0x2
   759  000003                     	ds	1
   760  000004                     PHYSetShortRAMAddr@address:
   761                           	opt stack 0
   762  000004                     PHYGetShortRAMAddr@toReturn:
   763                           	opt stack 0
   764                           
   765                           ; 1 bytes @ 0x3
   766  000004                     	ds	1
   767  000005                     ??_PHYGetLongRAMAddr:
   768  000005                     PHYSetShortRAMAddr@tmpRFIE:
   769                           	opt stack 0
   770  000005                     PHYGetShortRAMAddr@tmpRFIE:
   771                           	opt stack 0
   772  000005                     i2___lmul@multiplicand:
   773                           	opt stack 0
   774                           
   775                           ; 4 bytes @ 0x4
   776  000005                     	ds	2
   777  000007                     PHYGetLongRAMAddr@toReturn:
   778                           	opt stack 0
   779                           
   780                           ; 1 bytes @ 0x6
   781  000007                     	ds	1
   782  000008                     PHYGetLongRAMAddr@tmpRFIE:
   783                           	opt stack 0
   784                           
   785                           ; 1 bytes @ 0x7
   786  000008                     	ds	1
   787  000009                     i2___lmul@product:
   788                           	opt stack 0
   789                           
   790                           ; 4 bytes @ 0x8
   791  000009                     	ds	4
   792  00000D                     i2DELAY_ms@ms:
   793                           	opt stack 0
   794                           
   795                           ; 2 bytes @ 0xC
   796  00000D                     	ds	2
   797  00000F                     i2DELAY_ms@cyclesRequiredForEntireDelay:
   798                           	opt stack 0
   799                           
   800                           ; 4 bytes @ 0xE
   801  00000F                     	ds	4
   802  000013                     ??_high_isr:
   803                           
   804                           ; 1 bytes @ 0x12
   805  000013                     	ds	23
   806  00002A                     high_isr@results:
   807                           	opt stack 0
   808                           
   809                           ; 1 bytes @ 0x29
   810  00002A                     	ds	1
   811  00002B                     high_isr@flags:
   812                           	opt stack 0
   813                           
   814                           ; 2 bytes @ 0x2A
   815  00002B                     	ds	2
   816  00002D                     high_isr@RxBank:
   817                           	opt stack 0
   818                           
   819                           ; 1 bytes @ 0x2C
   820  00002D                     	ds	1
   821  00002E                     high_isr@i:
   822                           	opt stack 0
   823                           
   824                           ; 1 bytes @ 0x2D
   825  00002E                     	ds	1
   826                           tblptru	equ	0xFF8
   827                           tblptrh	equ	0xFF7
   828                           tblptrl	equ	0xFF6
   829                           tablat	equ	0xFF5
   830                           postinc0	equ	0xFEE
   831                           wreg	equ	0xFE8
   832                           postdec1	equ	0xFE5
   833                           fsr1l	equ	0xFE1
   834                           
   835 ;;
   836 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   837 ;;
   838 ;; *************** function _main *****************
   839 ;; Defined at:
   840 ;;		line 42 in file "8bitswdk_pic18f46j50_24j40/firmware/src/main.c"
   841 ;; Parameters:    Size  Location     Type
   842 ;;		None
   843 ;; Auto vars:     Size  Location     Type
   844 ;;		None
   845 ;; Return value:  Size  Location     Type
   846 ;;                  1    wreg      void 
   847 ;; Registers used:
   848 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   849 ;; Tracked objects:
   850 ;;		On entry : 0/0
   851 ;;		On exit  : 0/0
   852 ;;		Unchanged: 0/0
   853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   858 ;;Total ram usage:        0 bytes
   859 ;; Hardware stack levels required when called:    9
   860 ;; This function calls:
   861 ;;		_SYSTEM_Initialize
   862 ;;		__uartPrint
   863 ;;		_uartInitialize
   864 ;;		_uartRead
   865 ;; This function is called by:
   866 ;;		Startup code after reset
   867 ;; This function uses a non-reentrant model
   868 ;;
   869                           
   870                           	psect	text0
   871  00148A                     __ptext0:
   872                           	opt stack 0
   873  00148A                     _main:
   874                           	opt stack 22
   875                           
   876                           ;main.c: 44: SYSTEM_Initialize();
   877                           
   878                           ;incstack = 0
   879  00148A  EC05  F009         	call	_SYSTEM_Initialize	;wreg free
   880                           
   881                           ;main.c: 45: uartInitialize();
   882  00148E  ECA0  F00A         	call	_uartInitialize	;wreg free
   883                           
   884                           ;main.c: 46: _uartPrint((char*)"Test");
   885  001492  0E9F               	movlw	low STR_3
   886  001494  0100               	movlb	0	; () banked
   887  001496  6FEB               	movwf	__uartPrint@str& (0+255),b
   888  001498  0E0F               	movlw	high STR_3
   889  00149A  6FEC               	movwf	(__uartPrint@str+1)& (0+255),b
   890  00149C  EC05  F00A         	call	__uartPrint	;wreg free
   891  0014A0                     
   892                           ;main.c: 49: {
   893                           ;main.c: 50: if (PIR3bits.RC2IF)
   894  0014A0  AAA4               	btfss	4004,5,c	;volatile
   895  0014A2  D7FE               	goto	l278
   896                           
   897                           ;main.c: 51: {
   898                           ;main.c: 52: _uartPrint((char*)"ok");
   899  0014A4  0EA4               	movlw	low STR_4
   900  0014A6  0100               	movlb	0	; () banked
   901  0014A8  6FEB               	movwf	__uartPrint@str& (0+255),b
   902  0014AA  0E0F               	movlw	high STR_4
   903  0014AC  6FEC               	movwf	(__uartPrint@str+1)& (0+255),b
   904  0014AE  EC05  F00A         	call	__uartPrint	;wreg free
   905                           
   906                           ;main.c: 53: uartRead();
   907  0014B2  EC2C  F00A         	call	_uartRead	;wreg free
   908  0014B6  D7F4               	goto	l278
   909  0014B8                     __end_of_main:
   910                           	opt stack 0
   911                           tblptru	equ	0xFF8
   912                           tblptrh	equ	0xFF7
   913                           tblptrl	equ	0xFF6
   914                           tablat	equ	0xFF5
   915                           postinc0	equ	0xFEE
   916                           wreg	equ	0xFE8
   917                           postdec1	equ	0xFE5
   918                           fsr1l	equ	0xFE1
   919                           
   920 ;; *************** function _uartRead *****************
   921 ;; Defined at:
   922 ;;		line 49 in file "8bitswdk_pic18f46j50_24j40/firmware/src/VT100.c"
   923 ;; Parameters:    Size  Location     Type
   924 ;;		None
   925 ;; Auto vars:     Size  Location     Type
   926 ;;  val             1    1[BANK0 ] unsigned char 
   927 ;; Return value:  Size  Location     Type
   928 ;;                  1    wreg      unsigned char 
   929 ;; Registers used:
   930 ;;		wreg, status,2, status,0, cstack
   931 ;; Tracked objects:
   932 ;;		On entry : 0/0
   933 ;;		On exit  : 0/0
   934 ;;		Unchanged: 0/0
   935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   937 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   939 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   940 ;;Total ram usage:        1 bytes
   941 ;; Hardware stack levels used:    1
   942 ;; Hardware stack levels required when called:    6
   943 ;; This function calls:
   944 ;;		_uartWrite
   945 ;;		_vT100EraseEndOfLine
   946 ;; This function is called by:
   947 ;;		_main
   948 ;; This function uses a non-reentrant model
   949 ;;
   950                           
   951                           	psect	text1
   952  001458                     __ptext1:
   953                           	opt stack 0
   954  001458                     _uartRead:
   955                           	opt stack 24
   956                           
   957                           ;VT100.c: 50: uint8_t val;
   958                           ;VT100.c: 51: if(RCSTA2bits.OERR) {
   959                           
   960                           ;incstack = 0
   961  001458  A29C               	btfss	3996,1,c	;volatile
   962  00145A  D002               	goto	l314
   963                           
   964                           ;VT100.c: 52: RCSTA2bits.CREN = 0;
   965  00145C  989C               	bcf	3996,4,c	;volatile
   966                           
   967                           ;VT100.c: 53: RCSTA2bits.CREN = 1;
   968  00145E  889C               	bsf	3996,4,c	;volatile
   969  001460                     l314:
   970                           
   971                           ;VT100.c: 54: }
   972                           ;VT100.c: 56: val = RCREG2;
   973  001460  CFAA F0EB          	movff	4010,uartRead@val	;volatile
   974                           
   975                           ;VT100.c: 57: uartWrite(val);
   976  001464  0100               	movlb	0	; () banked
   977  001466  51EB               	movf	uartRead@val& (0+255),w,b
   978  001468  ECB8  F00A         	call	_uartWrite
   979                           
   980                           ;VT100.c: 58: if(val == 0x08) vT100EraseEndOfLine();
   981  00146C  0E08               	movlw	8
   982  00146E  0100               	movlb	0	; () banked
   983  001470  19EB               	xorwf	uartRead@val& (0+255),w,b
   984  001472  B4D8               	btfsc	status,2,c
   985                           
   986                           ; BSR set to: 0
   987  001474  ECC9  F00A         	call	_vT100EraseEndOfLine	;wreg free
   988                           
   989                           ;VT100.c: 59: if(val == 0x0D) uartWrite(0x0A);
   990  001478  0E0D               	movlw	13
   991  00147A  0100               	movlb	0	; () banked
   992  00147C  19EB               	xorwf	uartRead@val& (0+255),w,b
   993  00147E  A4D8               	btfss	status,2,c
   994  001480  0012               	return	
   995                           
   996                           ; BSR set to: 0
   997  001482  0E0A               	movlw	10
   998  001484  ECB8  F00A         	call	_uartWrite
   999  001488  0012               	return	
  1000  00148A                     __end_of_uartRead:
  1001                           	opt stack 0
  1002                           tblptru	equ	0xFF8
  1003                           tblptrh	equ	0xFF7
  1004                           tblptrl	equ	0xFF6
  1005                           tablat	equ	0xFF5
  1006                           postinc0	equ	0xFEE
  1007                           wreg	equ	0xFE8
  1008                           postdec1	equ	0xFE5
  1009                           fsr1l	equ	0xFE1
  1010                           status	equ	0xFD8
  1011                           
  1012 ;; *************** function _vT100EraseEndOfLine *****************
  1013 ;; Defined at:
  1014 ;;		line 141 in file "8bitswdk_pic18f46j50_24j40/firmware/src/VT100.c"
  1015 ;; Parameters:    Size  Location     Type
  1016 ;;		None
  1017 ;; Auto vars:     Size  Location     Type
  1018 ;;		None
  1019 ;; Return value:  Size  Location     Type
  1020 ;;                  1    wreg      void 
  1021 ;; Registers used:
  1022 ;;		None
  1023 ;; Tracked objects:
  1024 ;;		On entry : 0/0
  1025 ;;		On exit  : 0/0
  1026 ;;		Unchanged: 0/0
  1027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1032 ;;Total ram usage:        0 bytes
  1033 ;; Hardware stack levels used:    1
  1034 ;; Hardware stack levels required when called:    5
  1035 ;; This function calls:
  1036 ;;		Nothing
  1037 ;; This function is called by:
  1038 ;;		_uartRead
  1039 ;; This function uses a non-reentrant model
  1040 ;;
  1041                           
  1042                           	psect	text2
  1043  001592                     __ptext2:
  1044                           	opt stack 0
  1045  001592                     _vT100EraseEndOfLine:
  1046                           	opt stack 24
  1047                           
  1048                           ;incstack = 0
  1049  001592  0012               	return		;funcret
  1050  001594                     __end_of_vT100EraseEndOfLine:
  1051                           	opt stack 0
  1052                           tblptru	equ	0xFF8
  1053                           tblptrh	equ	0xFF7
  1054                           tblptrl	equ	0xFF6
  1055                           tablat	equ	0xFF5
  1056                           postinc0	equ	0xFEE
  1057                           wreg	equ	0xFE8
  1058                           postdec1	equ	0xFE5
  1059                           fsr1l	equ	0xFE1
  1060                           status	equ	0xFD8
  1061                           
  1062 ;; *************** function _uartInitialize *****************
  1063 ;; Defined at:
  1064 ;;		line 28 in file "8bitswdk_pic18f46j50_24j40/firmware/src/VT100.c"
  1065 ;; Parameters:    Size  Location     Type
  1066 ;;		None
  1067 ;; Auto vars:     Size  Location     Type
  1068 ;;		None
  1069 ;; Return value:  Size  Location     Type
  1070 ;;                  1    wreg      void 
  1071 ;; Registers used:
  1072 ;;		wreg, status,2
  1073 ;; Tracked objects:
  1074 ;;		On entry : 0/0
  1075 ;;		On exit  : 0/0
  1076 ;;		Unchanged: 0/0
  1077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1082 ;;Total ram usage:        0 bytes
  1083 ;; Hardware stack levels used:    1
  1084 ;; Hardware stack levels required when called:    5
  1085 ;; This function calls:
  1086 ;;		Nothing
  1087 ;; This function is called by:
  1088 ;;		_main
  1089 ;; This function uses a non-reentrant model
  1090 ;;
  1091                           
  1092                           	psect	text3
  1093  001540                     __ptext3:
  1094                           	opt stack 0
  1095  001540                     _uartInitialize:
  1096                           	opt stack 25
  1097                           
  1098                           ;VT100.c: 29: TRISCbits.TRISC6 = 0;
  1099                           
  1100                           ;incstack = 0
  1101  001540  9C94               	bcf	3988,6,c	;volatile
  1102                           
  1103                           ;VT100.c: 30: TRISDbits.TRISD2 = 1;
  1104  001542  8495               	bsf	3989,2,c	;volatile
  1105                           
  1106                           ;VT100.c: 31: BAUDCON1bits.BRG16 = 0;
  1107  001544  967E               	bcf	3966,3,c	;volatile
  1108                           
  1109                           ;VT100.c: 32: SPBRGH2 = 0;
  1110  001546  0E00               	movlw	0
  1111  001548  6E7D               	movwf	3965,c	;volatile
  1112                           
  1113                           ;VT100.c: 35: SPBRG2 = (8000000/2*4)/16/19200-1;
  1114  00154A  0E33               	movlw	51
  1115  00154C  6EAB               	movwf	4011,c	;volatile
  1116                           
  1117                           ;VT100.c: 36: TXSTA2 = 0x24;
  1118  00154E  0E24               	movlw	36
  1119  001550  6EA8               	movwf	4008,c	;volatile
  1120                           
  1121                           ;VT100.c: 37: RCSTA2=0x90;
  1122  001552  0E90               	movlw	144
  1123  001554  6E9C               	movwf	3996,c	;volatile
  1124  001556  0012               	return		;funcret
  1125  001558                     __end_of_uartInitialize:
  1126                           	opt stack 0
  1127                           tblptru	equ	0xFF8
  1128                           tblptrh	equ	0xFF7
  1129                           tblptrl	equ	0xFF6
  1130                           tablat	equ	0xFF5
  1131                           postinc0	equ	0xFEE
  1132                           wreg	equ	0xFE8
  1133                           postdec1	equ	0xFE5
  1134                           fsr1l	equ	0xFE1
  1135                           status	equ	0xFD8
  1136                           
  1137 ;; *************** function __uartPrint *****************
  1138 ;; Defined at:
  1139 ;;		line 75 in file "8bitswdk_pic18f46j50_24j40/firmware/src/VT100.c"
  1140 ;; Parameters:    Size  Location     Type
  1141 ;;  str             2    1[BANK0 ] PTR unsigned char 
  1142 ;;		 -> STR_4(3), STR_3(5), 
  1143 ;; Auto vars:     Size  Location     Type
  1144 ;;  i               2    5[BANK0 ] int 
  1145 ;; Return value:  Size  Location     Type
  1146 ;;                  1    wreg      void 
  1147 ;; Registers used:
  1148 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1149 ;; Tracked objects:
  1150 ;;		On entry : 0/0
  1151 ;;		On exit  : 0/0
  1152 ;;		Unchanged: 0/0
  1153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1154 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1155 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1156 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1157 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1158 ;;Total ram usage:        6 bytes
  1159 ;; Hardware stack levels used:    1
  1160 ;; Hardware stack levels required when called:    6
  1161 ;; This function calls:
  1162 ;;		_uartWrite
  1163 ;; This function is called by:
  1164 ;;		_main
  1165 ;; This function uses a non-reentrant model
  1166 ;;
  1167                           
  1168                           	psect	text4
  1169  00140A                     __ptext4:
  1170                           	opt stack 0
  1171  00140A                     __uartPrint:
  1172                           	opt stack 24
  1173                           
  1174                           ;VT100.c: 76: int i=0;
  1175                           
  1176                           ;incstack = 0
  1177  00140A  0E00               	movlw	0
  1178  00140C  0100               	movlb	0	; () banked
  1179  00140E  6FF0               	movwf	(__uartPrint@i+1)& (0+255),b
  1180  001410  0E00               	movlw	0
  1181  001412  6FEF               	movwf	__uartPrint@i& (0+255),b
  1182                           
  1183                           ;VT100.c: 77: while(str[i] != 0) uartWrite(str[i++]);
  1184  001414  D011               	goto	l326
  1185  001416                     
  1186                           ; BSR set to: 0
  1187                           
  1188                           ; BSR set to: 0
  1189  001416  51EF               	movf	__uartPrint@i& (0+255),w,b
  1190  001418  25EB               	addwf	__uartPrint@str& (0+255),w,b
  1191  00141A  6FED               	movwf	??__uartPrint& (0+255),b
  1192  00141C  51F0               	movf	(__uartPrint@i+1)& (0+255),w,b
  1193  00141E  21EC               	addwfc	(__uartPrint@str+1)& (0+255),w,b
  1194  001420  6FEE               	movwf	(??__uartPrint+1)& (0+255),b
  1195  001422  C0ED  FFF6         	movff	??__uartPrint,tblptrl
  1196  001426  C0EE  FFF7         	movff	??__uartPrint+1,tblptrh
  1197  00142A                     	if	0	;tblptru may be non-zero
  1198  00142A                     	endif
  1199  00142A                     	if	0	;tblptru may be non-zero
  1200  00142A                     	endif
  1201  00142A  0008               	tblrd		*
  1202  00142C  50F5               	movf	tablat,w,c
  1203  00142E  ECB8  F00A         	call	_uartWrite
  1204  001432  0100               	movlb	0	; () banked
  1205  001434  4BEF               	infsnz	__uartPrint@i& (0+255),f,b
  1206  001436  2BF0               	incf	(__uartPrint@i+1)& (0+255),f,b
  1207  001438                     l326:
  1208                           
  1209                           ; BSR set to: 0
  1210                           
  1211                           ; BSR set to: 0
  1212  001438  51EF               	movf	__uartPrint@i& (0+255),w,b
  1213  00143A  25EB               	addwf	__uartPrint@str& (0+255),w,b
  1214  00143C  6FED               	movwf	??__uartPrint& (0+255),b
  1215  00143E  51F0               	movf	(__uartPrint@i+1)& (0+255),w,b
  1216  001440  21EC               	addwfc	(__uartPrint@str+1)& (0+255),w,b
  1217  001442  6FEE               	movwf	(??__uartPrint+1)& (0+255),b
  1218  001444  C0ED  FFF6         	movff	??__uartPrint,tblptrl
  1219  001448  C0EE  FFF7         	movff	??__uartPrint+1,tblptrh
  1220  00144C                     	if	0	;tblptru may be non-zero
  1221  00144C                     	endif
  1222  00144C                     	if	0	;tblptru may be non-zero
  1223  00144C                     	endif
  1224  00144C  0008               	tblrd		*
  1225  00144E  50F5               	movf	tablat,w,c
  1226  001450  0900               	iorlw	0
  1227  001452  B4D8               	btfsc	status,2,c
  1228  001454  0012               	return	
  1229  001456  D7DF               	goto	l327
  1230  001458                     __end_of__uartPrint:
  1231                           	opt stack 0
  1232                           tblptru	equ	0xFF8
  1233                           tblptrh	equ	0xFF7
  1234                           tblptrl	equ	0xFF6
  1235                           tablat	equ	0xFF5
  1236                           postinc0	equ	0xFEE
  1237                           wreg	equ	0xFE8
  1238                           postdec1	equ	0xFE5
  1239                           fsr1l	equ	0xFE1
  1240                           status	equ	0xFD8
  1241                           
  1242 ;; *************** function _uartWrite *****************
  1243 ;; Defined at:
  1244 ;;		line 67 in file "8bitswdk_pic18f46j50_24j40/firmware/src/VT100.c"
  1245 ;; Parameters:    Size  Location     Type
  1246 ;;  c               1    wreg     unsigned char 
  1247 ;; Auto vars:     Size  Location     Type
  1248 ;;  c               1    0[BANK0 ] unsigned char 
  1249 ;; Return value:  Size  Location     Type
  1250 ;;                  1    wreg      void 
  1251 ;; Registers used:
  1252 ;;		wreg
  1253 ;; Tracked objects:
  1254 ;;		On entry : 0/0
  1255 ;;		On exit  : 0/0
  1256 ;;		Unchanged: 0/0
  1257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1259 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1261 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1262 ;;Total ram usage:        1 bytes
  1263 ;; Hardware stack levels used:    1
  1264 ;; Hardware stack levels required when called:    5
  1265 ;; This function calls:
  1266 ;;		Nothing
  1267 ;; This function is called by:
  1268 ;;		_uartRead
  1269 ;;		__uartPrint
  1270 ;;		_uartHexaPrint
  1271 ;; This function uses a non-reentrant model
  1272 ;;
  1273                           
  1274                           	psect	text5
  1275  001570                     __ptext5:
  1276                           	opt stack 0
  1277  001570                     _uartWrite:
  1278                           	opt stack 24
  1279                           
  1280                           ; BSR set to: 0
  1281                           ;incstack = 0
  1282                           ;uartWrite@c stored from wreg
  1283  001570  0100               	movlb	0	; () banked
  1284  001572  6FEA               	movwf	uartWrite@c& (0+255),b
  1285  001574                     
  1286                           ;VT100.c: 68: while(TXSTA2bits.TRMT == 0);
  1287  001574  A2A8               	btfss	4008,1,c	;volatile
  1288  001576  D7FE               	goto	l8849
  1289                           
  1290                           ;VT100.c: 69: TXREG2 = c;
  1291  001578  C0EA  FFA9         	movff	uartWrite@c,4009	;volatile
  1292  00157C  0012               	return		;funcret
  1293  00157E                     __end_of_uartWrite:
  1294                           	opt stack 0
  1295                           tblptru	equ	0xFF8
  1296                           tblptrh	equ	0xFF7
  1297                           tblptrl	equ	0xFF6
  1298                           tablat	equ	0xFF5
  1299                           postinc0	equ	0xFEE
  1300                           wreg	equ	0xFE8
  1301                           postdec1	equ	0xFE5
  1302                           fsr1l	equ	0xFE1
  1303                           status	equ	0xFD8
  1304                           
  1305 ;; *************** function _SYSTEM_Initialize *****************
  1306 ;; Defined at:
  1307 ;;		line 60 in file "8bitswdk_pic18f46j50_24j40/firmware/src/system_config/8bitwdk_pic18f46j50_24j40/system.c"
  1308 ;; Parameters:    Size  Location     Type
  1309 ;;		None
  1310 ;; Auto vars:     Size  Location     Type
  1311 ;;		None
  1312 ;; Return value:  Size  Location     Type
  1313 ;;                  1    wreg      void 
  1314 ;; Registers used:
  1315 ;;		wreg, status,2, status,0, cstack
  1316 ;; Tracked objects:
  1317 ;;		On entry : 0/0
  1318 ;;		On exit  : 0/0
  1319 ;;		Unchanged: 0/0
  1320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1325 ;;Total ram usage:        0 bytes
  1326 ;; Hardware stack levels used:    1
  1327 ;; Hardware stack levels required when called:    8
  1328 ;; This function calls:
  1329 ;;		_LCD_Initialize
  1330 ;; This function is called by:
  1331 ;;		_main
  1332 ;; This function uses a non-reentrant model
  1333 ;;
  1334                           
  1335                           	psect	text6
  1336  00120A                     __ptext6:
  1337                           	opt stack 0
  1338  00120A                     _SYSTEM_Initialize:
  1339                           	opt stack 22
  1340                           
  1341                           ;system.c: 64: OSCCON = 0x78;
  1342                           
  1343                           ;incstack = 0
  1344  00120A  0E78               	movlw	120
  1345  00120C  6ED3               	movwf	4051,c	;volatile
  1346                           
  1347                           ;system.c: 66: WDTCONbits.SWDTEN = 0;
  1348  00120E  90C0               	bcf	4032,0,c	;volatile
  1349                           
  1350                           ;system.c: 67: OSCTUNEbits.PLLEN = 1;
  1351  001210  8C9B               	bsf	3995,6,c	;volatile
  1352                           
  1353                           ;system.c: 68: INTCON = 0;
  1354  001212  0E00               	movlw	0
  1355  001214  6EF2               	movwf	intcon,c	;volatile
  1356                           
  1357                           ;system.c: 71: EECON2 = 0x55;
  1358  001216  0E55               	movlw	85
  1359  001218  6EA7               	movwf	4007,c	;volsfr
  1360                           
  1361                           ;system.c: 72: EECON2 = 0xAA;
  1362  00121A  0EAA               	movlw	170
  1363  00121C  6EA7               	movwf	4007,c	;volsfr
  1364                           
  1365                           ;system.c: 73: PPSCONbits.IOLOCK = 0;
  1366  00121E  010E               	movlb	14	; () banked
  1367  001220  91FF               	bcf	255,0,b	;volatile
  1368                           
  1369                           ;system.c: 76: RPINR1 = 4;
  1370  001222  0E04               	movlw	4
  1371  001224  6FE7               	movwf	231,b	;volatile
  1372                           
  1373                           ;system.c: 87: RPINR16 = 19;
  1374  001226  0E13               	movlw	19
  1375  001228  6FF6               	movwf	246,b	;volatile
  1376                           
  1377                           ;system.c: 88: RPOR17 = 5;
  1378  00122A  0E05               	movlw	5
  1379  00122C  6FD7               	movwf	215,b	;volatile
  1380                           
  1381                           ;system.c: 91: EECON2 = 0x55;
  1382  00122E  0E55               	movlw	85
  1383  001230  6EA7               	movwf	4007,c	;volsfr
  1384                           
  1385                           ;system.c: 92: EECON2 = 0xAA;
  1386  001232  0EAA               	movlw	170
  1387  001234  6EA7               	movwf	4007,c	;volsfr
  1388                           
  1389                           ; BSR set to: 14
  1390                           ;system.c: 93: PPSCONbits.IOLOCK = 1;
  1391  001236  81FF               	bsf	255,0,b	;volatile
  1392                           
  1393                           ; BSR set to: 14
  1394                           ;system.c: 96: ANCON0 = 0xFF;
  1395  001238  010F               	movlb	15	; () banked
  1396  00123A  6948               	setf	72,b	;volatile
  1397                           
  1398                           ;system.c: 97: ANCON1 = 0x3F;
  1399  00123C  0E3F               	movlw	63
  1400  00123E  6F49               	movwf	73,b	;volatile
  1401                           
  1402                           ; BSR set to: 15
  1403                           ;system.c: 98: INTCON2bits.RBPU = 0;
  1404  001240  9EF1               	bcf	intcon2,7,c	;volatile
  1405                           
  1406                           ; BSR set to: 15
  1407                           ;system.c: 100: TRISA = 0xFF;
  1408  001242  6892               	setf	3986,c	;volatile
  1409                           
  1410                           ; BSR set to: 15
  1411                           ;system.c: 101: TRISB = 0xFF;
  1412  001244  6893               	setf	3987,c	;volatile
  1413                           
  1414                           ; BSR set to: 15
  1415                           ;system.c: 102: TRISC = 0xFF;
  1416  001246  6894               	setf	3988,c	;volatile
  1417                           
  1418                           ; BSR set to: 15
  1419                           ;system.c: 103: TRISD = 0xFF;
  1420  001248  6895               	setf	3989,c	;volatile
  1421                           
  1422                           ; BSR set to: 15
  1423                           ;system.c: 104: TRISE = 0xFF;
  1424  00124A  6896               	setf	3990,c	;volatile
  1425                           
  1426                           ;system.c: 106: LATA = 0;
  1427  00124C  0E00               	movlw	0
  1428  00124E  6E89               	movwf	3977,c	;volatile
  1429                           
  1430                           ;system.c: 107: LATB = 0;
  1431  001250  0E00               	movlw	0
  1432  001252  6E8A               	movwf	3978,c	;volatile
  1433                           
  1434                           ;system.c: 109: LATD = 0;
  1435  001254  0E00               	movlw	0
  1436  001256  6E8C               	movwf	3980,c	;volatile
  1437                           
  1438                           ;system.c: 110: LATE = 0;
  1439  001258  0E00               	movlw	0
  1440  00125A  6E8D               	movwf	3981,c	;volatile
  1441                           
  1442                           ; BSR set to: 15
  1443                           ;system.c: 113: TRISBbits.TRISB0 = 1;
  1444  00125C  8093               	bsf	3987,0,c	;volatile
  1445                           
  1446                           ; BSR set to: 15
  1447                           ;system.c: 114: TRISBbits.TRISB2 = 1;
  1448  00125E  8493               	bsf	3987,2,c	;volatile
  1449                           
  1450                           ; BSR set to: 15
  1451                           ;system.c: 115: TRISAbits.TRISA2 = 0;
  1452  001260  9492               	bcf	3986,2,c	;volatile
  1453                           
  1454                           ; BSR set to: 15
  1455                           ;system.c: 116: TRISAbits.TRISA3 = 0;
  1456  001262  9692               	bcf	3986,3,c	;volatile
  1457                           
  1458                           ; BSR set to: 15
  1459                           ;system.c: 119: TRISBbits.TRISB3 = 0;
  1460  001264  9693               	bcf	3987,3,c	;volatile
  1461                           
  1462                           ; BSR set to: 15
  1463                           ;system.c: 120: LATBbits.LATB3 = 1;
  1464  001266  868A               	bsf	3978,3,c	;volatile
  1465                           
  1466                           ; BSR set to: 15
  1467                           ;system.c: 121: TRISDbits.TRISD7 = 0;
  1468  001268  9E95               	bcf	3989,7,c	;volatile
  1469                           
  1470                           ; BSR set to: 15
  1471                           ;system.c: 122: LATDbits.LATD7 = 1;
  1472  00126A  8E8C               	bsf	3980,7,c	;volatile
  1473                           
  1474                           ; BSR set to: 15
  1475                           ;system.c: 123: TRISBbits.TRISB1 = 1;
  1476  00126C  8293               	bsf	3987,1,c	;volatile
  1477                           
  1478                           ; BSR set to: 15
  1479                           ;system.c: 128: TRISBbits.TRISB5 = 1;
  1480  00126E  8A93               	bsf	3987,5,c	;volatile
  1481                           
  1482                           ; BSR set to: 15
  1483                           ;system.c: 129: TRISCbits.TRISC7 = 0;
  1484  001270  9E94               	bcf	3988,7,c	;volatile
  1485                           
  1486                           ; BSR set to: 15
  1487                           ;system.c: 130: TRISBbits.TRISB4 = 0;
  1488  001272  9893               	bcf	3987,4,c	;volatile
  1489                           
  1490                           ;system.c: 132: SSP1STAT = 0xC0;
  1491  001274  0EC0               	movlw	192
  1492  001276  6EC7               	movwf	4039,c	;volatile
  1493                           
  1494                           ;system.c: 133: SSP1CON1 = 0x21;
  1495  001278  0E21               	movlw	33
  1496  00127A  6EC6               	movwf	4038,c	;volatile
  1497                           
  1498                           ; BSR set to: 15
  1499                           ;system.c: 139: TRISDbits.TRISD3 = 0;
  1500  00127C  9695               	bcf	3989,3,c	;volatile
  1501                           
  1502                           ; BSR set to: 15
  1503                           ;system.c: 140: LATDbits.LATD3 = 1;
  1504  00127E  868C               	bsf	3980,3,c	;volatile
  1505                           
  1506                           ; BSR set to: 15
  1507                           ;system.c: 143: INTCON2bits.INTEDG1 = 0;
  1508  001280  9AF1               	bcf	intcon2,5,c	;volatile
  1509                           
  1510                           ; BSR set to: 15
  1511                           ;system.c: 145: TRISCbits.TRISC2 = 0;
  1512  001282  9494               	bcf	3988,2,c	;volatile
  1513                           
  1514                           ; BSR set to: 15
  1515                           ;system.c: 146: LATCbits.LATC2 = 1;
  1516  001284  848B               	bsf	3979,2,c	;volatile
  1517                           
  1518                           ; BSR set to: 15
  1519                           ;system.c: 150: INTCONbits.GIEH = 1;
  1520  001286  8EF2               	bsf	intcon,7,c	;volatile
  1521                           
  1522                           ; BSR set to: 15
  1523                           ;system.c: 151: INTCON3bits.INT1IF = 0;
  1524  001288  90F0               	bcf	intcon3,0,c	;volatile
  1525                           
  1526                           ; BSR set to: 15
  1527                           ;system.c: 152: INTCON3bits.INT1IE = 1;
  1528  00128A  86F0               	bsf	intcon3,3,c	;volatile
  1529                           
  1530                           ; BSR set to: 15
  1531                           ;system.c: 158: LCD_Initialize();
  1532  00128C  EC49  F009         	call	_LCD_Initialize	;wreg free
  1533  001290  0012               	return		;funcret
  1534  001292                     __end_of_SYSTEM_Initialize:
  1535                           	opt stack 0
  1536                           tblptru	equ	0xFF8
  1537                           tblptrh	equ	0xFF7
  1538                           tblptrl	equ	0xFF6
  1539                           tablat	equ	0xFF5
  1540                           intcon	equ	0xFF2
  1541                           intcon2	equ	0xFF1
  1542                           intcon3	equ	0xFF0
  1543                           postinc0	equ	0xFEE
  1544                           wreg	equ	0xFE8
  1545                           postdec1	equ	0xFE5
  1546                           fsr1l	equ	0xFE1
  1547                           status	equ	0xFD8
  1548                           
  1549 ;; *************** function _LCD_Initialize *****************
  1550 ;; Defined at:
  1551 ;;		line 149 in file "8bitswdk_pic18f46j50_24j40/firmware/src/system_config/8bitwdk_pic18f46j50_24j40/lcd.c"
  1552 ;; Parameters:    Size  Location     Type
  1553 ;;		None
  1554 ;; Auto vars:     Size  Location     Type
  1555 ;;		None
  1556 ;; Return value:  Size  Location     Type
  1557 ;;                  1    wreg      void 
  1558 ;; Registers used:
  1559 ;;		wreg, status,2, status,0, cstack
  1560 ;; Tracked objects:
  1561 ;;		On entry : 0/0
  1562 ;;		On exit  : 0/0
  1563 ;;		Unchanged: 0/0
  1564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1569 ;;Total ram usage:        0 bytes
  1570 ;; Hardware stack levels used:    1
  1571 ;; Hardware stack levels required when called:    7
  1572 ;; This function calls:
  1573 ;;		_DELAY_ms
  1574 ;;		_I2CWrite
  1575 ;; This function is called by:
  1576 ;;		_SYSTEM_Initialize
  1577 ;; This function uses a non-reentrant model
  1578 ;;
  1579                           
  1580                           	psect	text7
  1581  001292                     __ptext7:
  1582                           	opt stack 0
  1583  001292                     _LCD_Initialize:
  1584                           	opt stack 22
  1585                           
  1586                           ;lcd.c: 152: TRISD |= 0x53;
  1587                           
  1588                           ;incstack = 0
  1589  001292  0E53               	movlw	83
  1590  001294  1295               	iorwf	3989,f,c	;volatile
  1591                           
  1592                           ;lcd.c: 155: PIR3bits.SSP2IF = 0;
  1593  001296  9EA4               	bcf	4004,7,c	;volatile
  1594                           
  1595                           ;lcd.c: 156: SSP2STAT = 0x00;
  1596  001298  0E00               	movlw	0
  1597  00129A  6E73               	movwf	3955,c	;volatile
  1598                           
  1599                           ;lcd.c: 158: SSP2ADD = 0xF0;
  1600  00129C  0EF0               	movlw	240
  1601  00129E  6E74               	movwf	3956,c	;volatile
  1602                           
  1603                           ;lcd.c: 159: SSP2CON1 = 0x28;
  1604  0012A0  0E28               	movlw	40
  1605  0012A2  6E72               	movwf	3954,c	;volatile
  1606                           
  1607                           ;lcd.c: 160: SSP2CON2 = 0x00;
  1608  0012A4  0E00               	movlw	0
  1609  0012A6  6E71               	movwf	3953,c	;volatile
  1610                           
  1611                           ;lcd.c: 161: PIE3bits.SSP2IE = 1;
  1612  0012A8  8EA3               	bsf	4003,7,c	;volatile
  1613                           
  1614                           ;lcd.c: 163: INTCONbits.GIEH = 1;
  1615  0012AA  8EF2               	bsf	intcon,7,c	;volatile
  1616                           
  1617                           ;lcd.c: 164: INTCONbits.GIEL = 1;
  1618  0012AC  8CF2               	bsf	intcon,6,c	;volatile
  1619                           
  1620                           ;lcd.c: 166: DELAY_ms(300);
  1621  0012AE  0E01               	movlw	1
  1622  0012B0  0100               	movlb	0	; () banked
  1623  0012B2  6FF7               	movwf	(DELAY_ms@ms+1)& (0+255),b
  1624  0012B4  0E2C               	movlw	44
  1625  0012B6  6FF6               	movwf	DELAY_ms@ms& (0+255),b
  1626  0012B8  EC76  F008         	call	_DELAY_ms	;wreg free
  1627                           
  1628                           ;lcd.c: 168: LCDCommand[0] = 0x3E << 1;
  1629  0012BC  0E7C               	movlw	124
  1630  0012BE  0100               	movlb	0	; () banked
  1631  0012C0  6F82               	movwf	_LCDCommand& (0+255),b
  1632                           
  1633                           ; BSR set to: 0
  1634                           ;lcd.c: 169: LCDCommand[1] = 0x81;
  1635  0012C2  0E81               	movlw	129
  1636  0012C4  6F83               	movwf	(_LCDCommand+1)& (0+255),b
  1637                           
  1638                           ; BSR set to: 0
  1639                           ;lcd.c: 170: LCDCommand[2] = 0x00;
  1640  0012C6  0E00               	movlw	0
  1641  0012C8  6F84               	movwf	(_LCDCommand+2)& (0+255),b
  1642                           
  1643                           ;lcd.c: 172: I2CWrite(3, 0);
  1644  0012CA  0E00               	movlw	0
  1645  0012CC  6FEA               	movwf	I2CWrite@BufferLen& (0+255),b
  1646  0012CE  0E03               	movlw	3
  1647  0012D0  EC85  F00A         	call	_I2CWrite
  1648                           
  1649                           ;lcd.c: 174: DELAY_ms(200);
  1650  0012D4  0E00               	movlw	0
  1651  0012D6  0100               	movlb	0	; () banked
  1652  0012D8  6FF7               	movwf	(DELAY_ms@ms+1)& (0+255),b
  1653  0012DA  0EC8               	movlw	200
  1654  0012DC  6FF6               	movwf	DELAY_ms@ms& (0+255),b
  1655  0012DE  EC76  F008         	call	_DELAY_ms	;wreg free
  1656                           
  1657                           ;lcd.c: 177: LCDCommand[0] = 0x3E << 1;
  1658  0012E2  0E7C               	movlw	124
  1659  0012E4  0100               	movlb	0	; () banked
  1660  0012E6  6F82               	movwf	_LCDCommand& (0+255),b
  1661                           
  1662                           ; BSR set to: 0
  1663                           ;lcd.c: 178: LCDCommand[1] = 0x51;
  1664  0012E8  0E51               	movlw	81
  1665  0012EA  6F83               	movwf	(_LCDCommand+1)& (0+255),b
  1666                           
  1667                           ; BSR set to: 0
  1668                           ;lcd.c: 179: LCDCommand[2] = 0x08;
  1669  0012EC  0E08               	movlw	8
  1670  0012EE  6F84               	movwf	(_LCDCommand+2)& (0+255),b
  1671                           
  1672                           ; BSR set to: 0
  1673                           ;lcd.c: 181: I2CWrite(3, 0);
  1674  0012F0  0E00               	movlw	0
  1675  0012F2  6FEA               	movwf	I2CWrite@BufferLen& (0+255),b
  1676  0012F4  0E03               	movlw	3
  1677  0012F6  EC85  F00A         	call	_I2CWrite
  1678                           
  1679                           ;lcd.c: 182: DELAY_ms(200);
  1680  0012FA  0E00               	movlw	0
  1681  0012FC  0100               	movlb	0	; () banked
  1682  0012FE  6FF7               	movwf	(DELAY_ms@ms+1)& (0+255),b
  1683  001300  0EC8               	movlw	200
  1684  001302  6FF6               	movwf	DELAY_ms@ms& (0+255),b
  1685  001304  EC76  F008         	call	_DELAY_ms	;wreg free
  1686  001308  0012               	return		;funcret
  1687  00130A                     __end_of_LCD_Initialize:
  1688                           	opt stack 0
  1689                           tblptru	equ	0xFF8
  1690                           tblptrh	equ	0xFF7
  1691                           tblptrl	equ	0xFF6
  1692                           tablat	equ	0xFF5
  1693                           intcon	equ	0xFF2
  1694                           intcon2	equ	0xFF1
  1695                           intcon3	equ	0xFF0
  1696                           postinc0	equ	0xFEE
  1697                           wreg	equ	0xFE8
  1698                           postdec1	equ	0xFE5
  1699                           fsr1l	equ	0xFE1
  1700                           status	equ	0xFD8
  1701                           
  1702 ;; *************** function _I2CWrite *****************
  1703 ;; Defined at:
  1704 ;;		line 123 in file "8bitswdk_pic18f46j50_24j40/firmware/src/system_config/8bitwdk_pic18f46j50_24j40/lcd.c"
  1705 ;; Parameters:    Size  Location     Type
  1706 ;;  Commandlen      1    wreg     unsigned char 
  1707 ;;  BufferLen       1    0[BANK0 ] unsigned char 
  1708 ;; Auto vars:     Size  Location     Type
  1709 ;;  Commandlen      1    1[BANK0 ] unsigned char 
  1710 ;; Return value:  Size  Location     Type
  1711 ;;                  1    wreg      void 
  1712 ;; Registers used:
  1713 ;;		wreg, status,2
  1714 ;; Tracked objects:
  1715 ;;		On entry : 0/0
  1716 ;;		On exit  : 0/0
  1717 ;;		Unchanged: 0/0
  1718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1719 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1720 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1722 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1723 ;;Total ram usage:        2 bytes
  1724 ;; Hardware stack levels used:    1
  1725 ;; Hardware stack levels required when called:    5
  1726 ;; This function calls:
  1727 ;;		Nothing
  1728 ;; This function is called by:
  1729 ;;		_LCD_Initialize
  1730 ;;		_LCD_Update
  1731 ;;		_LCDBacklightON
  1732 ;;		_LCDBacklightOFF
  1733 ;; This function uses a non-reentrant model
  1734 ;;
  1735                           
  1736                           	psect	text8
  1737  00150A                     __ptext8:
  1738                           	opt stack 0
  1739  00150A                     _I2CWrite:
  1740                           	opt stack 23
  1741                           
  1742                           ;incstack = 0
  1743                           ;I2CWrite@Commandlen stored from wreg
  1744  00150A  0100               	movlb	0	; () banked
  1745  00150C  6FEB               	movwf	I2CWrite@Commandlen& (0+255),b
  1746  00150E                     
  1747                           ;lcd.c: 125: while(SSP2CON2bits.PEN == 1 );
  1748  00150E  B471               	btfsc	3953,2,c	;volatile
  1749  001510  D7FE               	goto	l8801
  1750                           
  1751                           ;lcd.c: 126: CommandPtr = 0;
  1752  001512  0E00               	movlw	0
  1753  001514  6E4D               	movwf	_CommandPtr,c
  1754                           
  1755                           ;lcd.c: 127: TextPtr = 0;
  1756  001516  0E00               	movlw	0
  1757  001518  6E4C               	movwf	_TextPtr,c
  1758                           
  1759                           ;lcd.c: 128: CommandLen = Commandlen;
  1760  00151A  C0EB  F04F         	movff	I2CWrite@Commandlen,_CommandLen
  1761                           
  1762                           ;lcd.c: 129: TextLen = BufferLen;
  1763  00151E  C0EA  F04E         	movff	I2CWrite@BufferLen,_TextLen
  1764                           
  1765                           ;lcd.c: 130: SSP2CON2bits.SEN = 1;
  1766  001522  8071               	bsf	3953,0,c	;volatile
  1767  001524  0012               	return		;funcret
  1768  001526                     __end_of_I2CWrite:
  1769                           	opt stack 0
  1770                           tblptru	equ	0xFF8
  1771                           tblptrh	equ	0xFF7
  1772                           tblptrl	equ	0xFF6
  1773                           tablat	equ	0xFF5
  1774                           intcon	equ	0xFF2
  1775                           intcon2	equ	0xFF1
  1776                           intcon3	equ	0xFF0
  1777                           postinc0	equ	0xFEE
  1778                           wreg	equ	0xFE8
  1779                           postdec1	equ	0xFE5
  1780                           fsr1l	equ	0xFE1
  1781                           status	equ	0xFD8
  1782                           
  1783 ;; *************** function _DELAY_ms *****************
  1784 ;; Defined at:
  1785 ;;		line 108 in file "8bitswdk_pic18f46j50_24j40/firmware/src/system_config/8bitwdk_pic18f46j50_24j40/delay.c"
  1786 ;; Parameters:    Size  Location     Type
  1787 ;;  ms              2   12[BANK0 ] unsigned int 
  1788 ;; Auto vars:     Size  Location     Type
  1789 ;;  cyclesRequir    4   14[BANK0 ] long 
  1790 ;; Return value:  Size  Location     Type
  1791 ;;                  1    wreg      void 
  1792 ;; Registers used:
  1793 ;;		wreg, status,2, status,0, cstack
  1794 ;; Tracked objects:
  1795 ;;		On entry : 0/0
  1796 ;;		On exit  : 0/0
  1797 ;;		Unchanged: 0/0
  1798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1799 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1800 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1802 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1803 ;;Total ram usage:        6 bytes
  1804 ;; Hardware stack levels used:    1
  1805 ;; Hardware stack levels required when called:    6
  1806 ;; This function calls:
  1807 ;;		___lmul
  1808 ;; This function is called by:
  1809 ;;		_LCD_Initialize
  1810 ;;		_LCDDisplay
  1811 ;;		_LCDBacklightON
  1812 ;;		_LCDBacklightOFF
  1813 ;; This function uses a non-reentrant model
  1814 ;;
  1815                           
  1816                           	psect	text9
  1817  0010EC                     __ptext9:
  1818                           	opt stack 0
  1819  0010EC                     _DELAY_ms:
  1820                           	opt stack 22
  1821                           
  1822                           ;delay.c: 112: int32_t cyclesRequiredForEntireDelay = 0;
  1823                           
  1824                           ;incstack = 0
  1825  0010EC  0E00               	movlw	0
  1826  0010EE  0100               	movlb	0	; () banked
  1827  0010F0  6FF8               	movwf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),b
  1828  0010F2  0E00               	movlw	0
  1829  0010F4  6FF9               	movwf	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),b
  1830  0010F6  0E00               	movlw	0
  1831  0010F8  6FFA               	movwf	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),b
  1832  0010FA  0E00               	movlw	0
  1833  0010FC  6FFB               	movwf	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),b
  1834                           
  1835                           ; BSR set to: 0
  1836                           ;delay.c: 115: cyclesRequiredForEntireDelay = (signed long)(((8000000/2*4)/4)/1000) * ms
      +                          ;
  1837  0010FE  C0F6  F0EA         	movff	DELAY_ms@ms,___lmul@multiplier
  1838  001102  C0F7  F0EB         	movff	DELAY_ms@ms+1,___lmul@multiplier+1
  1839  001106  6BEC               	clrf	(___lmul@multiplier+2)& (0+255),b
  1840  001108  6BED               	clrf	(___lmul@multiplier+3)& (0+255),b
  1841  00110A  0EA0               	movlw	160
  1842  00110C  6FEE               	movwf	___lmul@multiplicand& (0+255),b
  1843  00110E  0E0F               	movlw	15
  1844  001110  6FEF               	movwf	(___lmul@multiplicand+1)& (0+255),b
  1845  001112  0E00               	movlw	0
  1846  001114  6FF0               	movwf	(___lmul@multiplicand+2)& (0+255),b
  1847  001116  0E00               	movlw	0
  1848  001118  6FF1               	movwf	(___lmul@multiplicand+3)& (0+255),b
  1849  00111A  EC85  F009         	call	___lmul	;wreg free
  1850  00111E  C0EA  F0F8         	movff	?___lmul,DELAY_ms@cyclesRequiredForEntireDelay
  1851  001122  C0EB  F0F9         	movff	?___lmul+1,DELAY_ms@cyclesRequiredForEntireDelay+1
  1852  001126  C0EC  F0FA         	movff	?___lmul+2,DELAY_ms@cyclesRequiredForEntireDelay+2
  1853  00112A  C0ED  F0FB         	movff	?___lmul+3,DELAY_ms@cyclesRequiredForEntireDelay+3
  1854                           
  1855                           ;delay.c: 119: cyclesRequiredForEntireDelay -= (148 + 22);
  1856  00112E  0E56               	movlw	86
  1857  001130  0100               	movlb	0	; () banked
  1858  001132  27F8               	addwf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),f,b
  1859  001134  0EFF               	movlw	255
  1860  001136  23F9               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),f,b
  1861  001138  0EFF               	movlw	255
  1862  00113A  23FA               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),f,b
  1863  00113C  0EFF               	movlw	255
  1864  00113E  23FB               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),f,b
  1865                           
  1866                           ; BSR set to: 0
  1867                           ;delay.c: 121: if (cyclesRequiredForEntireDelay <= (170+25))
  1868  001140  BFFB               	btfsc	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),7,b
  1869  001142  0012               	return	
  1870  001144  51FB               	movf	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),w,b
  1871  001146  11FA               	iorwf	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),w,b
  1872  001148  11F9               	iorwf	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),w,b
  1873  00114A  E10F               	bnz	l43
  1874  00114C  0EC4               	movlw	196
  1875  00114E  5DF8               	subwf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),w,b
  1876  001150  A0D8               	btfss	status,0,c
  1877  001152  0012               	return	
  1878  001154  D00A               	goto	l43
  1879  001156                     l44:
  1880                           
  1881                           ; BSR set to: 0
  1882                           ;delay.c: 128: {
  1883                           ;delay.c: 129: __nop();
  1884  001156  F000               	nop	
  1885                           
  1886                           ;delay.c: 130: cyclesRequiredForEntireDelay -= 39;
  1887  001158  0ED9               	movlw	217
  1888  00115A  0100               	movlb	0	; () banked
  1889  00115C  27F8               	addwf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),f,b
  1890  00115E  0EFF               	movlw	255
  1891  001160  23F9               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),f,b
  1892  001162  0EFF               	movlw	255
  1893  001164  23FA               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),f,b
  1894  001166  0EFF               	movlw	255
  1895  001168  23FB               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),f,b
  1896  00116A                     l43:
  1897                           
  1898                           ; BSR set to: 0
  1899  00116A  BFFB               	btfsc	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),7,b
  1900  00116C  0012               	return	
  1901  00116E  51FB               	movf	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),w,b
  1902  001170  11FA               	iorwf	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),w,b
  1903  001172  11F9               	iorwf	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),w,b
  1904  001174  E1F0               	bnz	l44
  1905  001176  05F8               	decf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),w,b
  1906  001178  A0D8               	btfss	status,0,c
  1907  00117A  0012               	return	
  1908  00117C  D7EC               	goto	l44
  1909  00117E                     __end_of_DELAY_ms:
  1910                           	opt stack 0
  1911                           tblptru	equ	0xFF8
  1912                           tblptrh	equ	0xFF7
  1913                           tblptrl	equ	0xFF6
  1914                           tablat	equ	0xFF5
  1915                           intcon	equ	0xFF2
  1916                           intcon2	equ	0xFF1
  1917                           intcon3	equ	0xFF0
  1918                           postinc0	equ	0xFEE
  1919                           wreg	equ	0xFE8
  1920                           postdec1	equ	0xFE5
  1921                           fsr1l	equ	0xFE1
  1922                           status	equ	0xFD8
  1923                           
  1924 ;; *************** function ___lmul *****************
  1925 ;; Defined at:
  1926 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
  1927 ;; Parameters:    Size  Location     Type
  1928 ;;  multiplier      4    0[BANK0 ] unsigned long 
  1929 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  1930 ;; Auto vars:     Size  Location     Type
  1931 ;;  product         4    8[BANK0 ] unsigned long 
  1932 ;; Return value:  Size  Location     Type
  1933 ;;                  4    0[BANK0 ] unsigned long 
  1934 ;; Registers used:
  1935 ;;		wreg, status,2, status,0
  1936 ;; Tracked objects:
  1937 ;;		On entry : 0/0
  1938 ;;		On exit  : 0/0
  1939 ;;		Unchanged: 0/0
  1940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1941 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1942 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1944 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1945 ;;Total ram usage:       12 bytes
  1946 ;; Hardware stack levels used:    1
  1947 ;; Hardware stack levels required when called:    5
  1948 ;; This function calls:
  1949 ;;		Nothing
  1950 ;; This function is called by:
  1951 ;;		_DELAY_ms
  1952 ;;		_DELAY_10us
  1953 ;; This function uses a non-reentrant model
  1954 ;;
  1955                           
  1956                           	psect	text10
  1957  00130A                     __ptext10:
  1958                           	opt stack 0
  1959  00130A                     ___lmul:
  1960                           	opt stack 22
  1961                           
  1962                           ; BSR set to: 0
  1963                           ;incstack = 0
  1964  00130A  0E00               	movlw	0
  1965  00130C  0100               	movlb	0	; () banked
  1966  00130E  6FF2               	movwf	___lmul@product& (0+255),b
  1967  001310  0E00               	movlw	0
  1968  001312  6FF3               	movwf	(___lmul@product+1)& (0+255),b
  1969  001314  0E00               	movlw	0
  1970  001316  6FF4               	movwf	(___lmul@product+2)& (0+255),b
  1971  001318  0E00               	movlw	0
  1972  00131A  6FF5               	movwf	(___lmul@product+3)& (0+255),b
  1973  00131C                     
  1974                           ; BSR set to: 0
  1975                           
  1976                           ; BSR set to: 0
  1977  00131C  A1EA               	btfss	___lmul@multiplier& (0+255),0,b
  1978  00131E  D008               	goto	l1275
  1979                           
  1980                           ; BSR set to: 0
  1981  001320  51EE               	movf	___lmul@multiplicand& (0+255),w,b
  1982  001322  27F2               	addwf	___lmul@product& (0+255),f,b
  1983  001324  51EF               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  1984  001326  23F3               	addwfc	(___lmul@product+1)& (0+255),f,b
  1985  001328  51F0               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  1986  00132A  23F4               	addwfc	(___lmul@product+2)& (0+255),f,b
  1987  00132C  51F1               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  1988  00132E  23F5               	addwfc	(___lmul@product+3)& (0+255),f,b
  1989  001330                     l1275:
  1990                           
  1991                           ; BSR set to: 0
  1992                           
  1993                           ; BSR set to: 0
  1994  001330  90D8               	bcf	status,0,c
  1995  001332  37EE               	rlcf	___lmul@multiplicand& (0+255),f,b
  1996  001334  37EF               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  1997  001336  37F0               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  1998  001338  37F1               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  1999                           
  2000                           ; BSR set to: 0
  2001  00133A  90D8               	bcf	status,0,c
  2002  00133C  33ED               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  2003  00133E  33EC               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  2004  001340  33EB               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  2005  001342  33EA               	rrcf	___lmul@multiplier& (0+255),f,b
  2006  001344  51EA               	movf	___lmul@multiplier& (0+255),w,b
  2007  001346  11EB               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  2008  001348  11EC               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  2009  00134A  11ED               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  2010  00134C  A4D8               	btfss	status,2,c
  2011  00134E  D7E6               	goto	l1274
  2012                           
  2013                           ; BSR set to: 0
  2014  001350  C0F2  F0EA         	movff	___lmul@product,?___lmul
  2015  001354  C0F3  F0EB         	movff	___lmul@product+1,?___lmul+1
  2016  001358  C0F4  F0EC         	movff	___lmul@product+2,?___lmul+2
  2017  00135C  C0F5  F0ED         	movff	___lmul@product+3,?___lmul+3
  2018                           
  2019                           ; BSR set to: 0
  2020  001360  0012               	return		;funcret
  2021  001362                     __end_of___lmul:
  2022                           	opt stack 0
  2023                           tblptru	equ	0xFF8
  2024                           tblptrh	equ	0xFF7
  2025                           tblptrl	equ	0xFF6
  2026                           tablat	equ	0xFF5
  2027                           intcon	equ	0xFF2
  2028                           intcon2	equ	0xFF1
  2029                           intcon3	equ	0xFF0
  2030                           postinc0	equ	0xFEE
  2031                           wreg	equ	0xFE8
  2032                           postdec1	equ	0xFE5
  2033                           fsr1l	equ	0xFE1
  2034                           status	equ	0xFD8
  2035                           
  2036 ;; *************** function _high_isr *****************
  2037 ;; Defined at:
  2038 ;;		line 1852 in file "../MLA/framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
  2039 ;; Parameters:    Size  Location     Type
  2040 ;;		None
  2041 ;; Auto vars:     Size  Location     Type
  2042 ;;  results         1   41[COMRAM] struct _DRIVER_UINT8_UNI
  2043 ;;  RxBank          1   44[COMRAM] unsigned char 
  2044 ;;  flags           2   42[COMRAM] struct .
  2045 ;;  i               1   45[COMRAM] unsigned char 
  2046 ;; Return value:  Size  Location     Type
  2047 ;;                  1    wreg      void 
  2048 ;; Registers used:
  2049 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2050 ;; Tracked objects:
  2051 ;;		On entry : 0/0
  2052 ;;		On exit  : 0/0
  2053 ;;		Unchanged: 0/0
  2054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2056 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2057 ;;      Temps:         23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2058 ;;      Totals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2059 ;;Total ram usage:       28 bytes
  2060 ;; Hardware stack levels used:    1
  2061 ;; Hardware stack levels required when called:    4
  2062 ;; This function calls:
  2063 ;;		_PHYGetLongRAMAddr
  2064 ;;		_PHYGetShortRAMAddr
  2065 ;;		_PHYSetShortRAMAddr
  2066 ;;		_UserInterruptHandler
  2067 ;; This function is called by:
  2068 ;;		Interrupt level 2
  2069 ;; This function uses a non-reentrant model
  2070 ;;
  2071                           
  2072                           	psect	intcode
  2073  000008                     __pintcode:
  2074                           	opt stack 0
  2075  000008                     _high_isr:
  2076                           	opt stack 22
  2077                           
  2078                           ; BSR set to: 0
  2079                           ;incstack = 0
  2080  000008  825D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2081  00000A  CFFA F018          	movff	pclath,??_high_isr+5
  2082  00000E  CFFB F019          	movff	pclatu,??_high_isr+6
  2083  000012  CFE9 F01A          	movff	fsr0l,??_high_isr+7
  2084  000016  CFEA F01B          	movff	fsr0h,??_high_isr+8
  2085  00001A  CFE1 F01C          	movff	fsr1l,??_high_isr+9
  2086  00001E  CFE2 F01D          	movff	fsr1h,??_high_isr+10
  2087  000022  CFD9 F01E          	movff	fsr2l,??_high_isr+11
  2088  000026  CFDA F01F          	movff	fsr2h,??_high_isr+12
  2089  00002A  CFF3 F020          	movff	prodl,??_high_isr+13
  2090  00002E  CFF4 F021          	movff	prodh,??_high_isr+14
  2091  000032  CFF6 F022          	movff	tblptrl,??_high_isr+15
  2092  000036  CFF7 F023          	movff	tblptrh,??_high_isr+16
  2093  00003A  CFF8 F024          	movff	tblptru,??_high_isr+17
  2094  00003E  CFF5 F025          	movff	tablat,??_high_isr+18
  2095  000042  C05D  F026         	movff	btemp,??_high_isr+19
  2096  000046  C05E  F027         	movff	btemp+1,??_high_isr+20
  2097  00004A  C05F  F028         	movff	btemp+2,??_high_isr+21
  2098  00004E  C060  F029         	movff	btemp+3,??_high_isr+22
  2099                           
  2100                           ;drv_mrf_miwi_24j40.c: 1867: if (INTCON3bits.INT1IE && INTCON3bits.INT1IF)
  2101  000052  B6F0               	btfsc	intcon3,3,c	;volatile
  2102  000054  A0F0               	btfss	intcon3,0,c	;volatile
  2103  000056  D0AB               	goto	i2l1113
  2104                           
  2105                           ;drv_mrf_miwi_24j40.c: 1868: {
  2106                           ;drv_mrf_miwi_24j40.c: 1869: uint8_t i;
  2107                           ;drv_mrf_miwi_24j40.c: 1873: INTCON3bits.INT1IF = 0;
  2108  000058  90F0               	bcf	intcon3,0,c	;volatile
  2109                           
  2110                           ;drv_mrf_miwi_24j40.c: 1877: {
  2111                           ;drv_mrf_miwi_24j40.c: 1878: MRF24J40_IFREG flags;
  2112                           ;drv_mrf_miwi_24j40.c: 1881: flags.Val = PHYGetShortRAMAddr((0x62));
  2113  00005A  0E62               	movlw	98
  2114  00005C  EC5C  F00A         	call	_PHYGetShortRAMAddr
  2115  000060  6E2B               	movwf	high_isr@flags,c
  2116                           
  2117                           ;drv_mrf_miwi_24j40.c: 1883: if (flags.bits.RF_TXIF)
  2118  000062  A02B               	btfss	high_isr@flags,0,c
  2119  000064  D011               	goto	i2l1100
  2120                           
  2121                           ;drv_mrf_miwi_24j40.c: 1884: {
  2122                           ;drv_mrf_miwi_24j40.c: 1887: MRF24J40Status.bits.TX_BUSY = 0;
  2123  000066  9043               	bcf	_MRF24J40Status,0,c	;volatile
  2124                           
  2125                           ;drv_mrf_miwi_24j40.c: 1889: if (MRF24J40Status.bits.SEC_IF)
  2126  000068  BC43               	btfsc	_MRF24J40Status,6,c	;volatile
  2127                           
  2128                           ;drv_mrf_miwi_24j40.c: 1890: {
  2129                           ;drv_mrf_miwi_24j40.c: 1891: MRF24J40Status.bits.SEC_IF = 0;
  2130  00006A  9C43               	bcf	_MRF24J40Status,6,c	;volatile
  2131                           
  2132                           ;drv_mrf_miwi_24j40.c: 1892: }
  2133                           ;drv_mrf_miwi_24j40.c: 1894: failureCounter = 0;
  2134  00006C  0E00               	movlw	0
  2135  00006E  0100               	movlb	0	; () banked
  2136  000070  6F92               	movwf	(_failureCounter+1)& (0+255),b	;volatile
  2137  000072  0E00               	movlw	0
  2138  000074  6F91               	movwf	_failureCounter& (0+255),b	;volatile
  2139                           
  2140                           ; BSR set to: 0
  2141                           ;drv_mrf_miwi_24j40.c: 1898: if (MRF24J40Status.bits.TX_PENDING_ACK)
  2142  000076  A243               	btfss	_MRF24J40Status,1,c	;volatile
  2143  000078  D007               	goto	i2l1100
  2144                           
  2145                           ; BSR set to: 0
  2146                           ;drv_mrf_miwi_24j40.c: 1899: {
  2147                           ;drv_mrf_miwi_24j40.c: 1900: DRIVER_UINT8_UNION results;
  2148                           ;drv_mrf_miwi_24j40.c: 1903: results.Val = PHYGetShortRAMAddr((0x48));
  2149  00007A  0E48               	movlw	72
  2150  00007C  EC5C  F00A         	call	_PHYGetShortRAMAddr
  2151  000080  6E2A               	movwf	high_isr@results,c
  2152                           
  2153                           ;drv_mrf_miwi_24j40.c: 1905: if (results.bits.b0 == 1)
  2154  000082  B02A               	btfsc	high_isr@results,0,c
  2155                           
  2156                           ;drv_mrf_miwi_24j40.c: 1906: {
  2157                           ;drv_mrf_miwi_24j40.c: 1909: MRF24J40Status.bits.TX_FAIL = 1;
  2158  000084  8443               	bsf	_MRF24J40Status,2,c	;volatile
  2159                           
  2160                           ;drv_mrf_miwi_24j40.c: 1910: }
  2161                           ;drv_mrf_miwi_24j40.c: 1914: MRF24J40Status.bits.TX_PENDING_ACK = 0;
  2162  000086  9243               	bcf	_MRF24J40Status,1,c	;volatile
  2163  000088                     i2l1100:
  2164                           
  2165                           ;drv_mrf_miwi_24j40.c: 1916: }
  2166                           ;drv_mrf_miwi_24j40.c: 1918: }
  2167                           ;drv_mrf_miwi_24j40.c: 1920: if (flags.bits.RF_RXIF)
  2168  000088  A62B               	btfss	high_isr@flags,3,c
  2169  00008A  D08A               	goto	i2l1112
  2170                           
  2171                           ;drv_mrf_miwi_24j40.c: 1921: {
  2172                           ;drv_mrf_miwi_24j40.c: 1922: uint8_t RxBank = 0xFF;
  2173  00008C  682D               	setf	high_isr@RxBank,c
  2174                           
  2175                           ;drv_mrf_miwi_24j40.c: 1924: for (i = 0; i < 2; i++)
  2176  00008E  0E00               	movlw	0
  2177  000090  6E2E               	movwf	high_isr@i,c
  2178  000092                     i2l8649:
  2179  000092  0E01               	movlw	1
  2180  000094  642E               	cpfsgt	high_isr@i,c
  2181  000096  D001               	goto	i2l1103
  2182  000098  D010               	goto	i2u957_40
  2183  00009A                     i2l1103:
  2184                           
  2185                           ;drv_mrf_miwi_24j40.c: 1925: {
  2186                           ;drv_mrf_miwi_24j40.c: 1926: if (RxBuffer[i].PayloadLen == 0)
  2187  00009A  502E               	movf	high_isr@i,w,c
  2188  00009C  0D50               	mullw	80
  2189  00009E  0E00               	movlw	low _RxBuffer
  2190  0000A0  24F3               	addwf	prodl,w,c
  2191  0000A2  6ED9               	movwf	fsr2l,c
  2192  0000A4  0E02               	movlw	high _RxBuffer
  2193  0000A6  20F4               	addwfc	prodh,w,c
  2194  0000A8  6EDA               	movwf	fsr2h,c
  2195  0000AA  50DF               	movf	indf2,w,c
  2196  0000AC  A4D8               	btfss	status,2,c
  2197  0000AE  D003               	goto	i2l1105
  2198                           
  2199                           ;drv_mrf_miwi_24j40.c: 1927: {
  2200                           ;drv_mrf_miwi_24j40.c: 1928: RxBank = i;
  2201  0000B0  C02E  F02D         	movff	high_isr@i,high_isr@RxBank
  2202                           
  2203                           ;drv_mrf_miwi_24j40.c: 1929: break;
  2204  0000B4  D002               	goto	i2u957_40
  2205  0000B6                     i2l1105:
  2206  0000B6  2A2E               	incf	high_isr@i,f,c
  2207  0000B8  D7EC               	goto	i2l8649
  2208  0000BA                     i2u957_40:
  2209                           
  2210                           ;drv_mrf_miwi_24j40.c: 1930: }
  2211                           ;drv_mrf_miwi_24j40.c: 1931: }
  2212                           ;drv_mrf_miwi_24j40.c: 1934: if (RxBank < 2)
  2213  0000BA  0E02               	movlw	2
  2214  0000BC  602D               	cpfslt	high_isr@RxBank,c
  2215  0000BE  D06B               	goto	i2l1106
  2216                           
  2217                           ;drv_mrf_miwi_24j40.c: 1935: {
  2218                           ;drv_mrf_miwi_24j40.c: 1941: PHYSetShortRAMAddr((0x73), 0x04);
  2219  0000C0  0E04               	movlw	4
  2220  0000C2  6E03               	movwf	PHYSetShortRAMAddr@value,c
  2221  0000C4  0E73               	movlw	115
  2222  0000C6  EC71  F00A         	call	_PHYSetShortRAMAddr
  2223                           
  2224                           ;drv_mrf_miwi_24j40.c: 1945: RxBuffer[RxBank].PayloadLen = PHYGetLongRAMAddr(0x300) + 2;
  2225  0000CA  502D               	movf	high_isr@RxBank,w,c
  2226  0000CC  0D50               	mullw	80
  2227  0000CE  0E00               	movlw	low _RxBuffer
  2228  0000D0  24F3               	addwf	prodl,w,c
  2229  0000D2  6ED9               	movwf	fsr2l,c
  2230  0000D4  0E02               	movlw	high _RxBuffer
  2231  0000D6  20F4               	addwfc	prodh,w,c
  2232  0000D8  6EDA               	movwf	fsr2h,c
  2233  0000DA  0E03               	movlw	3
  2234  0000DC  6E04               	movwf	PHYGetLongRAMAddr@address+1,c
  2235  0000DE  0E00               	movlw	0
  2236  0000E0  6E03               	movwf	PHYGetLongRAMAddr@address,c
  2237  0000E2  ECDC  F009         	call	_PHYGetLongRAMAddr	;wreg free
  2238  0000E6  0F02               	addlw	2
  2239  0000E8  6EDF               	movwf	indf2,c
  2240                           
  2241                           ;drv_mrf_miwi_24j40.c: 1946: if (RxBuffer[RxBank].PayloadLen < (40+11+8+8+12))
  2242  0000EA  502D               	movf	high_isr@RxBank,w,c
  2243  0000EC  0D50               	mullw	80
  2244  0000EE  0E00               	movlw	low _RxBuffer
  2245  0000F0  24F3               	addwf	prodl,w,c
  2246  0000F2  6ED9               	movwf	fsr2l,c
  2247  0000F4  0E02               	movlw	high _RxBuffer
  2248  0000F6  20F4               	addwfc	prodh,w,c
  2249  0000F8  6EDA               	movwf	fsr2h,c
  2250  0000FA  0E4F               	movlw	79
  2251  0000FC  60DF               	cpfslt	indf2,c
  2252  0000FE  D040               	goto	i2l1107
  2253                           
  2254                           ;drv_mrf_miwi_24j40.c: 1947: {
  2255                           ;drv_mrf_miwi_24j40.c: 1949: MRF24J40Status.bits.RX_BUFFERED = 1;
  2256  000100  8A43               	bsf	_MRF24J40Status,5,c	;volatile
  2257                           
  2258                           ;drv_mrf_miwi_24j40.c: 1952: for (i = 1; i <= RxBuffer[RxBank].PayloadLen + 2; i++)
  2259  000102  0E01               	movlw	1
  2260  000104  6E2E               	movwf	high_isr@i,c
  2261  000106  D01A               	goto	i2l1108
  2262  000108                     
  2263                           ;drv_mrf_miwi_24j40.c: 1953: {
  2264                           ;drv_mrf_miwi_24j40.c: 1954: RxBuffer[RxBank].Payload[i - 1] = PHYGetLongRAMAddr(0x300 +
      +                           i);
  2265  000108  502D               	movf	high_isr@RxBank,w,c
  2266  00010A  0D50               	mullw	80
  2267  00010C  0E00               	movlw	low _RxBuffer
  2268  00010E  6E13               	movwf	??_high_isr& (0+255),c
  2269  000110  0E02               	movlw	high _RxBuffer
  2270  000112  6E14               	movwf	(??_high_isr+1)& (0+255),c
  2271  000114  50F3               	movf	prodl,w,c
  2272  000116  2613               	addwf	??_high_isr,f,c
  2273  000118  50F4               	movf	prodh,w,c
  2274  00011A  2214               	addwfc	??_high_isr+1,f,c
  2275  00011C  502E               	movf	high_isr@i,w,c
  2276  00011E  2413               	addwf	??_high_isr,w,c
  2277  000120  6ED9               	movwf	fsr2l,c
  2278  000122  0E00               	movlw	0
  2279  000124  2014               	addwfc	??_high_isr+1,w,c
  2280  000126  6EDA               	movwf	fsr2h,c
  2281  000128  0E00               	movlw	0
  2282  00012A  242E               	addwf	high_isr@i,w,c
  2283  00012C  6E03               	movwf	PHYGetLongRAMAddr@address,c
  2284  00012E  6A04               	clrf	PHYGetLongRAMAddr@address+1,c
  2285  000130  0E03               	movlw	3
  2286  000132  2204               	addwfc	PHYGetLongRAMAddr@address+1,f,c
  2287  000134  ECDC  F009         	call	_PHYGetLongRAMAddr	;wreg free
  2288  000138  6EDF               	movwf	indf2,c
  2289  00013A  2A2E               	incf	high_isr@i,f,c
  2290  00013C                     i2l1108:
  2291  00013C  502E               	movf	high_isr@i,w,c
  2292  00013E  6E13               	movwf	??_high_isr& (0+255),c
  2293  000140  6A14               	clrf	(??_high_isr+1)& (0+255),c
  2294  000142  502D               	movf	high_isr@RxBank,w,c
  2295  000144  0D50               	mullw	80
  2296  000146  0E00               	movlw	low _RxBuffer
  2297  000148  24F3               	addwf	prodl,w,c
  2298  00014A  6ED9               	movwf	fsr2l,c
  2299  00014C  0E02               	movlw	high _RxBuffer
  2300  00014E  20F4               	addwfc	prodh,w,c
  2301  000150  6EDA               	movwf	fsr2h,c
  2302  000152  50DF               	movf	indf2,w,c
  2303  000154  6E15               	movwf	(??_high_isr+2)& (0+255),c
  2304  000156  6A16               	clrf	(??_high_isr+3)& (0+255),c
  2305  000158  0E02               	movlw	2
  2306  00015A  2615               	addwf	??_high_isr+2,f,c
  2307  00015C  0E00               	movlw	0
  2308  00015E  2216               	addwfc	??_high_isr+3,f,c
  2309  000160  5013               	movf	??_high_isr,w,c
  2310  000162  5C15               	subwf	??_high_isr+2,w,c
  2311  000164  5016               	movf	??_high_isr+3,w,c
  2312  000166  0A80               	xorlw	128
  2313  000168  6E17               	movwf	(??_high_isr+4)& (0+255),c
  2314  00016A  5014               	movf	??_high_isr+1,w,c
  2315  00016C  0A80               	xorlw	128
  2316  00016E  5817               	subwfb	(??_high_isr+4)& (0+255),w,c
  2317  000170  B0D8               	btfsc	status,0,c
  2318  000172  D7CA               	goto	i2l1109
  2319                           
  2320                           ;drv_mrf_miwi_24j40.c: 1955: }
  2321                           ;drv_mrf_miwi_24j40.c: 1956: PHYSetShortRAMAddr((0x1B), 0x01);
  2322  000174  0E01               	movlw	1
  2323  000176  6E03               	movwf	PHYSetShortRAMAddr@value,c
  2324  000178  0E1B               	movlw	27
  2325  00017A  EC71  F00A         	call	_PHYSetShortRAMAddr
  2326                           
  2327                           ;drv_mrf_miwi_24j40.c: 1957: } else
  2328  00017E  D005               	goto	i2l1111
  2329  000180                     i2l1107:
  2330                           
  2331                           ;drv_mrf_miwi_24j40.c: 1958: {
  2332                           ;drv_mrf_miwi_24j40.c: 1961: PHYSetShortRAMAddr((0x1B), 0x01);
  2333  000180  0E01               	movlw	1
  2334  000182  6E03               	movwf	PHYSetShortRAMAddr@value,c
  2335  000184  0E1B               	movlw	27
  2336  000186  EC71  F00A         	call	_PHYSetShortRAMAddr
  2337  00018A                     i2l1111:
  2338                           
  2339                           ;drv_mrf_miwi_24j40.c: 1962: }
  2340                           ;drv_mrf_miwi_24j40.c: 1965: PHYSetShortRAMAddr((0x73), 0x00);
  2341  00018A  0E00               	movlw	0
  2342  00018C  6E03               	movwf	PHYSetShortRAMAddr@value,c
  2343  00018E  0E73               	movlw	115
  2344  000190  EC71  F00A         	call	_PHYSetShortRAMAddr
  2345                           
  2346                           ;drv_mrf_miwi_24j40.c: 1966: } else
  2347  000194  D005               	goto	i2l1112
  2348  000196                     i2l1106:
  2349                           
  2350                           ;drv_mrf_miwi_24j40.c: 1967: {
  2351                           ;drv_mrf_miwi_24j40.c: 1970: PHYSetShortRAMAddr((0x1B), 0x01);
  2352  000196  0E01               	movlw	1
  2353  000198  6E03               	movwf	PHYSetShortRAMAddr@value,c
  2354  00019A  0E1B               	movlw	27
  2355  00019C  EC71  F00A         	call	_PHYSetShortRAMAddr
  2356  0001A0                     i2l1112:
  2357                           
  2358                           ;drv_mrf_miwi_24j40.c: 1977: }
  2359                           ;drv_mrf_miwi_24j40.c: 1979: }
  2360                           ;drv_mrf_miwi_24j40.c: 1982: if (flags.bits.SECIF)
  2361  0001A0  A82B               	btfss	high_isr@flags,4,c
  2362  0001A2  D005               	goto	i2l1113
  2363                           
  2364                           ;drv_mrf_miwi_24j40.c: 1983: {
  2365                           ;drv_mrf_miwi_24j40.c: 1984: PHYSetShortRAMAddr((0x59), 0x80);
  2366  0001A4  0E80               	movlw	128
  2367  0001A6  6E03               	movwf	PHYSetShortRAMAddr@value,c
  2368  0001A8  0E59               	movlw	89
  2369  0001AA  EC71  F00A         	call	_PHYSetShortRAMAddr
  2370  0001AE                     i2l1113:
  2371                           
  2372                           ;drv_mrf_miwi_24j40.c: 1985: }
  2373                           ;drv_mrf_miwi_24j40.c: 1986: }
  2374                           ;drv_mrf_miwi_24j40.c: 1987: }
  2375                           ;drv_mrf_miwi_24j40.c: 1992: if (PIR1bits.TMR1IF)
  2376  0001AE  B09E               	btfsc	3998,0,c	;volatile
  2377                           
  2378                           ;drv_mrf_miwi_24j40.c: 1993: {
  2379                           ;drv_mrf_miwi_24j40.c: 1994: if (PIE1bits.TMR1IE)
  2380  0001B0  A09D               	btfss	3997,0,c	;volatile
  2381  0001B2  D007               	goto	i2l1116
  2382                           
  2383                           ;drv_mrf_miwi_24j40.c: 1995: {
  2384                           ;drv_mrf_miwi_24j40.c: 1997: PIR1bits.TMR1IF = 0;
  2385  0001B4  909E               	bcf	3998,0,c	;volatile
  2386                           
  2387                           ;drv_mrf_miwi_24j40.c: 1998: timerExtension1++;
  2388  0001B6  2A4B               	incf	_timerExtension1,f,c	;volatile
  2389                           
  2390                           ;drv_mrf_miwi_24j40.c: 1999: if (timerExtension1 == 0)
  2391  0001B8  504B               	movf	_timerExtension1,w,c	;volatile
  2392  0001BA  A4D8               	btfss	status,2,c
  2393  0001BC  D002               	goto	i2l1116
  2394                           
  2395                           ;drv_mrf_miwi_24j40.c: 2000: {
  2396                           ;drv_mrf_miwi_24j40.c: 2001: timerExtension2++;
  2397  0001BE  0100               	movlb	0	; () banked
  2398  0001C0  2B9A               	incf	_timerExtension2& (0+255),f,b	;volatile
  2399  0001C2                     i2l1116:
  2400                           
  2401                           ;drv_mrf_miwi_24j40.c: 2002: }
  2402                           ;drv_mrf_miwi_24j40.c: 2003: }
  2403                           ;drv_mrf_miwi_24j40.c: 2004: }
  2404                           ;drv_mrf_miwi_24j40.c: 2006: UserInterruptHandler();
  2405                           
  2406                           ; BSR set to: 0
  2407                           
  2408                           ; BSR set to: 0
  2409                           
  2410                           ; BSR set to: 0
  2411  0001C2  ECAC  F00A         	call	_UserInterruptHandler	;wreg free
  2412                           
  2413                           ;drv_mrf_miwi_24j40.c: 2009: return;
  2414  0001C6  C029  F060         	movff	??_high_isr+22,btemp+3
  2415  0001CA  C028  F05F         	movff	??_high_isr+21,btemp+2
  2416  0001CE  C027  F05E         	movff	??_high_isr+20,btemp+1
  2417  0001D2  C026  F05D         	movff	??_high_isr+19,btemp
  2418  0001D6  C025  FFF5         	movff	??_high_isr+18,tablat
  2419  0001DA  C024  FFF8         	movff	??_high_isr+17,tblptru
  2420  0001DE  C023  FFF7         	movff	??_high_isr+16,tblptrh
  2421  0001E2  C022  FFF6         	movff	??_high_isr+15,tblptrl
  2422  0001E6  C021  FFF4         	movff	??_high_isr+14,prodh
  2423  0001EA  C020  FFF3         	movff	??_high_isr+13,prodl
  2424  0001EE  C01F  FFDA         	movff	??_high_isr+12,fsr2h
  2425  0001F2  C01E  FFD9         	movff	??_high_isr+11,fsr2l
  2426  0001F6  C01D  FFE2         	movff	??_high_isr+10,fsr1h
  2427  0001FA  C01C  FFE1         	movff	??_high_isr+9,fsr1l
  2428  0001FE  C01B  FFEA         	movff	??_high_isr+8,fsr0h
  2429  000202  C01A  FFE9         	movff	??_high_isr+7,fsr0l
  2430  000206  C019  FFFB         	movff	??_high_isr+6,pclatu
  2431  00020A  C018  FFFA         	movff	??_high_isr+5,pclath
  2432  00020E  925D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2433  000210  0011               	retfie		f
  2434  000212                     __end_of_high_isr:
  2435                           	opt stack 0
  2436                           pclatu	equ	0xFFB
  2437                           pclath	equ	0xFFA
  2438                           tblptru	equ	0xFF8
  2439                           tblptrh	equ	0xFF7
  2440                           tblptrl	equ	0xFF6
  2441                           tablat	equ	0xFF5
  2442                           prodh	equ	0xFF4
  2443                           prodl	equ	0xFF3
  2444                           intcon	equ	0xFF2
  2445                           intcon2	equ	0xFF1
  2446                           intcon3	equ	0xFF0
  2447                           postinc0	equ	0xFEE
  2448                           fsr0h	equ	0xFEA
  2449                           fsr0l	equ	0xFE9
  2450                           wreg	equ	0xFE8
  2451                           postdec1	equ	0xFE5
  2452                           fsr1h	equ	0xFE2
  2453                           fsr1l	equ	0xFE1
  2454                           indf2	equ	0xFDF
  2455                           fsr2h	equ	0xFDA
  2456                           fsr2l	equ	0xFD9
  2457                           status	equ	0xFD8
  2458                           
  2459 ;; *************** function _UserInterruptHandler *****************
  2460 ;; Defined at:
  2461 ;;		line 345 in file "8bitswdk_pic18f46j50_24j40/firmware/src/system_config/8bitwdk_pic18f46j50_24j40/lcd.c"
  2462 ;; Parameters:    Size  Location     Type
  2463 ;;		None
  2464 ;; Auto vars:     Size  Location     Type
  2465 ;;		None
  2466 ;; Return value:  Size  Location     Type
  2467 ;;                  1    wreg      void 
  2468 ;; Registers used:
  2469 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2470 ;; Tracked objects:
  2471 ;;		On entry : 0/0
  2472 ;;		On exit  : 0/0
  2473 ;;		Unchanged: 0/0
  2474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2479 ;;Total ram usage:        0 bytes
  2480 ;; Hardware stack levels used:    1
  2481 ;; Hardware stack levels required when called:    3
  2482 ;; This function calls:
  2483 ;;		_I2CTask
  2484 ;;		i2_DELAY_ms
  2485 ;; This function is called by:
  2486 ;;		_high_isr
  2487 ;; This function uses a non-reentrant model
  2488 ;;
  2489                           
  2490                           	psect	text12
  2491  001558                     __ptext12:
  2492                           	opt stack 0
  2493  001558                     _UserInterruptHandler:
  2494                           	opt stack 22
  2495                           
  2496                           ;lcd.c: 348: if( PIR3bits.SSP2IF )
  2497                           
  2498                           ;incstack = 0
  2499  001558  AEA4               	btfss	4004,7,c	;volatile
  2500  00155A  0012               	return	
  2501                           
  2502                           ;lcd.c: 349: {
  2503                           ;lcd.c: 350: PIR3bits.SSP2IF = 0;
  2504  00155C  9EA4               	bcf	4004,7,c	;volatile
  2505                           
  2506                           ;lcd.c: 351: I2CTask();
  2507  00155E  ECD4  F007         	call	_I2CTask	;wreg free
  2508                           
  2509                           ;lcd.c: 352: DELAY_ms(5);
  2510  001562  0E00               	movlw	0
  2511  001564  6E0E               	movwf	i2DELAY_ms@ms+1,c
  2512  001566  0E05               	movlw	5
  2513  001568  6E0D               	movwf	i2DELAY_ms@ms,c
  2514  00156A  ECBF  F008         	call	i2_DELAY_ms	;wreg free
  2515  00156E  0012               	return	
  2516  001570                     __end_of_UserInterruptHandler:
  2517                           	opt stack 0
  2518                           pclatu	equ	0xFFB
  2519                           pclath	equ	0xFFA
  2520                           tblptru	equ	0xFF8
  2521                           tblptrh	equ	0xFF7
  2522                           tblptrl	equ	0xFF6
  2523                           tablat	equ	0xFF5
  2524                           prodh	equ	0xFF4
  2525                           prodl	equ	0xFF3
  2526                           intcon	equ	0xFF2
  2527                           intcon2	equ	0xFF1
  2528                           intcon3	equ	0xFF0
  2529                           postinc0	equ	0xFEE
  2530                           fsr0h	equ	0xFEA
  2531                           fsr0l	equ	0xFE9
  2532                           wreg	equ	0xFE8
  2533                           postdec1	equ	0xFE5
  2534                           fsr1h	equ	0xFE2
  2535                           fsr1l	equ	0xFE1
  2536                           indf2	equ	0xFDF
  2537                           fsr2h	equ	0xFDA
  2538                           fsr2l	equ	0xFD9
  2539                           status	equ	0xFD8
  2540                           
  2541 ;; *************** function _I2CTask *****************
  2542 ;; Defined at:
  2543 ;;		line 65 in file "8bitswdk_pic18f46j50_24j40/firmware/src/system_config/8bitwdk_pic18f46j50_24j40/lcd.c"
  2544 ;; Parameters:    Size  Location     Type
  2545 ;;		None
  2546 ;; Auto vars:     Size  Location     Type
  2547 ;;		None
  2548 ;; Return value:  Size  Location     Type
  2549 ;;                  1    wreg      void 
  2550 ;; Registers used:
  2551 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2552 ;; Tracked objects:
  2553 ;;		On entry : 0/0
  2554 ;;		On exit  : 0/0
  2555 ;;		Unchanged: 0/0
  2556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2561 ;;Total ram usage:        0 bytes
  2562 ;; Hardware stack levels used:    1
  2563 ;; Hardware stack levels required when called:    2
  2564 ;; This function calls:
  2565 ;;		i2_DELAY_ms
  2566 ;; This function is called by:
  2567 ;;		_UserInterruptHandler
  2568 ;; This function uses a non-reentrant model
  2569 ;;
  2570                           
  2571                           	psect	text13
  2572  000FA8                     __ptext13:
  2573                           	opt stack 0
  2574  000FA8                     _I2CTask:
  2575                           	opt stack 22
  2576                           
  2577                           ;lcd.c: 68: if( CommandPtr < CommandLen || TextPtr < TextLen )
  2578                           
  2579                           ;incstack = 0
  2580  000FA8  504F               	movf	_CommandLen,w,c
  2581  000FAA  5C4D               	subwf	_CommandPtr,w,c
  2582  000FAC  A0D8               	btfss	status,0,c
  2583  000FAE  D004               	goto	i2u535_40
  2584  000FB0  504E               	movf	_TextLen,w,c
  2585  000FB2  5C4C               	subwf	_TextPtr,w,c
  2586  000FB4  B0D8               	btfsc	status,0,c
  2587  000FB6  0012               	return	
  2588  000FB8                     i2u535_40:
  2589                           
  2590                           ;lcd.c: 69: {
  2591                           ;lcd.c: 70: while (SSP2CON2bits.SEN == 1);
  2592  000FB8  B071               	btfsc	3953,0,c	;volatile
  2593  000FBA  D7FE               	goto	i2u535_40
  2594                           
  2595                           ;lcd.c: 71: if( CommandPtr < CommandLen )
  2596  000FBC  504F               	movf	_CommandLen,w,c
  2597  000FBE  5C4D               	subwf	_CommandPtr,w,c
  2598  000FC0  B0D8               	btfsc	status,0,c
  2599  000FC2  D01A               	goto	i2l90
  2600                           
  2601                           ;lcd.c: 72: {
  2602                           ;lcd.c: 73: SSP2BUF = LCDCommand[CommandPtr];
  2603  000FC4  504D               	movf	_CommandPtr,w,c
  2604  000FC6  0D01               	mullw	1
  2605  000FC8  0E82               	movlw	low _LCDCommand
  2606  000FCA  24F3               	addwf	prodl,w,c
  2607  000FCC  6ED9               	movwf	fsr2l,c
  2608  000FCE  0E00               	movlw	high _LCDCommand
  2609  000FD0  20F4               	addwfc	prodh,w,c
  2610  000FD2  6EDA               	movwf	fsr2h,c
  2611  000FD4  50DF               	movf	indf2,w,c
  2612  000FD6  6E75               	movwf	3957,c	;volatile
  2613                           
  2614                           ;lcd.c: 75: {
  2615                           ;lcd.c: 76: CommandPtr++;
  2616  000FD8  2A4D               	incf	_CommandPtr,f,c
  2617                           
  2618                           ;lcd.c: 77: }
  2619                           ;lcd.c: 78: if( CommandPtr == CommandLen && TextLen == 0 )
  2620  000FDA  504F               	movf	_CommandLen,w,c
  2621  000FDC  184D               	xorwf	_CommandPtr,w,c
  2622  000FDE  A4D8               	btfss	status,2,c
  2623  000FE0  0012               	return	
  2624  000FE2  504E               	movf	_TextLen,w,c
  2625  000FE4  A4D8               	btfss	status,2,c
  2626  000FE6  0012               	return	
  2627                           
  2628                           ;lcd.c: 79: {
  2629                           ;lcd.c: 81: SSP2CON2bits.PEN = 1;
  2630  000FE8  8471               	bsf	3953,2,c	;volatile
  2631                           
  2632                           ;lcd.c: 82: DELAY_ms(300);
  2633  000FEA  0E01               	movlw	1
  2634  000FEC  6E0E               	movwf	i2DELAY_ms@ms+1,c
  2635  000FEE  0E2C               	movlw	44
  2636  000FF0  6E0D               	movwf	i2DELAY_ms@ms,c
  2637  000FF2  ECBF  F008         	call	i2_DELAY_ms	;wreg free
  2638                           
  2639                           ;lcd.c: 83: }
  2640                           ;lcd.c: 84: }
  2641  000FF6  0012               	return	
  2642  000FF8                     i2l90:
  2643                           
  2644                           ;lcd.c: 85: else if( TextPtr < TextLen )
  2645  000FF8  504E               	movf	_TextLen,w,c
  2646  000FFA  5C4C               	subwf	_TextPtr,w,c
  2647  000FFC  B0D8               	btfsc	status,0,c
  2648  000FFE  0012               	return	
  2649                           
  2650                           ;lcd.c: 86: {
  2651                           ;lcd.c: 87: if( LCDText[TextPtr] == 0 )
  2652  001000  504C               	movf	_TextPtr,w,c
  2653  001002  0D01               	mullw	1
  2654  001004  0E7B               	movlw	low _LCDText
  2655  001006  24F3               	addwf	prodl,w,c
  2656  001008  6ED9               	movwf	fsr2l,c
  2657  00100A  0E01               	movlw	high _LCDText
  2658  00100C  20F4               	addwfc	prodh,w,c
  2659  00100E  6EDA               	movwf	fsr2h,c
  2660  001010  50DF               	movf	indf2,w,c
  2661  001012  A4D8               	btfss	status,2,c
  2662  001014  D00A               	goto	i2l94
  2663                           
  2664                           ;lcd.c: 88: {
  2665                           ;lcd.c: 89: LCDText[TextPtr] = ' ';
  2666  001016  504C               	movf	_TextPtr,w,c
  2667  001018  0D01               	mullw	1
  2668  00101A  0E7B               	movlw	low _LCDText
  2669  00101C  24F3               	addwf	prodl,w,c
  2670  00101E  6ED9               	movwf	fsr2l,c
  2671  001020  0E01               	movlw	high _LCDText
  2672  001022  20F4               	addwfc	prodh,w,c
  2673  001024  6EDA               	movwf	fsr2h,c
  2674  001026  0E20               	movlw	32
  2675  001028  6EDF               	movwf	indf2,c
  2676  00102A                     i2l94:
  2677                           
  2678                           ;lcd.c: 90: }
  2679                           ;lcd.c: 91: SSP2BUF = LCDText[TextPtr];
  2680  00102A  504C               	movf	_TextPtr,w,c
  2681  00102C  0D01               	mullw	1
  2682  00102E  0E7B               	movlw	low _LCDText
  2683  001030  24F3               	addwf	prodl,w,c
  2684  001032  6ED9               	movwf	fsr2l,c
  2685  001034  0E01               	movlw	high _LCDText
  2686  001036  20F4               	addwfc	prodh,w,c
  2687  001038  6EDA               	movwf	fsr2h,c
  2688  00103A  50DF               	movf	indf2,w,c
  2689  00103C  6E75               	movwf	3957,c	;volatile
  2690                           
  2691                           ;lcd.c: 94: {
  2692                           ;lcd.c: 95: TextPtr++;
  2693  00103E  2A4C               	incf	_TextPtr,f,c
  2694                           
  2695                           ;lcd.c: 96: }
  2696                           ;lcd.c: 97: if( TextPtr == TextLen )
  2697  001040  504E               	movf	_TextLen,w,c
  2698  001042  184C               	xorwf	_TextPtr,w,c
  2699  001044  A4D8               	btfss	status,2,c
  2700  001046  0012               	return	
  2701                           
  2702                           ;lcd.c: 98: {
  2703                           ;lcd.c: 100: SSP2CON2bits.PEN = 1;
  2704  001048  8471               	bsf	3953,2,c	;volatile
  2705                           
  2706                           ;lcd.c: 101: DELAY_ms(300);
  2707  00104A  0E01               	movlw	1
  2708  00104C  6E0E               	movwf	i2DELAY_ms@ms+1,c
  2709  00104E  0E2C               	movlw	44
  2710  001050  6E0D               	movwf	i2DELAY_ms@ms,c
  2711  001052  ECBF  F008         	call	i2_DELAY_ms	;wreg free
  2712  001056  0012               	return	
  2713  001058                     __end_of_I2CTask:
  2714                           	opt stack 0
  2715                           pclatu	equ	0xFFB
  2716                           pclath	equ	0xFFA
  2717                           tblptru	equ	0xFF8
  2718                           tblptrh	equ	0xFF7
  2719                           tblptrl	equ	0xFF6
  2720                           tablat	equ	0xFF5
  2721                           prodh	equ	0xFF4
  2722                           prodl	equ	0xFF3
  2723                           intcon	equ	0xFF2
  2724                           intcon2	equ	0xFF1
  2725                           intcon3	equ	0xFF0
  2726                           postinc0	equ	0xFEE
  2727                           fsr0h	equ	0xFEA
  2728                           fsr0l	equ	0xFE9
  2729                           wreg	equ	0xFE8
  2730                           postdec1	equ	0xFE5
  2731                           fsr1h	equ	0xFE2
  2732                           fsr1l	equ	0xFE1
  2733                           indf2	equ	0xFDF
  2734                           fsr2h	equ	0xFDA
  2735                           fsr2l	equ	0xFD9
  2736                           status	equ	0xFD8
  2737                           
  2738 ;; *************** function i2_DELAY_ms *****************
  2739 ;; Defined at:
  2740 ;;		line 108 in file "8bitswdk_pic18f46j50_24j40/firmware/src/system_config/8bitwdk_pic18f46j50_24j40/delay.c"
  2741 ;; Parameters:    Size  Location     Type
  2742 ;;  ms              2   12[COMRAM] unsigned int 
  2743 ;; Auto vars:     Size  Location     Type
  2744 ;;  DELAY_ms        4   14[COMRAM] long 
  2745 ;; Return value:  Size  Location     Type
  2746 ;;                  1    wreg      void 
  2747 ;; Registers used:
  2748 ;;		wreg, status,2, status,0, cstack
  2749 ;; Tracked objects:
  2750 ;;		On entry : 0/0
  2751 ;;		On exit  : 0/0
  2752 ;;		Unchanged: 0/0
  2753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2754 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2755 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2757 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2758 ;;Total ram usage:        6 bytes
  2759 ;; Hardware stack levels used:    1
  2760 ;; Hardware stack levels required when called:    1
  2761 ;; This function calls:
  2762 ;;		i2___lmul
  2763 ;; This function is called by:
  2764 ;;		_I2CTask
  2765 ;;		_UserInterruptHandler
  2766 ;; This function uses a non-reentrant model
  2767 ;;
  2768                           
  2769                           	psect	text14
  2770  00117E                     __ptext14:
  2771                           	opt stack 0
  2772  00117E                     i2_DELAY_ms:
  2773                           	opt stack 23
  2774                           
  2775                           ;delay.c: 112: int32_t cyclesRequiredForEntireDelay = 0;
  2776                           
  2777                           ;incstack = 0
  2778  00117E  0E00               	movlw	0
  2779  001180  6E0F               	movwf	i2DELAY_ms@cyclesRequiredForEntireDelay,c
  2780  001182  0E00               	movlw	0
  2781  001184  6E10               	movwf	i2DELAY_ms@cyclesRequiredForEntireDelay+1,c
  2782  001186  0E00               	movlw	0
  2783  001188  6E11               	movwf	i2DELAY_ms@cyclesRequiredForEntireDelay+2,c
  2784  00118A  0E00               	movlw	0
  2785  00118C  6E12               	movwf	i2DELAY_ms@cyclesRequiredForEntireDelay+3,c
  2786                           
  2787                           ;delay.c: 115: cyclesRequiredForEntireDelay = (signed long)(((8000000/2*4)/4)/1000) * ms
      +                          ;
  2788  00118E  C00D  F001         	movff	i2DELAY_ms@ms,i2___lmul@multiplier
  2789  001192  C00E  F002         	movff	i2DELAY_ms@ms+1,i2___lmul@multiplier+1
  2790  001196  6A03               	clrf	i2___lmul@multiplier+2,c
  2791  001198  6A04               	clrf	i2___lmul@multiplier+3,c
  2792  00119A  0EA0               	movlw	160
  2793  00119C  6E05               	movwf	i2___lmul@multiplicand,c
  2794  00119E  0E0F               	movlw	15
  2795  0011A0  6E06               	movwf	i2___lmul@multiplicand+1,c
  2796  0011A2  0E00               	movlw	0
  2797  0011A4  6E07               	movwf	i2___lmul@multiplicand+2,c
  2798  0011A6  0E00               	movlw	0
  2799  0011A8  6E08               	movwf	i2___lmul@multiplicand+3,c
  2800  0011AA  ECB1  F009         	call	i2___lmul	;wreg free
  2801  0011AE  C001  F00F         	movff	?i2___lmul,i2DELAY_ms@cyclesRequiredForEntireDelay
  2802  0011B2  C002  F010         	movff	?i2___lmul+1,i2DELAY_ms@cyclesRequiredForEntireDelay+1
  2803  0011B6  C003  F011         	movff	?i2___lmul+2,i2DELAY_ms@cyclesRequiredForEntireDelay+2
  2804  0011BA  C004  F012         	movff	?i2___lmul+3,i2DELAY_ms@cyclesRequiredForEntireDelay+3
  2805                           
  2806                           ;delay.c: 119: cyclesRequiredForEntireDelay -= (148 + 22);
  2807  0011BE  0E56               	movlw	86
  2808  0011C0  260F               	addwf	i2DELAY_ms@cyclesRequiredForEntireDelay,f,c
  2809  0011C2  0EFF               	movlw	255
  2810  0011C4  2210               	addwfc	i2DELAY_ms@cyclesRequiredForEntireDelay+1,f,c
  2811  0011C6  0EFF               	movlw	255
  2812  0011C8  2211               	addwfc	i2DELAY_ms@cyclesRequiredForEntireDelay+2,f,c
  2813  0011CA  0EFF               	movlw	255
  2814  0011CC  2212               	addwfc	i2DELAY_ms@cyclesRequiredForEntireDelay+3,f,c
  2815                           
  2816                           ;delay.c: 121: if (cyclesRequiredForEntireDelay <= (170+25))
  2817  0011CE  BE12               	btfsc	i2DELAY_ms@cyclesRequiredForEntireDelay+3,7,c
  2818  0011D0  0012               	return	
  2819  0011D2  5012               	movf	i2DELAY_ms@cyclesRequiredForEntireDelay+3,w,c
  2820  0011D4  1011               	iorwf	i2DELAY_ms@cyclesRequiredForEntireDelay+2,w,c
  2821  0011D6  1010               	iorwf	i2DELAY_ms@cyclesRequiredForEntireDelay+1,w,c
  2822  0011D8  E10E               	bnz	i2l43
  2823  0011DA  0EC4               	movlw	196
  2824  0011DC  5C0F               	subwf	i2DELAY_ms@cyclesRequiredForEntireDelay,w,c
  2825  0011DE  A0D8               	btfss	status,0,c
  2826  0011E0  0012               	return	
  2827  0011E2  D009               	goto	i2l43
  2828  0011E4                     i2l44:
  2829                           
  2830                           ;delay.c: 128: {
  2831                           ;delay.c: 129: __nop();
  2832  0011E4  F000               	nop	
  2833                           
  2834                           ;delay.c: 130: cyclesRequiredForEntireDelay -= 39;
  2835  0011E6  0ED9               	movlw	217
  2836  0011E8  260F               	addwf	i2DELAY_ms@cyclesRequiredForEntireDelay,f,c
  2837  0011EA  0EFF               	movlw	255
  2838  0011EC  2210               	addwfc	i2DELAY_ms@cyclesRequiredForEntireDelay+1,f,c
  2839  0011EE  0EFF               	movlw	255
  2840  0011F0  2211               	addwfc	i2DELAY_ms@cyclesRequiredForEntireDelay+2,f,c
  2841  0011F2  0EFF               	movlw	255
  2842  0011F4  2212               	addwfc	i2DELAY_ms@cyclesRequiredForEntireDelay+3,f,c
  2843  0011F6                     i2l43:
  2844  0011F6  BE12               	btfsc	i2DELAY_ms@cyclesRequiredForEntireDelay+3,7,c
  2845  0011F8  0012               	return	
  2846  0011FA  5012               	movf	i2DELAY_ms@cyclesRequiredForEntireDelay+3,w,c
  2847  0011FC  1011               	iorwf	i2DELAY_ms@cyclesRequiredForEntireDelay+2,w,c
  2848  0011FE  1010               	iorwf	i2DELAY_ms@cyclesRequiredForEntireDelay+1,w,c
  2849  001200  E1F1               	bnz	i2l44
  2850  001202  040F               	decf	i2DELAY_ms@cyclesRequiredForEntireDelay,w,c
  2851  001204  A0D8               	btfss	status,0,c
  2852  001206  0012               	return	
  2853  001208  D7ED               	goto	i2l44
  2854  00120A                     __end_ofi2_DELAY_ms:
  2855                           	opt stack 0
  2856                           pclatu	equ	0xFFB
  2857                           pclath	equ	0xFFA
  2858                           tblptru	equ	0xFF8
  2859                           tblptrh	equ	0xFF7
  2860                           tblptrl	equ	0xFF6
  2861                           tablat	equ	0xFF5
  2862                           prodh	equ	0xFF4
  2863                           prodl	equ	0xFF3
  2864                           intcon	equ	0xFF2
  2865                           intcon2	equ	0xFF1
  2866                           intcon3	equ	0xFF0
  2867                           postinc0	equ	0xFEE
  2868                           fsr0h	equ	0xFEA
  2869                           fsr0l	equ	0xFE9
  2870                           wreg	equ	0xFE8
  2871                           postdec1	equ	0xFE5
  2872                           fsr1h	equ	0xFE2
  2873                           fsr1l	equ	0xFE1
  2874                           indf2	equ	0xFDF
  2875                           fsr2h	equ	0xFDA
  2876                           fsr2l	equ	0xFD9
  2877                           status	equ	0xFD8
  2878                           
  2879 ;; *************** function i2___lmul *****************
  2880 ;; Defined at:
  2881 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
  2882 ;; Parameters:    Size  Location     Type
  2883 ;;  multiplier      4    0[COMRAM] unsigned long 
  2884 ;;  multiplicand    4    4[COMRAM] unsigned long 
  2885 ;; Auto vars:     Size  Location     Type
  2886 ;;  __lmul          4    8[COMRAM] unsigned long 
  2887 ;; Return value:  Size  Location     Type
  2888 ;;                  4    0[COMRAM] unsigned long 
  2889 ;; Registers used:
  2890 ;;		wreg, status,2, status,0
  2891 ;; Tracked objects:
  2892 ;;		On entry : 0/0
  2893 ;;		On exit  : 0/0
  2894 ;;		Unchanged: 0/0
  2895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2896 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2897 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2899 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2900 ;;Total ram usage:       12 bytes
  2901 ;; Hardware stack levels used:    1
  2902 ;; This function calls:
  2903 ;;		Nothing
  2904 ;; This function is called by:
  2905 ;;		i2_DELAY_ms
  2906 ;; This function uses a non-reentrant model
  2907 ;;
  2908                           
  2909                           	psect	text15
  2910  001362                     __ptext15:
  2911                           	opt stack 0
  2912  001362                     i2___lmul:
  2913                           	opt stack 23
  2914                           
  2915                           ;incstack = 0
  2916  001362  0E00               	movlw	0
  2917  001364  6E09               	movwf	i2___lmul@product,c
  2918  001366  0E00               	movlw	0
  2919  001368  6E0A               	movwf	i2___lmul@product+1,c
  2920  00136A  0E00               	movlw	0
  2921  00136C  6E0B               	movwf	i2___lmul@product+2,c
  2922  00136E  0E00               	movlw	0
  2923  001370  6E0C               	movwf	i2___lmul@product+3,c
  2924  001372  A001               	btfss	i2___lmul@multiplier,0,c
  2925  001374  D008               	goto	i2l1275
  2926  001376  5005               	movf	i2___lmul@multiplicand,w,c
  2927  001378  2609               	addwf	i2___lmul@product,f,c
  2928  00137A  5006               	movf	i2___lmul@multiplicand+1,w,c
  2929  00137C  220A               	addwfc	i2___lmul@product+1,f,c
  2930  00137E  5007               	movf	i2___lmul@multiplicand+2,w,c
  2931  001380  220B               	addwfc	i2___lmul@product+2,f,c
  2932  001382  5008               	movf	i2___lmul@multiplicand+3,w,c
  2933  001384  220C               	addwfc	i2___lmul@product+3,f,c
  2934  001386                     i2l1275:
  2935  001386  90D8               	bcf	status,0,c
  2936  001388  3605               	rlcf	i2___lmul@multiplicand,f,c
  2937  00138A  3606               	rlcf	i2___lmul@multiplicand+1,f,c
  2938  00138C  3607               	rlcf	i2___lmul@multiplicand+2,f,c
  2939  00138E  3608               	rlcf	i2___lmul@multiplicand+3,f,c
  2940  001390  90D8               	bcf	status,0,c
  2941  001392  3204               	rrcf	i2___lmul@multiplier+3,f,c
  2942  001394  3203               	rrcf	i2___lmul@multiplier+2,f,c
  2943  001396  3202               	rrcf	i2___lmul@multiplier+1,f,c
  2944  001398  3201               	rrcf	i2___lmul@multiplier,f,c
  2945  00139A  5001               	movf	i2___lmul@multiplier,w,c
  2946  00139C  1002               	iorwf	i2___lmul@multiplier+1,w,c
  2947  00139E  1003               	iorwf	i2___lmul@multiplier+2,w,c
  2948  0013A0  1004               	iorwf	i2___lmul@multiplier+3,w,c
  2949  0013A2  A4D8               	btfss	status,2,c
  2950  0013A4  D7E6               	goto	i2l1274
  2951  0013A6  C009  F001         	movff	i2___lmul@product,?i2___lmul
  2952  0013AA  C00A  F002         	movff	i2___lmul@product+1,?i2___lmul+1
  2953  0013AE  C00B  F003         	movff	i2___lmul@product+2,?i2___lmul+2
  2954  0013B2  C00C  F004         	movff	i2___lmul@product+3,?i2___lmul+3
  2955  0013B6  0012               	return		;funcret
  2956  0013B8                     __end_ofi2___lmul:
  2957                           	opt stack 0
  2958                           pclatu	equ	0xFFB
  2959                           pclath	equ	0xFFA
  2960                           tblptru	equ	0xFF8
  2961                           tblptrh	equ	0xFF7
  2962                           tblptrl	equ	0xFF6
  2963                           tablat	equ	0xFF5
  2964                           prodh	equ	0xFF4
  2965                           prodl	equ	0xFF3
  2966                           intcon	equ	0xFF2
  2967                           intcon2	equ	0xFF1
  2968                           intcon3	equ	0xFF0
  2969                           postinc0	equ	0xFEE
  2970                           fsr0h	equ	0xFEA
  2971                           fsr0l	equ	0xFE9
  2972                           wreg	equ	0xFE8
  2973                           postdec1	equ	0xFE5
  2974                           fsr1h	equ	0xFE2
  2975                           fsr1l	equ	0xFE1
  2976                           indf2	equ	0xFDF
  2977                           fsr2h	equ	0xFDA
  2978                           fsr2l	equ	0xFD9
  2979                           status	equ	0xFD8
  2980                           
  2981 ;; *************** function _PHYSetShortRAMAddr *****************
  2982 ;; Defined at:
  2983 ;;		line 124 in file "../MLA/framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
  2984 ;; Parameters:    Size  Location     Type
  2985 ;;  address         1    wreg     unsigned char 
  2986 ;;  value           1    2[COMRAM] unsigned char 
  2987 ;; Auto vars:     Size  Location     Type
  2988 ;;  address         1    3[COMRAM] unsigned char 
  2989 ;;  tmpRFIE         1    4[COMRAM] volatile unsigned char 
  2990 ;; Return value:  Size  Location     Type
  2991 ;;                  1    wreg      void 
  2992 ;; Registers used:
  2993 ;;		wreg, status,2, cstack
  2994 ;; Tracked objects:
  2995 ;;		On entry : 0/0
  2996 ;;		On exit  : 0/0
  2997 ;;		Unchanged: 0/0
  2998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2999 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3000 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3002 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3003 ;;Total ram usage:        3 bytes
  3004 ;; Hardware stack levels used:    1
  3005 ;; Hardware stack levels required when called:    1
  3006 ;; This function calls:
  3007 ;;		_SPIPut
  3008 ;; This function is called by:
  3009 ;;		_high_isr
  3010 ;;		_InitMRF24J40
  3011 ;;		_MiMAC_SendPacket
  3012 ;;		_MiMAC_SetChannel
  3013 ;;		_MiMAC_SetAltAddress
  3014 ;; This function uses a non-reentrant model
  3015 ;;
  3016                           
  3017                           	psect	text16
  3018  0014E2                     __ptext16:
  3019                           	opt stack 0
  3020  0014E2                     _PHYSetShortRAMAddr:
  3021                           	opt stack 24
  3022                           
  3023                           ;incstack = 0
  3024                           ;PHYSetShortRAMAddr@address stored from wreg
  3025  0014E2  6E04               	movwf	PHYSetShortRAMAddr@address,c
  3026                           
  3027                           ;drv_mrf_miwi_24j40.c: 126: volatile uint8_t tmpRFIE = INTCON3bits.INT1IE;
  3028  0014E4  0E00               	movlw	0
  3029  0014E6  B6F0               	btfsc	intcon3,3,c	;volatile
  3030  0014E8  0E01               	movlw	1
  3031  0014EA  6E05               	movwf	PHYSetShortRAMAddr@tmpRFIE,c	;volatile
  3032                           
  3033                           ;drv_mrf_miwi_24j40.c: 128: INTCON3bits.INT1IE = 0;
  3034  0014EC  96F0               	bcf	intcon3,3,c	;volatile
  3035                           
  3036                           ;drv_mrf_miwi_24j40.c: 129: LATBbits.LATB3 = 0;
  3037  0014EE  968A               	bcf	3978,3,c	;volatile
  3038                           
  3039                           ;drv_mrf_miwi_24j40.c: 130: SPIPut(address);
  3040  0014F0  5004               	movf	PHYSetShortRAMAddr@address,w,c
  3041  0014F2  EC93  F00A         	call	_SPIPut
  3042                           
  3043                           ;drv_mrf_miwi_24j40.c: 131: SPIPut(value);
  3044  0014F6  5003               	movf	PHYSetShortRAMAddr@value,w,c
  3045  0014F8  EC93  F00A         	call	_SPIPut
  3046                           
  3047                           ;drv_mrf_miwi_24j40.c: 132: LATBbits.LATB3 = 1;
  3048  0014FC  868A               	bsf	3978,3,c	;volatile
  3049                           
  3050                           ;drv_mrf_miwi_24j40.c: 133: INTCON3bits.INT1IE = tmpRFIE;
  3051  0014FE  B005               	btfsc	PHYSetShortRAMAddr@tmpRFIE,0,c	;volatile
  3052  001500  D002               	bra	i2u705_45
  3053  001502  96F0               	bcf	intcon3,3,c	;volatile
  3054  001504  D001               	bra	i2u705_46
  3055  001506                     i2u705_45:
  3056  001506  86F0               	bsf	intcon3,3,c	;volatile
  3057  001508                     i2u705_46:
  3058  001508  0012               	return		;funcret
  3059  00150A                     __end_of_PHYSetShortRAMAddr:
  3060                           	opt stack 0
  3061                           pclatu	equ	0xFFB
  3062                           pclath	equ	0xFFA
  3063                           tblptru	equ	0xFF8
  3064                           tblptrh	equ	0xFF7
  3065                           tblptrl	equ	0xFF6
  3066                           tablat	equ	0xFF5
  3067                           prodh	equ	0xFF4
  3068                           prodl	equ	0xFF3
  3069                           intcon	equ	0xFF2
  3070                           intcon2	equ	0xFF1
  3071                           intcon3	equ	0xFF0
  3072                           postinc0	equ	0xFEE
  3073                           fsr0h	equ	0xFEA
  3074                           fsr0l	equ	0xFE9
  3075                           wreg	equ	0xFE8
  3076                           postdec1	equ	0xFE5
  3077                           fsr1h	equ	0xFE2
  3078                           fsr1l	equ	0xFE1
  3079                           indf2	equ	0xFDF
  3080                           fsr2h	equ	0xFDA
  3081                           fsr2l	equ	0xFD9
  3082                           status	equ	0xFD8
  3083                           
  3084 ;; *************** function _PHYGetShortRAMAddr *****************
  3085 ;; Defined at:
  3086 ;;		line 154 in file "../MLA/framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
  3087 ;; Parameters:    Size  Location     Type
  3088 ;;  address         1    wreg     unsigned char 
  3089 ;; Auto vars:     Size  Location     Type
  3090 ;;  address         1    2[COMRAM] unsigned char 
  3091 ;;  tmpRFIE         1    4[COMRAM] volatile unsigned char 
  3092 ;;  toReturn        1    3[COMRAM] unsigned char 
  3093 ;; Return value:  Size  Location     Type
  3094 ;;                  1    wreg      unsigned char 
  3095 ;; Registers used:
  3096 ;;		wreg, status,2, cstack
  3097 ;; Tracked objects:
  3098 ;;		On entry : 0/0
  3099 ;;		On exit  : 0/0
  3100 ;;		Unchanged: 0/0
  3101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3103 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3105 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3106 ;;Total ram usage:        3 bytes
  3107 ;; Hardware stack levels used:    1
  3108 ;; Hardware stack levels required when called:    2
  3109 ;; This function calls:
  3110 ;;		_SPIGet
  3111 ;;		_SPIPut
  3112 ;; This function is called by:
  3113 ;;		_high_isr
  3114 ;;		_InitMRF24J40
  3115 ;; This function uses a non-reentrant model
  3116 ;;
  3117                           
  3118                           	psect	text17
  3119  0014B8                     __ptext17:
  3120                           	opt stack 0
  3121  0014B8                     _PHYGetShortRAMAddr:
  3122                           	opt stack 23
  3123                           
  3124                           ;incstack = 0
  3125                           ;PHYGetShortRAMAddr@address stored from wreg
  3126  0014B8  6E03               	movwf	PHYGetShortRAMAddr@address,c
  3127                           
  3128                           ;drv_mrf_miwi_24j40.c: 156: uint8_t toReturn;
  3129                           ;drv_mrf_miwi_24j40.c: 157: volatile uint8_t tmpRFIE = INTCON3bits.INT1IE;
  3130  0014BA  0E00               	movlw	0
  3131  0014BC  B6F0               	btfsc	intcon3,3,c	;volatile
  3132  0014BE  0E01               	movlw	1
  3133  0014C0  6E05               	movwf	PHYGetShortRAMAddr@tmpRFIE,c	;volatile
  3134                           
  3135                           ;drv_mrf_miwi_24j40.c: 159: INTCON3bits.INT1IE = 0;
  3136  0014C2  96F0               	bcf	intcon3,3,c	;volatile
  3137                           
  3138                           ;drv_mrf_miwi_24j40.c: 160: LATBbits.LATB3 = 0;
  3139  0014C4  968A               	bcf	3978,3,c	;volatile
  3140                           
  3141                           ;drv_mrf_miwi_24j40.c: 161: SPIPut(address);
  3142  0014C6  5003               	movf	PHYGetShortRAMAddr@address,w,c
  3143  0014C8  EC93  F00A         	call	_SPIPut
  3144                           
  3145                           ;drv_mrf_miwi_24j40.c: 162: toReturn = SPIGet();
  3146  0014CC  ECBF  F00A         	call	_SPIGet	;wreg free
  3147  0014D0  6E04               	movwf	PHYGetShortRAMAddr@toReturn,c
  3148                           
  3149                           ;drv_mrf_miwi_24j40.c: 163: LATBbits.LATB3 = 1;
  3150  0014D2  868A               	bsf	3978,3,c	;volatile
  3151                           
  3152                           ;drv_mrf_miwi_24j40.c: 164: INTCON3bits.INT1IE = tmpRFIE;
  3153  0014D4  B005               	btfsc	PHYGetShortRAMAddr@tmpRFIE,0,c	;volatile
  3154  0014D6  D002               	bra	i2u706_45
  3155  0014D8  96F0               	bcf	intcon3,3,c	;volatile
  3156  0014DA  D001               	bra	i2u706_46
  3157  0014DC                     i2u706_45:
  3158  0014DC  86F0               	bsf	intcon3,3,c	;volatile
  3159  0014DE                     i2u706_46:
  3160                           
  3161                           ;drv_mrf_miwi_24j40.c: 166: return toReturn;
  3162  0014DE  5004               	movf	PHYGetShortRAMAddr@toReturn,w,c
  3163  0014E0  0012               	return	
  3164  0014E2                     __end_of_PHYGetShortRAMAddr:
  3165                           	opt stack 0
  3166                           pclatu	equ	0xFFB
  3167                           pclath	equ	0xFFA
  3168                           tblptru	equ	0xFF8
  3169                           tblptrh	equ	0xFF7
  3170                           tblptrl	equ	0xFF6
  3171                           tablat	equ	0xFF5
  3172                           prodh	equ	0xFF4
  3173                           prodl	equ	0xFF3
  3174                           intcon	equ	0xFF2
  3175                           intcon2	equ	0xFF1
  3176                           intcon3	equ	0xFF0
  3177                           postinc0	equ	0xFEE
  3178                           fsr0h	equ	0xFEA
  3179                           fsr0l	equ	0xFE9
  3180                           wreg	equ	0xFE8
  3181                           postdec1	equ	0xFE5
  3182                           fsr1h	equ	0xFE2
  3183                           fsr1l	equ	0xFE1
  3184                           indf2	equ	0xFDF
  3185                           fsr2h	equ	0xFDA
  3186                           fsr2l	equ	0xFD9
  3187                           status	equ	0xFD8
  3188                           
  3189 ;; *************** function _PHYGetLongRAMAddr *****************
  3190 ;; Defined at:
  3191 ;;		line 185 in file "../MLA/framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
  3192 ;; Parameters:    Size  Location     Type
  3193 ;;  address         2    2[COMRAM] unsigned int 
  3194 ;; Auto vars:     Size  Location     Type
  3195 ;;  tmpRFIE         1    7[COMRAM] volatile unsigned char 
  3196 ;;  toReturn        1    6[COMRAM] unsigned char 
  3197 ;; Return value:  Size  Location     Type
  3198 ;;                  1    wreg      unsigned char 
  3199 ;; Registers used:
  3200 ;;		wreg, status,2, status,0, cstack
  3201 ;; Tracked objects:
  3202 ;;		On entry : 0/0
  3203 ;;		On exit  : 0/0
  3204 ;;		Unchanged: 0/0
  3205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3206 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3207 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3208 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3209 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3210 ;;Total ram usage:        6 bytes
  3211 ;; Hardware stack levels used:    1
  3212 ;; Hardware stack levels required when called:    2
  3213 ;; This function calls:
  3214 ;;		_SPIGet
  3215 ;;		_SPIPut
  3216 ;; This function is called by:
  3217 ;;		_high_isr
  3218 ;;		_InitMRF24J40
  3219 ;; This function uses a non-reentrant model
  3220 ;;
  3221                           
  3222                           	psect	text18
  3223  0013B8                     __ptext18:
  3224                           	opt stack 0
  3225  0013B8                     _PHYGetLongRAMAddr:
  3226                           	opt stack 23
  3227                           
  3228                           ;drv_mrf_miwi_24j40.c: 187: uint8_t toReturn;
  3229                           ;drv_mrf_miwi_24j40.c: 188: volatile uint8_t tmpRFIE = INTCON3bits.INT1IE;
  3230                           
  3231                           ;incstack = 0
  3232  0013B8  0E00               	movlw	0
  3233  0013BA  B6F0               	btfsc	intcon3,3,c	;volatile
  3234  0013BC  0E01               	movlw	1
  3235  0013BE  6E08               	movwf	PHYGetLongRAMAddr@tmpRFIE,c	;volatile
  3236                           
  3237                           ;drv_mrf_miwi_24j40.c: 190: INTCON3bits.INT1IE = 0;
  3238  0013C0  96F0               	bcf	intcon3,3,c	;volatile
  3239                           
  3240                           ;drv_mrf_miwi_24j40.c: 191: LATBbits.LATB3 = 0;
  3241  0013C2  968A               	bcf	3978,3,c	;volatile
  3242                           
  3243                           ;drv_mrf_miwi_24j40.c: 192: SPIPut(((address >> 3)&0x7F) | 0x80);
  3244  0013C4  C003  F005         	movff	PHYGetLongRAMAddr@address,??_PHYGetLongRAMAddr
  3245  0013C8  C004  F006         	movff	PHYGetLongRAMAddr@address+1,??_PHYGetLongRAMAddr+1
  3246  0013CC  90D8               	bcf	status,0,c
  3247  0013CE  3206               	rrcf	??_PHYGetLongRAMAddr+1,f,c
  3248  0013D0  3205               	rrcf	??_PHYGetLongRAMAddr,f,c
  3249  0013D2  90D8               	bcf	status,0,c
  3250  0013D4  3206               	rrcf	??_PHYGetLongRAMAddr+1,f,c
  3251  0013D6  3205               	rrcf	??_PHYGetLongRAMAddr,f,c
  3252  0013D8  90D8               	bcf	status,0,c
  3253  0013DA  3206               	rrcf	??_PHYGetLongRAMAddr+1,f,c
  3254  0013DC  3205               	rrcf	??_PHYGetLongRAMAddr,f,c
  3255  0013DE  5005               	movf	??_PHYGetLongRAMAddr,w,c
  3256  0013E0  0B7F               	andlw	127
  3257  0013E2  0980               	iorlw	128
  3258  0013E4  EC93  F00A         	call	_SPIPut
  3259                           
  3260                           ;drv_mrf_miwi_24j40.c: 193: SPIPut(((address << 5)&0xE0));
  3261  0013E8  3803               	swapf	PHYGetLongRAMAddr@address,w,c
  3262  0013EA  46E8               	rlncf	wreg,f,c
  3263  0013EC  0BE0               	andlw	224
  3264  0013EE  0BE0               	andlw	224
  3265  0013F0  EC93  F00A         	call	_SPIPut
  3266                           
  3267                           ;drv_mrf_miwi_24j40.c: 194: toReturn = SPIGet();
  3268  0013F4  ECBF  F00A         	call	_SPIGet	;wreg free
  3269  0013F8  6E07               	movwf	PHYGetLongRAMAddr@toReturn,c
  3270                           
  3271                           ;drv_mrf_miwi_24j40.c: 195: LATBbits.LATB3 = 1;
  3272  0013FA  868A               	bsf	3978,3,c	;volatile
  3273                           
  3274                           ;drv_mrf_miwi_24j40.c: 196: INTCON3bits.INT1IE = tmpRFIE;
  3275  0013FC  B008               	btfsc	PHYGetLongRAMAddr@tmpRFIE,0,c	;volatile
  3276  0013FE  D002               	bra	i2u707_45
  3277  001400  96F0               	bcf	intcon3,3,c	;volatile
  3278  001402  D001               	bra	i2u707_46
  3279  001404                     i2u707_45:
  3280  001404  86F0               	bsf	intcon3,3,c	;volatile
  3281  001406                     i2u707_46:
  3282                           
  3283                           ;drv_mrf_miwi_24j40.c: 198: return toReturn;
  3284  001406  5007               	movf	PHYGetLongRAMAddr@toReturn,w,c
  3285  001408  0012               	return	
  3286  00140A                     __end_of_PHYGetLongRAMAddr:
  3287                           	opt stack 0
  3288                           pclatu	equ	0xFFB
  3289                           pclath	equ	0xFFA
  3290                           tblptru	equ	0xFF8
  3291                           tblptrh	equ	0xFF7
  3292                           tblptrl	equ	0xFF6
  3293                           tablat	equ	0xFF5
  3294                           prodh	equ	0xFF4
  3295                           prodl	equ	0xFF3
  3296                           intcon	equ	0xFF2
  3297                           intcon2	equ	0xFF1
  3298                           intcon3	equ	0xFF0
  3299                           postinc0	equ	0xFEE
  3300                           fsr0h	equ	0xFEA
  3301                           fsr0l	equ	0xFE9
  3302                           wreg	equ	0xFE8
  3303                           postdec1	equ	0xFE5
  3304                           fsr1h	equ	0xFE2
  3305                           fsr1l	equ	0xFE1
  3306                           indf2	equ	0xFDF
  3307                           fsr2h	equ	0xFDA
  3308                           fsr2l	equ	0xFD9
  3309                           status	equ	0xFD8
  3310                           
  3311 ;; *************** function _SPIGet *****************
  3312 ;; Defined at:
  3313 ;;		line 102 in file "8bitswdk_pic18f46j50_24j40/firmware/src/system_config/8bitwdk_pic18f46j50_24j40/spi.c"
  3314 ;; Parameters:    Size  Location     Type
  3315 ;;		None
  3316 ;; Auto vars:     Size  Location     Type
  3317 ;;		None
  3318 ;; Return value:  Size  Location     Type
  3319 ;;                  1    wreg      unsigned char 
  3320 ;; Registers used:
  3321 ;;		wreg, status,2, cstack
  3322 ;; Tracked objects:
  3323 ;;		On entry : 0/0
  3324 ;;		On exit  : 0/0
  3325 ;;		Unchanged: 0/0
  3326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3331 ;;Total ram usage:        0 bytes
  3332 ;; Hardware stack levels used:    1
  3333 ;; Hardware stack levels required when called:    1
  3334 ;; This function calls:
  3335 ;;		_SPIPut
  3336 ;; This function is called by:
  3337 ;;		_PHYGetShortRAMAddr
  3338 ;;		_PHYGetLongRAMAddr
  3339 ;; This function uses a non-reentrant model
  3340 ;;
  3341                           
  3342                           	psect	text19
  3343  00157E                     __ptext19:
  3344                           	opt stack 0
  3345  00157E                     _SPIGet:
  3346                           	opt stack 23
  3347                           
  3348                           ;spi.c: 123: SPIPut(0x00);
  3349                           
  3350                           ;incstack = 0
  3351  00157E  0E00               	movlw	0
  3352  001580  EC93  F00A         	call	_SPIPut
  3353                           
  3354                           ;spi.c: 124: return SSP1BUF;
  3355  001584  50C9               	movf	4041,w,c	;volatile
  3356  001586  0012               	return	
  3357  001588                     __end_of_SPIGet:
  3358                           	opt stack 0
  3359                           pclatu	equ	0xFFB
  3360                           pclath	equ	0xFFA
  3361                           tblptru	equ	0xFF8
  3362                           tblptrh	equ	0xFF7
  3363                           tblptrl	equ	0xFF6
  3364                           tablat	equ	0xFF5
  3365                           prodh	equ	0xFF4
  3366                           prodl	equ	0xFF3
  3367                           intcon	equ	0xFF2
  3368                           intcon2	equ	0xFF1
  3369                           intcon3	equ	0xFF0
  3370                           postinc0	equ	0xFEE
  3371                           fsr0h	equ	0xFEA
  3372                           fsr0l	equ	0xFE9
  3373                           wreg	equ	0xFE8
  3374                           postdec1	equ	0xFE5
  3375                           fsr1h	equ	0xFE2
  3376                           fsr1l	equ	0xFE1
  3377                           indf2	equ	0xFDF
  3378                           fsr2h	equ	0xFDA
  3379                           fsr2l	equ	0xFD9
  3380                           status	equ	0xFD8
  3381                           
  3382 ;; *************** function _SPIPut *****************
  3383 ;; Defined at:
  3384 ;;		line 45 in file "8bitswdk_pic18f46j50_24j40/firmware/src/system_config/8bitwdk_pic18f46j50_24j40/spi.c"
  3385 ;; Parameters:    Size  Location     Type
  3386 ;;  v               1    wreg     unsigned char 
  3387 ;; Auto vars:     Size  Location     Type
  3388 ;;  v               1    1[COMRAM] unsigned char 
  3389 ;;  i               1    0[COMRAM] unsigned char 
  3390 ;; Return value:  Size  Location     Type
  3391 ;;                  1    wreg      void 
  3392 ;; Registers used:
  3393 ;;		wreg
  3394 ;; Tracked objects:
  3395 ;;		On entry : 0/0
  3396 ;;		On exit  : 0/0
  3397 ;;		Unchanged: 0/0
  3398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3400 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3402 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3403 ;;Total ram usage:        2 bytes
  3404 ;; Hardware stack levels used:    1
  3405 ;; This function calls:
  3406 ;;		Nothing
  3407 ;; This function is called by:
  3408 ;;		_SPIGet
  3409 ;;		_PHYSetShortRAMAddr
  3410 ;;		_PHYGetShortRAMAddr
  3411 ;;		_PHYGetLongRAMAddr
  3412 ;;		_PHYSetLongRAMAddr
  3413 ;; This function uses a non-reentrant model
  3414 ;;
  3415                           
  3416                           	psect	text20
  3417  001526                     __ptext20:
  3418                           	opt stack 0
  3419  001526                     _SPIPut:
  3420                           	opt stack 24
  3421                           
  3422                           ;incstack = 0
  3423                           ;SPIPut@v stored from wreg
  3424  001526  6E02               	movwf	SPIPut@v,c
  3425                           
  3426                           ;spi.c: 64: {
  3427                           ;spi.c: 66: uint8_t i;
  3428                           ;spi.c: 68: PIR1bits.SSP1IF = 0;
  3429  001528  969E               	bcf	3998,3,c	;volatile
  3430                           
  3431                           ;spi.c: 70: i = SSP1BUF;
  3432  00152A  CFC9 F001          	movff	4041,SPIPut@i	;volatile
  3433  00152E                     i2l147:
  3434                           
  3435                           ;spi.c: 73: {
  3436                           ;spi.c: 74: SSP1CON1bits.WCOL = 0;
  3437  00152E  9EC6               	bcf	4038,7,c	;volatile
  3438                           
  3439                           ;spi.c: 75: SSP1BUF = v;
  3440  001530  C002  FFC9         	movff	SPIPut@v,4041	;volatile
  3441                           
  3442                           ;spi.c: 76: } while( SSP1CON1bits.WCOL );
  3443  001534  BEC6               	btfsc	4038,7,c	;volatile
  3444  001536  D7FB               	goto	i2l147
  3445  001538                     i2u518_40:
  3446                           
  3447                           ;spi.c: 78: while( PIR1bits.SSP1IF == 0 );
  3448  001538  A69E               	btfss	3998,3,c	;volatile
  3449  00153A  D7FE               	goto	i2u518_40
  3450                           
  3451                           ;spi.c: 80: PIR1bits.SSP1IF = 0;
  3452  00153C  969E               	bcf	3998,3,c	;volatile
  3453  00153E  0012               	return		;funcret
  3454  001540                     __end_of_SPIPut:
  3455                           	opt stack 0
  3456                           pclatu	equ	0xFFB
  3457                           pclath	equ	0xFFA
  3458                           tblptru	equ	0xFF8
  3459                           tblptrh	equ	0xFF7
  3460                           tblptrl	equ	0xFF6
  3461                           tablat	equ	0xFF5
  3462                           prodh	equ	0xFF4
  3463                           prodl	equ	0xFF3
  3464                           intcon	equ	0xFF2
  3465                           intcon2	equ	0xFF1
  3466                           intcon3	equ	0xFF0
  3467                           postinc0	equ	0xFEE
  3468                           fsr0h	equ	0xFEA
  3469                           fsr0l	equ	0xFE9
  3470                           wreg	equ	0xFE8
  3471                           postdec1	equ	0xFE5
  3472                           fsr1h	equ	0xFE2
  3473                           fsr1l	equ	0xFE1
  3474                           indf2	equ	0xFDF
  3475                           fsr2h	equ	0xFDA
  3476                           fsr2l	equ	0xFD9
  3477                           status	equ	0xFD8
  3478                           pclatu	equ	0xFFB
  3479                           pclath	equ	0xFFA
  3480                           tblptru	equ	0xFF8
  3481                           tblptrh	equ	0xFF7
  3482                           tblptrl	equ	0xFF6
  3483                           tablat	equ	0xFF5
  3484                           prodh	equ	0xFF4
  3485                           prodl	equ	0xFF3
  3486                           intcon	equ	0xFF2
  3487                           intcon2	equ	0xFF1
  3488                           intcon3	equ	0xFF0
  3489                           postinc0	equ	0xFEE
  3490                           fsr0h	equ	0xFEA
  3491                           fsr0l	equ	0xFE9
  3492                           wreg	equ	0xFE8
  3493                           postdec1	equ	0xFE5
  3494                           fsr1h	equ	0xFE2
  3495                           fsr1l	equ	0xFE1
  3496                           indf2	equ	0xFDF
  3497                           fsr2h	equ	0xFDA
  3498                           fsr2l	equ	0xFD9
  3499                           status	equ	0xFD8
  3500                           
  3501                           	psect	rparam
  3502  0000                     pclatu	equ	0xFFB
  3503                           pclath	equ	0xFFA
  3504                           tblptru	equ	0xFF8
  3505                           tblptrh	equ	0xFF7
  3506                           tblptrl	equ	0xFF6
  3507                           tablat	equ	0xFF5
  3508                           prodh	equ	0xFF4
  3509                           prodl	equ	0xFF3
  3510                           intcon	equ	0xFF2
  3511                           intcon2	equ	0xFF1
  3512                           intcon3	equ	0xFF0
  3513                           postinc0	equ	0xFEE
  3514                           fsr0h	equ	0xFEA
  3515                           fsr0l	equ	0xFE9
  3516                           wreg	equ	0xFE8
  3517                           postdec1	equ	0xFE5
  3518                           fsr1h	equ	0xFE2
  3519                           fsr1l	equ	0xFE1
  3520                           indf2	equ	0xFDF
  3521                           fsr2h	equ	0xFDA
  3522                           fsr2l	equ	0xFD9
  3523                           status	equ	0xFD8
  3524                           
  3525                           	psect	temp
  3526  00005D                     btemp:
  3527                           	opt stack 0
  3528  00005D                     	ds	1
  3529  0000                     int$flags	set	btemp
  3530  0000                     wtemp6	set	btemp+1
  3531                           pclatu	equ	0xFFB
  3532                           pclath	equ	0xFFA
  3533                           tblptru	equ	0xFF8
  3534                           tblptrh	equ	0xFF7
  3535                           tblptrl	equ	0xFF6
  3536                           tablat	equ	0xFF5
  3537                           prodh	equ	0xFF4
  3538                           prodl	equ	0xFF3
  3539                           intcon	equ	0xFF2
  3540                           intcon2	equ	0xFF1
  3541                           intcon3	equ	0xFF0
  3542                           postinc0	equ	0xFEE
  3543                           fsr0h	equ	0xFEA
  3544                           fsr0l	equ	0xFE9
  3545                           wreg	equ	0xFE8
  3546                           postdec1	equ	0xFE5
  3547                           fsr1h	equ	0xFE2
  3548                           fsr1l	equ	0xFE1
  3549                           indf2	equ	0xFDF
  3550                           fsr2h	equ	0xFDA
  3551                           fsr2l	equ	0xFD9
  3552                           status	equ	0xFD8


Data Sizes:
    Strings     76
    Constant    90
    Data        11
    BSS         638
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     46      92
    BANK0           160     18     157
    BANK1           256      0     164
    BANK2           256      0     160
    BANK3           256      0     140
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    initValue.PAddress	PTR unsigned char  size(2) Largest target is 8
		 -> myLongAddress(BANK1[8]), 

    transParam.DestAddress	PTR unsigned char  size(2) Largest target is 91
		 -> NULL(NULL[0]), ConnectionTable(BANK1[91]), tempShortAddress(COMRAM[2]), openSocketInfo(BANK0[26]), 
		 -> MiWiTasks@sourceShortAddress(COMRAM[2]), MiWiTasks@destShortAddress(COMRAM[2]), 

    MACInitParams.PAddress	PTR unsigned char  size(2) Largest target is 8
		 -> myLongAddress(BANK1[8]), 

    S1874$PAddress	PTR unsigned char  size(2) Largest target is 8
		 -> myLongAddress(BANK1[8]), 

    MIP.PAddress	PTR unsigned char  size(2) Largest target is 8
		 -> myLongAddress(BANK1[8]), 

    S1780$Payload	PTR unsigned char  size(2) Largest target is 160
		 -> RxBuffer(BANK2[160]), 

    MACRxPacket.Payload	PTR unsigned char  size(2) Largest target is 160
		 -> RxBuffer.Payload(BANK2[79]), RxBuffer(BANK2[160]), 

    S1780$SourceAddress	PTR unsigned char  size(2) Largest target is 160
		 -> RxBuffer(BANK2[160]), 

    MACRxPacket.SourceAddress	PTR unsigned char  size(2) Largest target is 160
		 -> RxBuffer.Payload(BANK2[79]), RxBuffer(BANK2[160]), 

    S1763$DestAddress	PTR unsigned char  size(2) Largest target is 91
		 -> NULL(NULL[0]), ConnectionTable(BANK1[91]), tempShortAddress(COMRAM[2]), openSocketInfo(BANK0[26]), 
		 -> MiWiTasks@sourceShortAddress(COMRAM[2]), MiWiTasks@destShortAddress(COMRAM[2]), 

    MTP.DestAddress	PTR unsigned char  size(2) Largest target is 91
		 -> NULL(NULL[0]), ConnectionTable.AltAddress(BANK1[2]), ConnectionTable(BANK1[91]), tempShortAddress(COMRAM[2]), 
		 -> openSocketInfo.ShortAddress1(BANK0[2]), openSocketInfo(BANK0[26]), MiWiTasks@sourceShortAddress(COMRAM[2]), MiWiTasks@destShortAddress(COMRAM[2]), 

    S1673$Payload	PTR unsigned char  size(2) Largest target is 160
		 -> RxBuffer(BANK2[160]), 

    rxMessage.Payload	PTR unsigned char  size(2) Largest target is 160
		 -> RxBuffer.Payload(BANK2[79]), RxBuffer(BANK2[160]), 

    S1673$SourceAddress	PTR unsigned char  size(2) Largest target is 160
		 -> RxBuffer(BANK2[160]), 

    rxMessage.SourceAddress	PTR unsigned char  size(2) Largest target is 160
		 -> RxBuffer.Payload(BANK2[79]), RxBuffer(BANK2[160]), 

    _uartPrint@str	PTR unsigned char  size(2) Largest target is 5
		 -> STR_4(CODE[3]), STR_3(CODE[5]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    _UserInterruptHandler->i2_DELAY_ms
    _I2CTask->i2_DELAY_ms
    i2_DELAY_ms->i2___lmul
    _PHYSetShortRAMAddr->_SPIPut
    _PHYGetShortRAMAddr->_SPIPut
    _PHYGetLongRAMAddr->_SPIPut
    _SPIGet->_SPIPut

Critical Paths under _main in BANK0

    _uartRead->_uartWrite
    __uartPrint->_uartWrite
    _LCD_Initialize->_DELAY_ms
    _DELAY_ms->___lmul

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2949
                  _SYSTEM_Initialize
                         __uartPrint
                     _uartInitialize
                           _uartRead
 ---------------------------------------------------------------------------------
 (1) _uartRead                                             1     1      0     134
                                              1 BANK0      1     1      0
                          _uartWrite
                _vT100EraseEndOfLine
 ---------------------------------------------------------------------------------
 (2) _vT100EraseEndOfLine                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _uartInitialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) __uartPrint                                           6     4      2     369
                                              1 BANK0      6     4      2
                          _uartWrite
 ---------------------------------------------------------------------------------
 (2) _uartWrite                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2446
                     _LCD_Initialize
 ---------------------------------------------------------------------------------
 (2) _LCD_Initialize                                       0     0      0    2446
                           _DELAY_ms
                           _I2CWrite
 ---------------------------------------------------------------------------------
 (3) _I2CWrite                                             2     1      1     686
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (3) _DELAY_ms                                             6     4      2    1760
                                             12 BANK0      6     4      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     720
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _high_isr                                            28    28      0    3865
                                             18 COMRAM    28    28      0
                  _PHYGetLongRAMAddr
                 _PHYGetShortRAMAddr
                 _PHYSetShortRAMAddr
               _UserInterruptHandler
 ---------------------------------------------------------------------------------
 (6) _UserInterruptHandler                                 0     0      0     584
                            _I2CTask
                         i2_DELAY_ms
 ---------------------------------------------------------------------------------
 (7) _I2CTask                                              0     0      0     292
                         i2_DELAY_ms
 ---------------------------------------------------------------------------------
 (7) i2_DELAY_ms                                           6     4      2     292
                                             12 COMRAM     6     4      2
                           i2___lmul
 ---------------------------------------------------------------------------------
 (8) i2___lmul                                            12     4      8     144
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) _PHYSetShortRAMAddr                                   3     2      1    2404
                                              2 COMRAM     3     2      1
                             _SPIPut
 ---------------------------------------------------------------------------------
 (6) _PHYGetShortRAMAddr                                   3     3      0     114
                                              2 COMRAM     3     3      0
                             _SPIGet
                             _SPIPut
 ---------------------------------------------------------------------------------
 (6) _PHYGetLongRAMAddr                                    6     4      2     403
                                              2 COMRAM     6     4      2
                             _SPIGet
                             _SPIPut
 ---------------------------------------------------------------------------------
 (7) _SPIGet                                               0     0      0      23
                             _SPIPut
 ---------------------------------------------------------------------------------
 (7) _SPIPut                                               2     2      0      23
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _LCD_Initialize
       _DELAY_ms
         ___lmul
       _I2CWrite
   __uartPrint
     _uartWrite
   _uartInitialize
   _uartRead
     _uartWrite
     _vT100EraseEndOfLine

 _high_isr (ROOT)
   _PHYGetLongRAMAddr
     _SPIGet
       _SPIPut
     _SPIPut
   _PHYGetShortRAMAddr
     _SPIGet
       _SPIPut
     _SPIPut
   _PHYSetShortRAMAddr
     _SPIPut
   _UserInterruptHandler
     _I2CTask
       i2_DELAY_ms
         i2___lmul
     i2_DELAY_ms
       i2___lmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      8C      12       54.7%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      A0      10       62.5%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      A4       8       64.1%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     12      9D       5       98.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2E      5C       1       97.9%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2C9       6        0.0%
DATA                 0      0     2C9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Sep 19 15:23:01 2019

                        _LCD_Initialize 1292                            _RoutingTable 0072  
                                    l43 116A                                      l44 1156  
                     _ActiveScanResults 0300                                     l314 1460  
                                   l326 1438                                     l327 1416  
                                   l278 14A0                                     _MTP 003A  
           __size_of_PHYSetShortRAMAddr 0028                         __end_of_I2CTask 1058  
                                   prod 000FF3                                     wreg 000FE8  
                            _TXSTA2bits 000FA8                             ?i2_DELAY_ms 000D  
                                  l1274 131C                                    l1275 1330  
                                  l8801 150E                                    l8849 1574  
                                  STR_1 0F8E                                    STR_2 0F7D  
                                  STR_3 0F9F                                    STR_4 0FA4  
                                  STR_5 0F5B                                    STR_6 0F6C  
                                  _LATA 000F89                                    _LATB 000F8A  
                                  _LATD 000F8C                                    _LATE 000F8D  
                                  i2l43 11F6                                    i2l44 11E4  
                                  i2l90 0FF8                                    i2l94 102A  
                                  _main 148A                                    _role 0044  
                                  fsr0h 000FEA                                    fsr1h 000FE2  
                                  fsr2h 000FDA                                    fsr0l 000FE9  
                                  indf2 000FDF                                    fsr1l 000FE1  
                                  fsr2l 000FD9                                    btemp 005D  
                      __end_of_I2CWrite 1526                                    prodh 000FF4  
                                  prodl 000FF3                                    start 0212  
                      __end_of_DELAY_ms 117E                  __end_of_LCD_Initialize 130A  
                          ___param_bank 000000                       _PHYGetLongRAMAddr 13B8  
                    ?_PHYGetLongRAMAddr 0003                           __CFG_PLLDIV$2 000000  
                          _BAUDCON1bits 000F7E             __end_of_vT100EraseEndOfLine 1594  
                                 ?_main 0001                                   _T1CON 000FCD  
                                 i2l147 152E                     ??_PHYGetLongRAMAddr 0005  
                                 _TMR1H 000FCF                                   _TMR0L 000FD6  
                                 _TMR1L 000FCE                                   _TRISA 000F92  
                                 _TRISB 000F93                                   _TRISC 000F94  
                                 _TRISD 000F95                                   _TRISE 000F96  
                            _CommandLen 004F                              _CommandPtr 004D  
                   ___lmul@multiplicand 00EE                              _MiWiSeqNum 0045  
                        _myShortAddress 0056              __end_of_PHYGetShortRAMAddr 14E2  
                       __end_of_dpowers 0F53                                   pclath 000FFA  
                                 tablat 000FF5                        __end_ofi2___lmul 13B8  
                                 status 000FD8                                   wtemp6 005E  
             __end_of_PHYGetLongRAMAddr 140A                         ?_LCD_Initialize 0001  
                       __initialization 1058                            __end_of_main 14B8  
                   __size_ofi2_DELAY_ms 008C                           high_isr@flags 002B  
                     _MACCurrentChannel 0095               PHYGetShortRAMAddr@address 0003  
                             ??_I2CTask 0013                          __CFG_OSC$HSPLL 000000  
                      __end_of_ScanTime 0F3D                                  ??_main 00FC  
                         __activetblptr 000002               PHYGetShortRAMAddr@tmpRFIE 0005  
             PHYSetShortRAMAddr@address 0004                                  _EECON2 000FA7  
                                _ANCON0 000F48                                  _ANCON1 000F49  
                                i2l1100 0088                                  i2l1111 018A  
                                i2l1103 009A                                  i2l1112 01A0  
                                i2l1113 01AE                                  i2l1105 00B6  
                                i2l1106 0196                                  i2l1107 0180  
                                i2l1116 01C2                                  i2l1108 013C  
                                i2l1109 0108                                  i2l1274 1372  
                                i2l1275 1386                          __CFG_WDTEN$OFF 000000  
                                _INTCON 000FF2                                  i2l8649 0092  
                                _RCREG2 000FAA                                  _RCSTA2 000F9C  
                                _OSCCON 000FD3                                  _SPBRG2 000FAB  
                      i2___lmul@product 0009                                  _RPINR1 000EE7  
                                _RPOR17 000ED7                                  _SPIGet 157E  
                                _SPIPut 1526                                  _TXREG2 000FA9  
             PHYSetShortRAMAddr@tmpRFIE 0005                                  _TXSTA2 000FA8  
         __size_of_UserInterruptHandler 0018                            i2DELAY_ms@ms 000D  
                        __CFG_XINST$OFF 000000                                  _TxData 0047  
                      __end_of_high_isr 0212                                  ___lmul 130A  
                                clear_0 10A8                                  clear_1 10B4  
                                clear_2 10C0                                  clear_3 10CC  
                                clear_4 10D8                            __pdataCOMRAM 005B  
                      __end_of_uartRead 148A                          _openSocketInfo 00CE  
                             ?_I2CWrite 00EA                            __mediumconst 0000  
                                tblptrh 000FF7                                  tblptrl 000FF6  
                                tblptru 000FF8                               ?_DELAY_ms 00F6  
                     _SYSTEM_Initialize 120A                              __accesstop 0060  
               __end_of__initialization 10DE                      ?_SYSTEM_Initialize 0001  
                         ___rparam_used 000001              __size_of_PHYGetLongRAMAddr 0052  
                 _ActiveScanResultIndex 0049                          __pcstackCOMRAM 0001  
                        high_isr@RxBank 002D                            __pidataBANK0 1594  
                          __pidataBANK1 1588                     ??_SYSTEM_Initialize 00FC  
                             ?i2___lmul 0001                         _ConnectionTable 0120  
                            ??_I2CWrite 00EB                            ??i2_DELAY_ms 000F  
                            ??_DELAY_ms 00F8                 __size_of_uartInitialize 0018  
             __end_of_SYSTEM_Initialize 1292                              __pbssBANK0 0060  
                            __pbssBANK1 0100                              __pbssBANK2 0200  
                            __pbssBANK3 0300                                 ?_SPIGet 0001  
                               ?_SPIPut 0001              PHYGetShortRAMAddr@toReturn 0004  
                    I2CWrite@Commandlen 00EB                                 ?___lmul 00EA  
                    __end_ofi2_DELAY_ms 120A                              __uartPrint 140A  
                               _I2CTask 0FA8                          ___lmul@product 00F2  
                               SPIPut@i 0001                                 SPIPut@v 0002  
            __end_of_PHYSetShortRAMAddr 150A                              ??i2___lmul 0009  
                    __size_of_uartWrite 000E                                 _LCDText 017B  
                               _SPBRGH2 000F7D                                 _RPINR16 000EF6  
                        _failureCounter 0091                                 _SSP2ADD 000F74  
                               _SSP1BUF 000FC9                                 _SSP2BUF 000F75  
                             ?_high_isr 0001                            __uartPrint@i 00EF  
                      ??_LCD_Initialize 00FC                         _timerExtension1 004B  
                       _timerExtension2 009A                         __size_of_SPIGet 000A  
                       __size_of_SPIPut 001A                      _PHYGetShortRAMAddr 14B8  
                            DELAY_ms@ms 00F6                     _AcknowledgementAddr 0093  
                               __Hparam 0000                                 __Lparam 0000  
                             ?_uartRead 0001                                 _TextLen 004E  
                               _TextPtr 004C                         __size_of___lmul 0058  
                   ?_PHYGetShortRAMAddr 0001                            __psmallconst 0F00  
                        _tempNodeStatus 0048                                 __pcinit 1058  
                               __ramtop 0F00                                 __ptext0 148A  
                               __ptext1 1458                                 __ptext2 1592  
                               __ptext3 1540                                 __ptext4 140A  
                               __ptext5 1570                                 __ptext6 120A  
                               __ptext7 1292                                 __ptext8 150A  
                               __ptext9 10EC                                 _myPANID 0054  
                     __end_of_hexpowers 0F5B                               _T1CONbits 000FCD  
                               _dpowers 0F49                           _myLongAddress 019C  
                             _MAC_PANID 0052            __size_of_vT100EraseEndOfLine 0002  
                           uartRead@val 00EB                    ??_PHYGetShortRAMAddr 0003  
            __size_of_SYSTEM_Initialize 0088                              ??_high_isr 0013  
                  end_of_initialization 10DE                        _MiWiStateMachine 0041  
                     __end_of_octpowers 0F49                           __Lmediumconst 0000  
                     __end_of_uartWrite 157E                              ??_uartRead 00EB  
                               postdec1 000FE5                                 postinc0 000FEE  
                   i2___lmul@multiplier 0001  i2DELAY_ms@cyclesRequiredForEntireDelay 000F  
  DELAY_ms@cyclesRequiredForEntireDelay 00F8                             ?__uartPrint 00EB  
                             _PORTBbits 000F81            __end_of_UserInterruptHandler 1570  
                             _TRISAbits 000F92                               _TRISBbits 000F93  
                             _TRISCbits 000F94                               _TRISDbits 000F95  
                        _uartInitialize 1540                       __size_of_I2CWrite 001C  
                             _BankIndex 005B                       __size_of_DELAY_ms 0092  
                        __uartPrint@str 00EB                          __end_of_SPIGet 1588  
                        __end_of_SPIPut 1540                          __end_of___lmul 1362  
              PHYGetLongRAMAddr@address 0003                           __pidataCOMRAM 1590  
                __end_of_uartInitialize 1558                     start_initialization 1058  
                     __size_ofi2___lmul 0056                PHYGetLongRAMAddr@tmpRFIE 0008  
                   __size_of__uartPrint 004E                         high_isr@results 002A  
                              ??_SPIGet 0003                                ??_SPIPut 0001  
                        _currentChannel 005A                                ??___lmul 00F2  
                           __pdataBANK0 00FC                             __pdataBANK1 019C  
                              ?_I2CTask 0001                             __pbssCOMRAM 002F  
                       ?_uartInitialize 0001                           __pcstackBANK0 00EA  
                           _defaultHops 005C                      _PHYSetShortRAMAddr 14E2  
               PHYSetShortRAMAddr@value 0003                       __size_of_high_isr 020A  
                   ?_PHYSetShortRAMAddr 0003                    _UserInterruptHandler 1558  
                     I2CWrite@BufferLen 00EA                        _MiWiCapacityInfo 0099  
                   _vT100EraseEndOfLine 1592                               __pintcode 0008  
                     __size_of_uartRead 0032                    ??_PHYSetShortRAMAddr 0004  
                           __smallconst 0F00                                _I2CWrite 150A  
                    _AcknowledgementSeq 00FC                    ?_vT100EraseEndOfLine 0001  
                              _DELAY_ms 10EC                               _hexpowers 0F53  
                              _LATBbits 000F8A                                _LATCbits 000F8B  
                              _LATDbits 000F8C                               _tempPANID 00E8  
                 ?_UserInterruptHandler 0001                               _octpowers 0F3D  
                              _PIE1bits 000F9D                                _PIE3bits 000FA3  
             PHYGetLongRAMAddr@toReturn 0007                                _PIR1bits 000F9E  
                              _PIR3bits 000FA4                                i2u518_40 1538  
                              i2u535_40 0FB8                                i2u705_45 1506  
                              i2u705_46 1508                                i2u706_45 14DC  
                              i2u706_46 14DE                                i2u707_45 1404  
                              i2u707_46 1406                               _rxMessage 0060  
                              i2u957_40 00BA                              uartWrite@c 00EA  
                             _uartWrite 1570                                _SSP1CON1 000FC6  
                              _SSP2CON1 000F72                                _SSP2CON2 000F71  
                              _SSP1STAT 000FC7                                _SSP2STAT 000F73  
                          ??__uartPrint 00ED                             _MACRxPacket 002F  
                      __size_of_I2CTask 00B0                                i2___lmul 1362  
                             high_isr@i 002E                   ??_vT100EraseEndOfLine 00EA  
                       _MiWiAckRequired 0098                                _ConnMode 004A  
                     ___lmul@multiplier 00EA                             _INTCON2bits 000FF1  
                           _INTCON3bits 000FF0             __size_of_PHYGetShortRAMAddr 002A  
                             copy_data0 106C                      __end_of__uartPrint 1458  
                              _ScanTime 0F01                                _RxBuffer 0200  
                              __Hrparam 0000                                _TxBuffer 009B  
                              __Lrparam 0000                              ?_uartWrite 0001  
               __size_of_LCD_Initialize 0078                         _tempLongAddress 007A  
                            _IEEESeqNum 0096                                __ptext10 130A  
                              __ptext20 1526                                __ptext12 1558  
                              __ptext13 0FA8                                __ptext14 117E  
                              __ptext15 1362                                __ptext16 14E2  
                              __ptext17 14B8                                __ptext18 13B8  
                              __ptext19 157E                        _switch0PressTime 008A  
                          _SSP1CON1bits 000FC6                                _high_isr 0008  
                          _SSP2CON1bits 000F72                            _SSP2CON2bits 000F71  
                      _switch1PressTime 0086                  ??_UserInterruptHandler 0013  
                         __size_of_main 002E                                _myParent 0046  
                            _LCDCommand 0082                                _uartRead 1458  
                      _tempShortAddress 0058                                int$flags 005D  
                      ??_uartInitialize 00EA                   __CFG_CPUDIV$OSC3_PLL3 000000  
                           _OSCTUNEbits 000F9B                              _INTCONbits 000FF2  
                 i2___lmul@multiplicand 0005                              i2_DELAY_ms 117E  
                      _myNetworkAddress 0050                                intlevel2 0000  
                            _RCSTA2bits 000F9C                             ??_uartWrite 00EA  
                         _MACInitParams 008E                          _MRF24J40Status 0043  
                      _BroadcastRecords 0100                              _PPSCONbits 000EFF  
                            _WDTCONbits 000FC0                       _knownCoordinators 0097  
                        _RouterFailures 006A  
