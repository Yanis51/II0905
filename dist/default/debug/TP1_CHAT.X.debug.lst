

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Sep 19 15:10:35 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F46J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    34                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    35  0000                     
    36                           ; Version 1.45
    37                           ; Generated 16/11/2017 GMT
    38                           ; 
    39                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC18F46J50 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     
    71                           	psect	idataCOMRAM
    72  00132B                     __pidataCOMRAM:
    73                           	opt stack 0
    74                           
    75                           ;initializer for _BankIndex
    76  00132B  FF                 	db	255
    77                           
    78                           ;initializer for _defaultHops
    79  00132C  04                 	db	4
    80                           
    81                           	psect	idataBANK0
    82  001322                     __pidataBANK0:
    83                           	opt stack 0
    84                           
    85                           ;initializer for _AcknowledgementSeq
    86  001322  FF                 	db	255
    87                           
    88                           ;initializer for _myLongAddress
    89  001323  01                 	db	1
    90  001324  11                 	db	17
    91  001325  22                 	db	34
    92  001326  33                 	db	51
    93  001327  44                 	db	68
    94  001328  55                 	db	85
    95  001329  66                 	db	102
    96  00132A  11                 	db	17
    97                           
    98                           	psect	smallconst
    99  000F00                     __psmallconst:
   100                           	opt stack 0
   101  000F00  00                 	db	0
   102  000F01                     _ScanTime:
   103                           	opt stack 0
   104  000F01  03C0               	dw	960
   105  000F03  0000               	dw	0
   106  000F05  05A0               	dw	1440
   107  000F07  0000               	dw	0
   108  000F09  0960               	dw	2400
   109  000F0B  0000               	dw	0
   110  000F0D  10E0               	dw	4320
   111  000F0F  0000               	dw	0
   112  000F11  1FE0               	dw	8160
   113  000F13  0000               	dw	0
   114  000F15  3DE0               	dw	15840
   115  000F17  0000               	dw	0
   116  000F19  79E0               	dw	31200
   117  000F1B  0000               	dw	0
   118  000F1D  F1E0               	dw	61920
   119  000F1F  0000               	dw	0
   120  000F21  E1E0               	dw	57824
   121  000F23  0001               	dw	1
   122  000F25  C1E0               	dw	49632
   123  000F27  0003               	dw	3
   124  000F29  81E0               	dw	33248
   125  000F2B  0007               	dw	7
   126  000F2D  01E0               	dw	480
   127  000F2F  000F               	dw	15
   128  000F31  01E0               	dw	480
   129  000F33  001E               	dw	30
   130  000F35  3D44               	dw	15684
   131  000F37  001B               	dw	27
   132  000F39  B40D               	dw	46093
   133  000F3B  0015               	dw	21
   134  000F3D                     __end_of_ScanTime:
   135                           	opt stack 0
   136  000F3D                     _octpowers:
   137                           	opt stack 0
   138  000F3D  0001               	dw	1
   139  000F3F  0008               	dw	8
   140  000F41  0040               	dw	64
   141  000F43  0200               	dw	512
   142  000F45  1000               	dw	4096
   143  000F47  8000               	dw	32768
   144  000F49                     __end_of_octpowers:
   145                           	opt stack 0
   146  000F49                     _dpowers:
   147                           	opt stack 0
   148  000F49  0001               	dw	1
   149  000F4B  000A               	dw	10
   150  000F4D  0064               	dw	100
   151  000F4F  03E8               	dw	1000
   152  000F51  2710               	dw	10000
   153  000F53                     __end_of_dpowers:
   154                           	opt stack 0
   155  000F53                     _hexpowers:
   156                           	opt stack 0
   157  000F53  0001               	dw	1
   158  000F55  0010               	dw	16
   159  000F57  0100               	dw	256
   160  000F59  1000               	dw	4096
   161  000F5B                     __end_of_hexpowers:
   162                           	opt stack 0
   163  0000                     _RPOR17	set	3799
   164  0000                     _RPINR16	set	3830
   165  0000                     _RPINR1	set	3815
   166  0000                     _PPSCONbits	set	3839
   167  0000                     _ANCON1	set	3913
   168  0000                     _ANCON0	set	3912
   169  0000                     _TMR0L	set	4054
   170  0000                     _TXREG2	set	4009
   171  0000                     _TXSTA2bits	set	4008
   172  0000                     _RCREG2	set	4010
   173  0000                     _RCSTA2bits	set	3996
   174  0000                     _RCSTA2	set	3996
   175  0000                     _TXSTA2	set	4008
   176  0000                     _SPBRG2	set	4011
   177  0000                     _SPBRGH2	set	3965
   178  0000                     _BAUDCON1bits	set	3966
   179  0000                     _INTCON3bits	set	4080
   180  0000                     _LATCbits	set	3979
   181  0000                     _SSP1CON1	set	4038
   182  0000                     _SSP1STAT	set	4039
   183  0000                     _TRISCbits	set	3988
   184  0000                     _LATDbits	set	3980
   185  0000                     _TRISDbits	set	3989
   186  0000                     _LATBbits	set	3978
   187  0000                     _TRISAbits	set	3986
   188  0000                     _TRISBbits	set	3987
   189  0000                     _LATE	set	3981
   190  0000                     _LATD	set	3980
   191  0000                     _LATB	set	3978
   192  0000                     _LATA	set	3977
   193  0000                     _TRISE	set	3990
   194  0000                     _TRISC	set	3988
   195  0000                     _TRISB	set	3987
   196  0000                     _TRISA	set	3986
   197  0000                     _INTCON2bits	set	4081
   198  0000                     _EECON2	set	4007
   199  0000                     _INTCON	set	4082
   200  0000                     _OSCTUNEbits	set	3995
   201  0000                     _WDTCONbits	set	4032
   202  0000                     _OSCCON	set	4051
   203  0000                     _TMR1H	set	4047
   204  0000                     _TMR1L	set	4046
   205  0000                     _T1CONbits	set	4045
   206  0000                     _PIE1bits	set	3997
   207  0000                     _T1CON	set	4045
   208  0000                     _SSP2CON1bits	set	3954
   209  0000                     _SSP1CON1bits	set	4038
   210  0000                     _SSP1BUF	set	4041
   211  0000                     _PIR1bits	set	3998
   212  0000                     _INTCONbits	set	4082
   213  0000                     _PIE3bits	set	4003
   214  0000                     _SSP2CON2	set	3953
   215  0000                     _SSP2CON1	set	3954
   216  0000                     _SSP2ADD	set	3956
   217  0000                     _SSP2STAT	set	3955
   218  0000                     _PIR3bits	set	4004
   219  0000                     _TRISD	set	3989
   220  0000                     _SSP2BUF	set	3957
   221  0000                     _SSP2CON2bits	set	3953
   222  0000                     _PORTBbits	set	3969
   223  000F5B  30                 	db	48	;'0'
   224  000F5C  31                 	db	49	;'1'
   225  000F5D  32                 	db	50	;'2'
   226  000F5E  33                 	db	51	;'3'
   227  000F5F  34                 	db	52	;'4'
   228  000F60  35                 	db	53	;'5'
   229  000F61  36                 	db	54	;'6'
   230  000F62  37                 	db	55	;'7'
   231  000F63  38                 	db	56	;'8'
   232  000F64  39                 	db	57	;'9'
   233  000F65  41                 	db	65	;'A'
   234  000F66  42                 	db	66	;'B'
   235  000F67  43                 	db	67	;'C'
   236  000F68  44                 	db	68	;'D'
   237  000F69  45                 	db	69	;'E'
   238  000F6A  46                 	db	70	;'F'
   239  000F6B  00                 	db	0
   240  000F6C  30                 	db	48	;'0'
   241  000F6D  31                 	db	49	;'1'
   242  000F6E  32                 	db	50	;'2'
   243  000F6F  33                 	db	51	;'3'
   244  000F70  34                 	db	52	;'4'
   245  000F71  35                 	db	53	;'5'
   246  000F72  36                 	db	54	;'6'
   247  000F73  37                 	db	55	;'7'
   248  000F74  38                 	db	56	;'8'
   249  000F75  39                 	db	57	;'9'
   250  000F76  61                 	db	97	;'a'
   251  000F77  62                 	db	98	;'b'
   252  000F78  63                 	db	99	;'c'
   253  000F79  64                 	db	100	;'d'
   254  000F7A  65                 	db	101	;'e'
   255  000F7B  66                 	db	102	;'f'
   256  000F7C  00                 	db	0
   257  000F7D  52                 	db	82	;'R'
   258  000F7E  58                 	db	88	;'X'
   259  000F7F  20                 	db	32
   260  000F80  4D                 	db	77	;'M'
   261  000F81  65                 	db	101	;'e'
   262  000F82  73                 	db	115	;'s'
   263  000F83  73                 	db	115	;'s'
   264  000F84  61                 	db	97	;'a'
   265  000F85  67                 	db	103	;'g'
   266  000F86  65                 	db	101	;'e'
   267  000F87  73                 	db	115	;'s'
   268  000F88  3A                 	db	58	;':'
   269  000F89  20                 	db	32
   270  000F8A  25                 	db	37
   271  000F8B  33                 	db	51	;'3'
   272  000F8C  64                 	db	100	;'d'
   273  000F8D  00                 	db	0
   274  000F8E  54                 	db	84	;'T'
   275  000F8F  58                 	db	88	;'X'
   276  000F90  20                 	db	32
   277  000F91  4D                 	db	77	;'M'
   278  000F92  65                 	db	101	;'e'
   279  000F93  73                 	db	115	;'s'
   280  000F94  73                 	db	115	;'s'
   281  000F95  61                 	db	97	;'a'
   282  000F96  67                 	db	103	;'g'
   283  000F97  65                 	db	101	;'e'
   284  000F98  73                 	db	115	;'s'
   285  000F99  3A                 	db	58	;':'
   286  000F9A  20                 	db	32
   287  000F9B  25                 	db	37
   288  000F9C  33                 	db	51	;'3'
   289  000F9D  64                 	db	100	;'d'
   290  000F9E  00                 	db	0
   291  000F9F                     STR_3:
   292  000F9F  54                 	db	84	;'T'
   293  000FA0  65                 	db	101	;'e'
   294  000FA1  73                 	db	115	;'s'
   295  000FA2  74                 	db	116	;'t'
   296  000FA3  00                 	db	0
   297                           
   298                           ; #config settings
   299  000FA4  00                 	db	0	; dummy byte at the end
   300  0000                     
   301                           	psect	cinit
   302  0010E2                     __pcinit:
   303                           	opt stack 0
   304  0010E2                     start_initialization:
   305                           	opt stack 0
   306  0010E2                     __initialization:
   307                           	opt stack 0
   308                           
   309                           ; Initialize objects allocated to BANK0 (9 bytes)
   310                           ; load TBLPTR registers with __pidataBANK0
   311  0010E2  0E22               	movlw	low __pidataBANK0
   312  0010E4  6EF6               	movwf	tblptrl,c
   313  0010E6  0E13               	movlw	high __pidataBANK0
   314  0010E8  6EF7               	movwf	tblptrh,c
   315  0010EA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   316  0010EC  6EF8               	movwf	tblptru,c
   317  0010EE  EE00  F0E9         	lfsr	0,__pdataBANK0
   318  0010F2  EE10 F009          	lfsr	1,9
   319  0010F6                     copy_data0:
   320  0010F6  0009               	tblrd		*+
   321  0010F8  CFF5 FFEE          	movff	tablat,postinc0
   322  0010FC  50E5               	movf	postdec1,w,c
   323  0010FE  50E1               	movf	fsr1l,w,c
   324  001100  E1FA               	bnz	copy_data0
   325                           
   326                           ; Initialize objects allocated to COMRAM (2 bytes)
   327                           ; load TBLPTR registers with __pidataCOMRAM
   328  001102  0E2B               	movlw	low __pidataCOMRAM
   329  001104  6EF6               	movwf	tblptrl,c
   330  001106  0E13               	movlw	high __pidataCOMRAM
   331  001108  6EF7               	movwf	tblptrh,c
   332  00110A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   333  00110C  6EF8               	movwf	tblptru,c
   334  00110E  0009               	tblrd		*+	;fetch initializer
   335  001110  CFF5 F05C          	movff	tablat,__pdataCOMRAM
   336  001114  0009               	tblrd		*+	;fetch initializer
   337  001116  CFF5 F05D          	movff	tablat,__pdataCOMRAM+1
   338                           
   339                           ; Clear objects allocated to BANK3 (140 bytes)
   340  00111A  EE03  F000         	lfsr	0,__pbssBANK3
   341  00111E  0E8C               	movlw	140
   342  001120                     clear_0:
   343  001120  6AEE               	clrf	postinc0,c
   344  001122  06E8               	decf	wreg,f,c
   345  001124  E1FD               	bnz	clear_0
   346                           
   347                           ; Clear objects allocated to BANK2 (160 bytes)
   348  001126  EE02  F000         	lfsr	0,__pbssBANK2
   349  00112A  0EA0               	movlw	160
   350  00112C                     clear_1:
   351  00112C  6AEE               	clrf	postinc0,c
   352  00112E  06E8               	decf	wreg,f,c
   353  001130  E1FD               	bnz	clear_1
   354                           
   355                           ; Clear objects allocated to BANK1 (156 bytes)
   356  001132  EE01  F000         	lfsr	0,__pbssBANK1
   357  001136  0E9C               	movlw	156
   358  001138                     clear_2:
   359  001138  6AEE               	clrf	postinc0,c
   360  00113A  06E8               	decf	wreg,f,c
   361  00113C  E1FD               	bnz	clear_2
   362                           
   363                           ; Clear objects allocated to BANK0 (137 bytes)
   364  00113E  EE00  F060         	lfsr	0,__pbssBANK0
   365  001142  0E89               	movlw	137
   366  001144                     clear_3:
   367  001144  6AEE               	clrf	postinc0,c
   368  001146  06E8               	decf	wreg,f,c
   369  001148  E1FD               	bnz	clear_3
   370                           
   371                           ; Clear objects allocated to COMRAM (45 bytes)
   372  00114A  EE00  F02F         	lfsr	0,__pbssCOMRAM
   373  00114E  0E2D               	movlw	45
   374  001150                     clear_4:
   375  001150  6AEE               	clrf	postinc0,c
   376  001152  06E8               	decf	wreg,f,c
   377  001154  E1FD               	bnz	clear_4
   378  001156                     end_of_initialization:
   379                           	opt stack 0
   380  001156                     __end_of__initialization:
   381                           	opt stack 0
   382  001156  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   383  001158  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   384  00115A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   385  00115C  6EF8               	movwf	tblptru,c
   386  00115E  0100               	movlb	0
   387  001160  EF7B  F009         	goto	_main	;jump to C main() function
   388                           tblptru	equ	0xFF8
   389                           tblptrh	equ	0xFF7
   390                           tblptrl	equ	0xFF6
   391                           tablat	equ	0xFF5
   392                           postinc0	equ	0xFEE
   393                           wreg	equ	0xFE8
   394                           postdec1	equ	0xFE5
   395                           fsr1l	equ	0xFE1
   396                           
   397                           	psect	bssCOMRAM
   398  00002F                     __pbssCOMRAM:
   399                           	opt stack 0
   400  00002F                     _MACRxPacket:
   401                           	opt stack 0
   402  00002F                     	ds	11
   403  00003A                     _MTP:
   404                           	opt stack 0
   405  00003A                     	ds	7
   406  000041                     _MiWiStateMachine:
   407                           	opt stack 0
   408  000041                     	ds	2
   409  000043                     _MRF24J40Status:
   410                           	opt stack 0
   411  000043                     	ds	1
   412  000044                     _role:
   413                           	opt stack 0
   414  000044                     	ds	1
   415  000045                     _MiWiAckRequired:
   416                           	opt stack 0
   417  000045                     	ds	1
   418  000046                     _MiWiSeqNum:
   419                           	opt stack 0
   420  000046                     	ds	1
   421  000047                     _myParent:
   422                           	opt stack 0
   423  000047                     	ds	1
   424  000048                     _TxData:
   425                           	opt stack 0
   426  000048                     	ds	1
   427  000049                     _tempNodeStatus:
   428                           	opt stack 0
   429  000049                     	ds	1
   430  00004A                     _ActiveScanResultIndex:
   431                           	opt stack 0
   432  00004A                     	ds	1
   433  00004B                     _ConnMode:
   434                           	opt stack 0
   435  00004B                     	ds	1
   436  00004C                     _timerExtension1:
   437                           	opt stack 0
   438  00004C                     	ds	1
   439  00004D                     _TextPtr:
   440                           	opt stack 0
   441  00004D                     	ds	1
   442  00004E                     _CommandPtr:
   443                           	opt stack 0
   444  00004E                     	ds	1
   445  00004F                     _TextLen:
   446                           	opt stack 0
   447  00004F                     	ds	1
   448  000050                     _CommandLen:
   449                           	opt stack 0
   450  000050                     	ds	1
   451  000051                     _myNetworkAddress:
   452                           	opt stack 0
   453  000051                     	ds	2
   454  000053                     _MAC_PANID:
   455                           	opt stack 0
   456  000053                     	ds	2
   457  000055                     _myPANID:
   458                           	opt stack 0
   459  000055                     	ds	2
   460  000057                     _myShortAddress:
   461                           	opt stack 0
   462  000057                     	ds	2
   463  000059                     _tempShortAddress:
   464                           	opt stack 0
   465  000059                     	ds	2
   466  00005B                     _currentChannel:
   467                           	opt stack 0
   468  00005B                     	ds	1
   469                           tblptru	equ	0xFF8
   470                           tblptrh	equ	0xFF7
   471                           tblptrl	equ	0xFF6
   472                           tablat	equ	0xFF5
   473                           postinc0	equ	0xFEE
   474                           wreg	equ	0xFE8
   475                           postdec1	equ	0xFE5
   476                           fsr1l	equ	0xFE1
   477                           
   478                           	psect	dataCOMRAM
   479  00005C                     __pdataCOMRAM:
   480                           	opt stack 0
   481  00005C                     _BankIndex:
   482                           	opt stack 0
   483  00005C                     	ds	1
   484  00005D                     _defaultHops:
   485                           	opt stack 0
   486  00005D                     	ds	1
   487                           tblptru	equ	0xFF8
   488                           tblptrh	equ	0xFF7
   489                           tblptrl	equ	0xFF6
   490                           tablat	equ	0xFF5
   491                           postinc0	equ	0xFEE
   492                           wreg	equ	0xFE8
   493                           postdec1	equ	0xFE5
   494                           fsr1l	equ	0xFE1
   495                           
   496                           	psect	bssBANK0
   497  000060                     __pbssBANK0:
   498                           	opt stack 0
   499  000060                     _rxMessage:
   500                           	opt stack 0
   501  000060                     	ds	10
   502  00006A                     _RouterFailures:
   503                           	opt stack 0
   504  00006A                     	ds	8
   505  000072                     _RoutingTable:
   506                           	opt stack 0
   507  000072                     	ds	8
   508  00007A                     _tempLongAddress:
   509                           	opt stack 0
   510  00007A                     	ds	8
   511  000082                     _LCDCommand:
   512                           	opt stack 0
   513  000082                     	ds	4
   514  000086                     _switch1PressTime:
   515                           	opt stack 0
   516  000086                     	ds	4
   517  00008A                     _switch0PressTime:
   518                           	opt stack 0
   519  00008A                     	ds	4
   520  00008E                     _MACInitParams:
   521                           	opt stack 0
   522  00008E                     	ds	3
   523  000091                     _failureCounter:
   524                           	opt stack 0
   525  000091                     	ds	2
   526  000093                     _AcknowledgementAddr:
   527                           	opt stack 0
   528  000093                     	ds	2
   529  000095                     _MACCurrentChannel:
   530                           	opt stack 0
   531  000095                     	ds	1
   532  000096                     _IEEESeqNum:
   533                           	opt stack 0
   534  000096                     	ds	1
   535  000097                     _knownCoordinators:
   536                           	opt stack 0
   537  000097                     	ds	1
   538  000098                     _MiWiCapacityInfo:
   539                           	opt stack 0
   540  000098                     	ds	1
   541  000099                     _timerExtension2:
   542                           	opt stack 0
   543  000099                     	ds	1
   544  00009A                     _TxBuffer:
   545                           	opt stack 0
   546  00009A                     	ds	51
   547  0000CD                     _openSocketInfo:
   548                           	opt stack 0
   549  0000CD                     	ds	26
   550  0000E7                     _tempPANID:
   551                           	opt stack 0
   552  0000E7                     	ds	2
   553                           tblptru	equ	0xFF8
   554                           tblptrh	equ	0xFF7
   555                           tblptrl	equ	0xFF6
   556                           tablat	equ	0xFF5
   557                           postinc0	equ	0xFEE
   558                           wreg	equ	0xFE8
   559                           postdec1	equ	0xFE5
   560                           fsr1l	equ	0xFE1
   561                           
   562                           	psect	dataBANK0
   563  0000E9                     __pdataBANK0:
   564                           	opt stack 0
   565  0000E9                     _AcknowledgementSeq:
   566                           	opt stack 0
   567  0000E9                     	ds	1
   568  0000EA                     _myLongAddress:
   569                           	opt stack 0
   570  0000EA                     	ds	8
   571                           tblptru	equ	0xFF8
   572                           tblptrh	equ	0xFF7
   573                           tblptrl	equ	0xFF6
   574                           tablat	equ	0xFF5
   575                           postinc0	equ	0xFEE
   576                           wreg	equ	0xFE8
   577                           postdec1	equ	0xFE5
   578                           fsr1l	equ	0xFE1
   579                           
   580                           	psect	bssBANK1
   581  000100                     __pbssBANK1:
   582                           	opt stack 0
   583  000100                     _BroadcastRecords:
   584                           	opt stack 0
   585  000100                     	ds	32
   586  000120                     _ConnectionTable:
   587                           	opt stack 0
   588  000120                     	ds	91
   589  00017B                     _LCDText:
   590                           	opt stack 0
   591  00017B                     	ds	33
   592                           tblptru	equ	0xFF8
   593                           tblptrh	equ	0xFF7
   594                           tblptrl	equ	0xFF6
   595                           tablat	equ	0xFF5
   596                           postinc0	equ	0xFEE
   597                           wreg	equ	0xFE8
   598                           postdec1	equ	0xFE5
   599                           fsr1l	equ	0xFE1
   600                           
   601                           	psect	bssBANK2
   602  000200                     __pbssBANK2:
   603                           	opt stack 0
   604  000200                     _RxBuffer:
   605                           	opt stack 0
   606  000200                     	ds	160
   607                           tblptru	equ	0xFF8
   608                           tblptrh	equ	0xFF7
   609                           tblptrl	equ	0xFF6
   610                           tablat	equ	0xFF5
   611                           postinc0	equ	0xFEE
   612                           wreg	equ	0xFE8
   613                           postdec1	equ	0xFE5
   614                           fsr1l	equ	0xFE1
   615                           
   616                           	psect	bssBANK3
   617  000300                     __pbssBANK3:
   618                           	opt stack 0
   619  000300                     _ActiveScanResults:
   620                           	opt stack 0
   621  000300                     	ds	140
   622                           tblptru	equ	0xFF8
   623                           tblptrh	equ	0xFF7
   624                           tblptrl	equ	0xFF6
   625                           tablat	equ	0xFF5
   626                           postinc0	equ	0xFEE
   627                           wreg	equ	0xFE8
   628                           postdec1	equ	0xFE5
   629                           fsr1l	equ	0xFE1
   630                           
   631                           	psect	cstackBANK0
   632  0000F2                     __pcstackBANK0:
   633                           	opt stack 0
   634  0000F2                     uartWrite@c:
   635                           	opt stack 0
   636                           
   637                           ; 1 bytes @ 0x0
   638  0000F2                     	ds	1
   639  0000F3                     __uartPrint@str:
   640                           	opt stack 0
   641                           
   642                           ; 2 bytes @ 0x1
   643  0000F3                     	ds	2
   644  0000F5                     ??__uartPrint:
   645                           
   646                           ; 1 bytes @ 0x3
   647  0000F5                     	ds	2
   648  0000F7                     __uartPrint@i:
   649                           	opt stack 0
   650                           
   651                           ; 2 bytes @ 0x5
   652  0000F7                     	ds	2
   653  0000F9                     tblptru	equ	0xFF8
   654                           tblptrh	equ	0xFF7
   655                           tblptrl	equ	0xFF6
   656                           tablat	equ	0xFF5
   657                           postinc0	equ	0xFEE
   658                           wreg	equ	0xFE8
   659                           postdec1	equ	0xFE5
   660                           fsr1l	equ	0xFE1
   661                           
   662                           ; 1 bytes @ 0x7
   663                           
   664                           	psect	cstackCOMRAM
   665  000001                     __pcstackCOMRAM:
   666                           	opt stack 0
   667  000001                     ?___lmul:
   668                           	opt stack 0
   669  000001                     SPIPut@i:
   670                           	opt stack 0
   671  000001                     ___lmul@multiplier:
   672                           	opt stack 0
   673                           
   674                           ; 4 bytes @ 0x0
   675  000001                     	ds	1
   676  000002                     SPIPut@v:
   677                           	opt stack 0
   678                           
   679                           ; 1 bytes @ 0x1
   680  000002                     	ds	1
   681  000003                     PHYSetShortRAMAddr@value:
   682                           	opt stack 0
   683  000003                     PHYGetShortRAMAddr@address:
   684                           	opt stack 0
   685  000003                     PHYGetLongRAMAddr@address:
   686                           	opt stack 0
   687                           
   688                           ; 2 bytes @ 0x2
   689  000003                     	ds	1
   690  000004                     PHYSetShortRAMAddr@address:
   691                           	opt stack 0
   692  000004                     PHYGetShortRAMAddr@toReturn:
   693                           	opt stack 0
   694                           
   695                           ; 1 bytes @ 0x3
   696  000004                     	ds	1
   697  000005                     ??_PHYGetLongRAMAddr:
   698  000005                     PHYSetShortRAMAddr@tmpRFIE:
   699                           	opt stack 0
   700  000005                     PHYGetShortRAMAddr@tmpRFIE:
   701                           	opt stack 0
   702  000005                     ___lmul@multiplicand:
   703                           	opt stack 0
   704                           
   705                           ; 4 bytes @ 0x4
   706  000005                     	ds	2
   707  000007                     PHYGetLongRAMAddr@toReturn:
   708                           	opt stack 0
   709                           
   710                           ; 1 bytes @ 0x6
   711  000007                     	ds	1
   712  000008                     PHYGetLongRAMAddr@tmpRFIE:
   713                           	opt stack 0
   714                           
   715                           ; 1 bytes @ 0x7
   716  000008                     	ds	1
   717  000009                     ___lmul@product:
   718                           	opt stack 0
   719                           
   720                           ; 4 bytes @ 0x8
   721  000009                     	ds	4
   722  00000D                     DELAY_ms@ms:
   723                           	opt stack 0
   724                           
   725                           ; 2 bytes @ 0xC
   726  00000D                     	ds	2
   727  00000F                     DELAY_ms@cyclesRequiredForEntireDelay:
   728                           	opt stack 0
   729                           
   730                           ; 4 bytes @ 0xE
   731  00000F                     	ds	4
   732  000013                     ??_high_isr:
   733                           
   734                           ; 1 bytes @ 0x12
   735  000013                     	ds	23
   736  00002A                     high_isr@results:
   737                           	opt stack 0
   738                           
   739                           ; 1 bytes @ 0x29
   740  00002A                     	ds	1
   741  00002B                     high_isr@flags:
   742                           	opt stack 0
   743                           
   744                           ; 2 bytes @ 0x2A
   745  00002B                     	ds	2
   746  00002D                     high_isr@RxBank:
   747                           	opt stack 0
   748                           
   749                           ; 1 bytes @ 0x2C
   750  00002D                     	ds	1
   751  00002E                     high_isr@i:
   752                           	opt stack 0
   753                           
   754                           ; 1 bytes @ 0x2D
   755  00002E                     	ds	1
   756                           tblptru	equ	0xFF8
   757                           tblptrh	equ	0xFF7
   758                           tblptrl	equ	0xFF6
   759                           tablat	equ	0xFF5
   760                           postinc0	equ	0xFEE
   761                           wreg	equ	0xFE8
   762                           postdec1	equ	0xFE5
   763                           fsr1l	equ	0xFE1
   764                           
   765 ;;
   766 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   767 ;;
   768 ;; *************** function _main *****************
   769 ;; Defined at:
   770 ;;		line 42 in file "8bitswdk_pic18f46j50_24j40/firmware/src/main.c"
   771 ;; Parameters:    Size  Location     Type
   772 ;;		None
   773 ;; Auto vars:     Size  Location     Type
   774 ;;		None
   775 ;; Return value:  Size  Location     Type
   776 ;;                  1    wreg      void 
   777 ;; Registers used:
   778 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   779 ;; Tracked objects:
   780 ;;		On entry : 0/0
   781 ;;		On exit  : 0/0
   782 ;;		Unchanged: 0/0
   783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   788 ;;Total ram usage:        0 bytes
   789 ;; Hardware stack levels required when called:    7
   790 ;; This function calls:
   791 ;;		__uartPrint
   792 ;;		_uartInitialize
   793 ;; This function is called by:
   794 ;;		Startup code after reset
   795 ;; This function uses a non-reentrant model
   796 ;;
   797                           
   798                           	psect	text0
   799  0012F6                     __ptext0:
   800                           	opt stack 0
   801  0012F6                     _main:
   802                           	opt stack 24
   803                           
   804                           ;main.c: 44: uartInitialize();
   805                           
   806                           ;incstack = 0
   807  0012F6  EC63  F009         	call	_uartInitialize	;wreg free
   808                           
   809                           ;main.c: 45: _uartPrint((char*)"Test");
   810  0012FA  0E9F               	movlw	low STR_3
   811  0012FC  0100               	movlb	0	; () banked
   812  0012FE  6FF3               	movwf	__uartPrint@str& (0+255),b
   813  001300  0E0F               	movlw	high STR_3
   814  001302  6FF4               	movwf	(__uartPrint@str+1)& (0+255),b
   815  001304  EC06  F009         	call	__uartPrint	;wreg free
   816  001308                     l272:
   817  001308  D7FF               	goto	l272
   818  00130A                     __end_of_main:
   819                           	opt stack 0
   820                           tblptru	equ	0xFF8
   821                           tblptrh	equ	0xFF7
   822                           tblptrl	equ	0xFF6
   823                           tablat	equ	0xFF5
   824                           postinc0	equ	0xFEE
   825                           wreg	equ	0xFE8
   826                           postdec1	equ	0xFE5
   827                           fsr1l	equ	0xFE1
   828                           
   829 ;; *************** function _uartInitialize *****************
   830 ;; Defined at:
   831 ;;		line 28 in file "8bitswdk_pic18f46j50_24j40/firmware/src/VT100.c"
   832 ;; Parameters:    Size  Location     Type
   833 ;;		None
   834 ;; Auto vars:     Size  Location     Type
   835 ;;		None
   836 ;; Return value:  Size  Location     Type
   837 ;;                  1    wreg      void 
   838 ;; Registers used:
   839 ;;		wreg, status,2
   840 ;; Tracked objects:
   841 ;;		On entry : 0/0
   842 ;;		On exit  : 0/0
   843 ;;		Unchanged: 0/0
   844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   849 ;;Total ram usage:        0 bytes
   850 ;; Hardware stack levels used:    1
   851 ;; Hardware stack levels required when called:    5
   852 ;; This function calls:
   853 ;;		Nothing
   854 ;; This function is called by:
   855 ;;		_main
   856 ;; This function uses a non-reentrant model
   857 ;;
   858                           
   859                           	psect	text1
   860  0012C6                     __ptext1:
   861                           	opt stack 0
   862  0012C6                     _uartInitialize:
   863                           	opt stack 25
   864                           
   865                           ;VT100.c: 29: TRISCbits.TRISC6 = 0;
   866                           
   867                           ;incstack = 0
   868  0012C6  9C94               	bcf	3988,6,c	;volatile
   869                           
   870                           ;VT100.c: 30: TRISDbits.TRISD2 = 1;
   871  0012C8  8495               	bsf	3989,2,c	;volatile
   872                           
   873                           ;VT100.c: 31: BAUDCON1bits.BRG16 = 0;
   874  0012CA  967E               	bcf	3966,3,c	;volatile
   875                           
   876                           ;VT100.c: 32: SPBRGH2 = 0;
   877  0012CC  0E00               	movlw	0
   878  0012CE  6E7D               	movwf	3965,c	;volatile
   879                           
   880                           ;VT100.c: 35: SPBRG2 = (8000000/2*4)/16/19200-1;
   881  0012D0  0E33               	movlw	51
   882  0012D2  6EAB               	movwf	4011,c	;volatile
   883                           
   884                           ;VT100.c: 36: TXSTA2 = 0x24;
   885  0012D4  0E24               	movlw	36
   886  0012D6  6EA8               	movwf	4008,c	;volatile
   887                           
   888                           ;VT100.c: 37: RCSTA2=0x90;
   889  0012D8  0E90               	movlw	144
   890  0012DA  6E9C               	movwf	3996,c	;volatile
   891  0012DC  0012               	return		;funcret
   892  0012DE                     __end_of_uartInitialize:
   893                           	opt stack 0
   894                           tblptru	equ	0xFF8
   895                           tblptrh	equ	0xFF7
   896                           tblptrl	equ	0xFF6
   897                           tablat	equ	0xFF5
   898                           postinc0	equ	0xFEE
   899                           wreg	equ	0xFE8
   900                           postdec1	equ	0xFE5
   901                           fsr1l	equ	0xFE1
   902                           
   903 ;; *************** function __uartPrint *****************
   904 ;; Defined at:
   905 ;;		line 75 in file "8bitswdk_pic18f46j50_24j40/firmware/src/VT100.c"
   906 ;; Parameters:    Size  Location     Type
   907 ;;  str             2    1[BANK0 ] PTR unsigned char 
   908 ;;		 -> STR_3(5), 
   909 ;; Auto vars:     Size  Location     Type
   910 ;;  i               2    5[BANK0 ] int 
   911 ;; Return value:  Size  Location     Type
   912 ;;                  1    wreg      void 
   913 ;; Registers used:
   914 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   915 ;; Tracked objects:
   916 ;;		On entry : 0/0
   917 ;;		On exit  : 0/0
   918 ;;		Unchanged: 0/0
   919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   920 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   921 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   922 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   923 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   924 ;;Total ram usage:        6 bytes
   925 ;; Hardware stack levels used:    1
   926 ;; Hardware stack levels required when called:    6
   927 ;; This function calls:
   928 ;;		_uartWrite
   929 ;; This function is called by:
   930 ;;		_main
   931 ;; This function uses a non-reentrant model
   932 ;;
   933                           
   934                           	psect	text2
   935  00120C                     __ptext2:
   936                           	opt stack 0
   937  00120C                     __uartPrint:
   938                           	opt stack 24
   939                           
   940                           ;VT100.c: 76: int i=0;
   941                           
   942                           ;incstack = 0
   943  00120C  0E00               	movlw	0
   944  00120E  0100               	movlb	0	; () banked
   945  001210  6FF8               	movwf	(__uartPrint@i+1)& (0+255),b
   946  001212  0E00               	movlw	0
   947  001214  6FF7               	movwf	__uartPrint@i& (0+255),b
   948                           
   949                           ;VT100.c: 77: while(str[i] != 0) uartWrite(str[i++]);
   950  001216  D011               	goto	l319
   951  001218                     
   952                           ; BSR set to: 0
   953                           
   954                           ; BSR set to: 0
   955  001218  51F7               	movf	__uartPrint@i& (0+255),w,b
   956  00121A  25F3               	addwf	__uartPrint@str& (0+255),w,b
   957  00121C  6FF5               	movwf	??__uartPrint& (0+255),b
   958  00121E  51F8               	movf	(__uartPrint@i+1)& (0+255),w,b
   959  001220  21F4               	addwfc	(__uartPrint@str+1)& (0+255),w,b
   960  001222  6FF6               	movwf	(??__uartPrint+1)& (0+255),b
   961  001224  C0F5  FFF6         	movff	??__uartPrint,tblptrl
   962  001228  C0F6  FFF7         	movff	??__uartPrint+1,tblptrh
   963  00122C                     	if	0	;tblptru may be non-zero
   964  00122C                     	endif
   965  00122C                     	if	0	;tblptru may be non-zero
   966  00122C                     	endif
   967  00122C  0008               	tblrd		*
   968  00122E  50F5               	movf	tablat,w,c
   969  001230  EC85  F009         	call	_uartWrite
   970  001234  0100               	movlb	0	; () banked
   971  001236  4BF7               	infsnz	__uartPrint@i& (0+255),f,b
   972  001238  2BF8               	incf	(__uartPrint@i+1)& (0+255),f,b
   973  00123A                     l319:
   974                           
   975                           ; BSR set to: 0
   976                           
   977                           ; BSR set to: 0
   978  00123A  51F7               	movf	__uartPrint@i& (0+255),w,b
   979  00123C  25F3               	addwf	__uartPrint@str& (0+255),w,b
   980  00123E  6FF5               	movwf	??__uartPrint& (0+255),b
   981  001240  51F8               	movf	(__uartPrint@i+1)& (0+255),w,b
   982  001242  21F4               	addwfc	(__uartPrint@str+1)& (0+255),w,b
   983  001244  6FF6               	movwf	(??__uartPrint+1)& (0+255),b
   984  001246  C0F5  FFF6         	movff	??__uartPrint,tblptrl
   985  00124A  C0F6  FFF7         	movff	??__uartPrint+1,tblptrh
   986  00124E                     	if	0	;tblptru may be non-zero
   987  00124E                     	endif
   988  00124E                     	if	0	;tblptru may be non-zero
   989  00124E                     	endif
   990  00124E  0008               	tblrd		*
   991  001250  50F5               	movf	tablat,w,c
   992  001252  0900               	iorlw	0
   993  001254  B4D8               	btfsc	status,2,c
   994  001256  0012               	return	
   995  001258  D7DF               	goto	l320
   996  00125A                     __end_of__uartPrint:
   997                           	opt stack 0
   998                           tblptru	equ	0xFF8
   999                           tblptrh	equ	0xFF7
  1000                           tblptrl	equ	0xFF6
  1001                           tablat	equ	0xFF5
  1002                           postinc0	equ	0xFEE
  1003                           wreg	equ	0xFE8
  1004                           postdec1	equ	0xFE5
  1005                           fsr1l	equ	0xFE1
  1006                           status	equ	0xFD8
  1007                           
  1008 ;; *************** function _uartWrite *****************
  1009 ;; Defined at:
  1010 ;;		line 67 in file "8bitswdk_pic18f46j50_24j40/firmware/src/VT100.c"
  1011 ;; Parameters:    Size  Location     Type
  1012 ;;  c               1    wreg     unsigned char 
  1013 ;; Auto vars:     Size  Location     Type
  1014 ;;  c               1    0[BANK0 ] unsigned char 
  1015 ;; Return value:  Size  Location     Type
  1016 ;;                  1    wreg      void 
  1017 ;; Registers used:
  1018 ;;		wreg
  1019 ;; Tracked objects:
  1020 ;;		On entry : 0/0
  1021 ;;		On exit  : 0/0
  1022 ;;		Unchanged: 0/0
  1023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1025 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1027 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1028 ;;Total ram usage:        1 bytes
  1029 ;; Hardware stack levels used:    1
  1030 ;; Hardware stack levels required when called:    5
  1031 ;; This function calls:
  1032 ;;		Nothing
  1033 ;; This function is called by:
  1034 ;;		__uartPrint
  1035 ;;		_uartRead
  1036 ;;		_uartHexaPrint
  1037 ;; This function uses a non-reentrant model
  1038 ;;
  1039                           
  1040                           	psect	text3
  1041  00130A                     __ptext3:
  1042                           	opt stack 0
  1043  00130A                     _uartWrite:
  1044                           	opt stack 24
  1045                           
  1046                           ; BSR set to: 0
  1047                           ;incstack = 0
  1048                           ;uartWrite@c stored from wreg
  1049  00130A  0100               	movlb	0	; () banked
  1050  00130C  6FF2               	movwf	uartWrite@c& (0+255),b
  1051  00130E                     
  1052                           ;VT100.c: 68: while(TXSTA2bits.TRMT == 0);
  1053  00130E  A2A8               	btfss	4008,1,c	;volatile
  1054  001310  D7FE               	goto	l8706
  1055                           
  1056                           ;VT100.c: 69: TXREG2 = c;
  1057  001312  C0F2  FFA9         	movff	uartWrite@c,4009	;volatile
  1058  001316  0012               	return		;funcret
  1059  001318                     __end_of_uartWrite:
  1060                           	opt stack 0
  1061                           tblptru	equ	0xFF8
  1062                           tblptrh	equ	0xFF7
  1063                           tblptrl	equ	0xFF6
  1064                           tablat	equ	0xFF5
  1065                           postinc0	equ	0xFEE
  1066                           wreg	equ	0xFE8
  1067                           postdec1	equ	0xFE5
  1068                           fsr1l	equ	0xFE1
  1069                           status	equ	0xFD8
  1070                           
  1071 ;; *************** function _high_isr *****************
  1072 ;; Defined at:
  1073 ;;		line 1852 in file "../MLA/framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
  1074 ;; Parameters:    Size  Location     Type
  1075 ;;		None
  1076 ;; Auto vars:     Size  Location     Type
  1077 ;;  results         1   41[COMRAM] struct _DRIVER_UINT8_UNI
  1078 ;;  RxBank          1   44[COMRAM] unsigned char 
  1079 ;;  flags           2   42[COMRAM] struct .
  1080 ;;  i               1   45[COMRAM] unsigned char 
  1081 ;; Return value:  Size  Location     Type
  1082 ;;                  1    wreg      void 
  1083 ;; Registers used:
  1084 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1085 ;; Tracked objects:
  1086 ;;		On entry : 0/0
  1087 ;;		On exit  : 0/0
  1088 ;;		Unchanged: 0/0
  1089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1091 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1092 ;;      Temps:         23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1093 ;;      Totals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1094 ;;Total ram usage:       28 bytes
  1095 ;; Hardware stack levels used:    1
  1096 ;; Hardware stack levels required when called:    4
  1097 ;; This function calls:
  1098 ;;		_PHYGetLongRAMAddr
  1099 ;;		_PHYGetShortRAMAddr
  1100 ;;		_PHYSetShortRAMAddr
  1101 ;;		_UserInterruptHandler
  1102 ;; This function is called by:
  1103 ;;		Interrupt level 2
  1104 ;; This function uses a non-reentrant model
  1105 ;;
  1106                           
  1107                           	psect	intcode
  1108  000008                     __pintcode:
  1109                           	opt stack 0
  1110  000008                     _high_isr:
  1111                           	opt stack 24
  1112                           
  1113                           ;incstack = 0
  1114  000008  825E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1115  00000A  CFFA F018          	movff	pclath,??_high_isr+5
  1116  00000E  CFFB F019          	movff	pclatu,??_high_isr+6
  1117  000012  CFE9 F01A          	movff	fsr0l,??_high_isr+7
  1118  000016  CFEA F01B          	movff	fsr0h,??_high_isr+8
  1119  00001A  CFE1 F01C          	movff	fsr1l,??_high_isr+9
  1120  00001E  CFE2 F01D          	movff	fsr1h,??_high_isr+10
  1121  000022  CFD9 F01E          	movff	fsr2l,??_high_isr+11
  1122  000026  CFDA F01F          	movff	fsr2h,??_high_isr+12
  1123  00002A  CFF3 F020          	movff	prodl,??_high_isr+13
  1124  00002E  CFF4 F021          	movff	prodh,??_high_isr+14
  1125  000032  CFF6 F022          	movff	tblptrl,??_high_isr+15
  1126  000036  CFF7 F023          	movff	tblptrh,??_high_isr+16
  1127  00003A  CFF8 F024          	movff	tblptru,??_high_isr+17
  1128  00003E  CFF5 F025          	movff	tablat,??_high_isr+18
  1129  000042  C05E  F026         	movff	btemp,??_high_isr+19
  1130  000046  C05F  F027         	movff	btemp+1,??_high_isr+20
  1131  00004A  C060  F028         	movff	btemp+2,??_high_isr+21
  1132  00004E  C061  F029         	movff	btemp+3,??_high_isr+22
  1133                           
  1134                           ;drv_mrf_miwi_24j40.c: 1867: if (INTCON3bits.INT1IE && INTCON3bits.INT1IF)
  1135  000052  B6F0               	btfsc	intcon3,3,c	;volatile
  1136  000054  A0F0               	btfss	intcon3,0,c	;volatile
  1137  000056  D0AB               	goto	i2l1106
  1138                           
  1139                           ;drv_mrf_miwi_24j40.c: 1868: {
  1140                           ;drv_mrf_miwi_24j40.c: 1869: uint8_t i;
  1141                           ;drv_mrf_miwi_24j40.c: 1873: INTCON3bits.INT1IF = 0;
  1142  000058  90F0               	bcf	intcon3,0,c	;volatile
  1143                           
  1144                           ;drv_mrf_miwi_24j40.c: 1877: {
  1145                           ;drv_mrf_miwi_24j40.c: 1878: MRF24J40_IFREG flags;
  1146                           ;drv_mrf_miwi_24j40.c: 1881: flags.Val = PHYGetShortRAMAddr((0x62));
  1147  00005A  0E62               	movlw	98
  1148  00005C  EC2D  F009         	call	_PHYGetShortRAMAddr
  1149  000060  6E2B               	movwf	high_isr@flags,c
  1150                           
  1151                           ;drv_mrf_miwi_24j40.c: 1883: if (flags.bits.RF_TXIF)
  1152  000062  A02B               	btfss	high_isr@flags,0,c
  1153  000064  D011               	goto	i2l1093
  1154                           
  1155                           ;drv_mrf_miwi_24j40.c: 1884: {
  1156                           ;drv_mrf_miwi_24j40.c: 1887: MRF24J40Status.bits.TX_BUSY = 0;
  1157  000066  9043               	bcf	_MRF24J40Status,0,c	;volatile
  1158                           
  1159                           ;drv_mrf_miwi_24j40.c: 1889: if (MRF24J40Status.bits.SEC_IF)
  1160  000068  BC43               	btfsc	_MRF24J40Status,6,c	;volatile
  1161                           
  1162                           ;drv_mrf_miwi_24j40.c: 1890: {
  1163                           ;drv_mrf_miwi_24j40.c: 1891: MRF24J40Status.bits.SEC_IF = 0;
  1164  00006A  9C43               	bcf	_MRF24J40Status,6,c	;volatile
  1165                           
  1166                           ;drv_mrf_miwi_24j40.c: 1892: }
  1167                           ;drv_mrf_miwi_24j40.c: 1894: failureCounter = 0;
  1168  00006C  0E00               	movlw	0
  1169  00006E  0100               	movlb	0	; () banked
  1170  000070  6F92               	movwf	(_failureCounter+1)& (0+255),b	;volatile
  1171  000072  0E00               	movlw	0
  1172  000074  6F91               	movwf	_failureCounter& (0+255),b	;volatile
  1173                           
  1174                           ; BSR set to: 0
  1175                           ;drv_mrf_miwi_24j40.c: 1898: if (MRF24J40Status.bits.TX_PENDING_ACK)
  1176  000076  A243               	btfss	_MRF24J40Status,1,c	;volatile
  1177  000078  D007               	goto	i2l1093
  1178                           
  1179                           ; BSR set to: 0
  1180                           ;drv_mrf_miwi_24j40.c: 1899: {
  1181                           ;drv_mrf_miwi_24j40.c: 1900: DRIVER_UINT8_UNION results;
  1182                           ;drv_mrf_miwi_24j40.c: 1903: results.Val = PHYGetShortRAMAddr((0x48));
  1183  00007A  0E48               	movlw	72
  1184  00007C  EC2D  F009         	call	_PHYGetShortRAMAddr
  1185  000080  6E2A               	movwf	high_isr@results,c
  1186                           
  1187                           ;drv_mrf_miwi_24j40.c: 1905: if (results.bits.b0 == 1)
  1188  000082  B02A               	btfsc	high_isr@results,0,c
  1189                           
  1190                           ;drv_mrf_miwi_24j40.c: 1906: {
  1191                           ;drv_mrf_miwi_24j40.c: 1909: MRF24J40Status.bits.TX_FAIL = 1;
  1192  000084  8443               	bsf	_MRF24J40Status,2,c	;volatile
  1193                           
  1194                           ;drv_mrf_miwi_24j40.c: 1910: }
  1195                           ;drv_mrf_miwi_24j40.c: 1914: MRF24J40Status.bits.TX_PENDING_ACK = 0;
  1196  000086  9243               	bcf	_MRF24J40Status,1,c	;volatile
  1197  000088                     i2l1093:
  1198                           
  1199                           ;drv_mrf_miwi_24j40.c: 1916: }
  1200                           ;drv_mrf_miwi_24j40.c: 1918: }
  1201                           ;drv_mrf_miwi_24j40.c: 1920: if (flags.bits.RF_RXIF)
  1202  000088  A62B               	btfss	high_isr@flags,3,c
  1203  00008A  D08A               	goto	i2l1105
  1204                           
  1205                           ;drv_mrf_miwi_24j40.c: 1921: {
  1206                           ;drv_mrf_miwi_24j40.c: 1922: uint8_t RxBank = 0xFF;
  1207  00008C  682D               	setf	high_isr@RxBank,c
  1208                           
  1209                           ;drv_mrf_miwi_24j40.c: 1924: for (i = 0; i < 2; i++)
  1210  00008E  0E00               	movlw	0
  1211  000090  6E2E               	movwf	high_isr@i,c
  1212  000092                     i2l8578:
  1213  000092  0E01               	movlw	1
  1214  000094  642E               	cpfsgt	high_isr@i,c
  1215  000096  D001               	goto	i2l1096
  1216  000098  D010               	goto	i2u947_40
  1217  00009A                     i2l1096:
  1218                           
  1219                           ;drv_mrf_miwi_24j40.c: 1925: {
  1220                           ;drv_mrf_miwi_24j40.c: 1926: if (RxBuffer[i].PayloadLen == 0)
  1221  00009A  502E               	movf	high_isr@i,w,c
  1222  00009C  0D50               	mullw	80
  1223  00009E  0E00               	movlw	low _RxBuffer
  1224  0000A0  24F3               	addwf	prodl,w,c
  1225  0000A2  6ED9               	movwf	fsr2l,c
  1226  0000A4  0E02               	movlw	high _RxBuffer
  1227  0000A6  20F4               	addwfc	prodh,w,c
  1228  0000A8  6EDA               	movwf	fsr2h,c
  1229  0000AA  50DF               	movf	indf2,w,c
  1230  0000AC  A4D8               	btfss	status,2,c
  1231  0000AE  D003               	goto	i2l1098
  1232                           
  1233                           ;drv_mrf_miwi_24j40.c: 1927: {
  1234                           ;drv_mrf_miwi_24j40.c: 1928: RxBank = i;
  1235  0000B0  C02E  F02D         	movff	high_isr@i,high_isr@RxBank
  1236                           
  1237                           ;drv_mrf_miwi_24j40.c: 1929: break;
  1238  0000B4  D002               	goto	i2u947_40
  1239  0000B6                     i2l1098:
  1240  0000B6  2A2E               	incf	high_isr@i,f,c
  1241  0000B8  D7EC               	goto	i2l8578
  1242  0000BA                     i2u947_40:
  1243                           
  1244                           ;drv_mrf_miwi_24j40.c: 1930: }
  1245                           ;drv_mrf_miwi_24j40.c: 1931: }
  1246                           ;drv_mrf_miwi_24j40.c: 1934: if (RxBank < 2)
  1247  0000BA  0E02               	movlw	2
  1248  0000BC  602D               	cpfslt	high_isr@RxBank,c
  1249  0000BE  D06B               	goto	i2l1099
  1250                           
  1251                           ;drv_mrf_miwi_24j40.c: 1935: {
  1252                           ;drv_mrf_miwi_24j40.c: 1941: PHYSetShortRAMAddr((0x73), 0x04);
  1253  0000C0  0E04               	movlw	4
  1254  0000C2  6E03               	movwf	PHYSetShortRAMAddr@value,c
  1255  0000C4  0E73               	movlw	115
  1256  0000C6  EC42  F009         	call	_PHYSetShortRAMAddr
  1257                           
  1258                           ;drv_mrf_miwi_24j40.c: 1945: RxBuffer[RxBank].PayloadLen = PHYGetLongRAMAddr(0x300) + 2;
  1259  0000CA  502D               	movf	high_isr@RxBank,w,c
  1260  0000CC  0D50               	mullw	80
  1261  0000CE  0E00               	movlw	low _RxBuffer
  1262  0000D0  24F3               	addwf	prodl,w,c
  1263  0000D2  6ED9               	movwf	fsr2l,c
  1264  0000D4  0E02               	movlw	high _RxBuffer
  1265  0000D6  20F4               	addwfc	prodh,w,c
  1266  0000D8  6EDA               	movwf	fsr2h,c
  1267  0000DA  0E03               	movlw	3
  1268  0000DC  6E04               	movwf	PHYGetLongRAMAddr@address+1,c
  1269  0000DE  0E00               	movlw	0
  1270  0000E0  6E03               	movwf	PHYGetLongRAMAddr@address,c
  1271  0000E2  ECDD  F008         	call	_PHYGetLongRAMAddr	;wreg free
  1272  0000E6  0F02               	addlw	2
  1273  0000E8  6EDF               	movwf	indf2,c
  1274                           
  1275                           ;drv_mrf_miwi_24j40.c: 1946: if (RxBuffer[RxBank].PayloadLen < (40+11+8+8+12))
  1276  0000EA  502D               	movf	high_isr@RxBank,w,c
  1277  0000EC  0D50               	mullw	80
  1278  0000EE  0E00               	movlw	low _RxBuffer
  1279  0000F0  24F3               	addwf	prodl,w,c
  1280  0000F2  6ED9               	movwf	fsr2l,c
  1281  0000F4  0E02               	movlw	high _RxBuffer
  1282  0000F6  20F4               	addwfc	prodh,w,c
  1283  0000F8  6EDA               	movwf	fsr2h,c
  1284  0000FA  0E4F               	movlw	79
  1285  0000FC  60DF               	cpfslt	indf2,c
  1286  0000FE  D040               	goto	i2l1100
  1287                           
  1288                           ;drv_mrf_miwi_24j40.c: 1947: {
  1289                           ;drv_mrf_miwi_24j40.c: 1949: MRF24J40Status.bits.RX_BUFFERED = 1;
  1290  000100  8A43               	bsf	_MRF24J40Status,5,c	;volatile
  1291                           
  1292                           ;drv_mrf_miwi_24j40.c: 1952: for (i = 1; i <= RxBuffer[RxBank].PayloadLen + 2; i++)
  1293  000102  0E01               	movlw	1
  1294  000104  6E2E               	movwf	high_isr@i,c
  1295  000106  D01A               	goto	i2l1101
  1296  000108                     
  1297                           ;drv_mrf_miwi_24j40.c: 1953: {
  1298                           ;drv_mrf_miwi_24j40.c: 1954: RxBuffer[RxBank].Payload[i - 1] = PHYGetLongRAMAddr(0x300 +
      +                           i);
  1299  000108  502D               	movf	high_isr@RxBank,w,c
  1300  00010A  0D50               	mullw	80
  1301  00010C  0E00               	movlw	low _RxBuffer
  1302  00010E  6E13               	movwf	??_high_isr& (0+255),c
  1303  000110  0E02               	movlw	high _RxBuffer
  1304  000112  6E14               	movwf	(??_high_isr+1)& (0+255),c
  1305  000114  50F3               	movf	prodl,w,c
  1306  000116  2613               	addwf	??_high_isr,f,c
  1307  000118  50F4               	movf	prodh,w,c
  1308  00011A  2214               	addwfc	??_high_isr+1,f,c
  1309  00011C  502E               	movf	high_isr@i,w,c
  1310  00011E  2413               	addwf	??_high_isr,w,c
  1311  000120  6ED9               	movwf	fsr2l,c
  1312  000122  0E00               	movlw	0
  1313  000124  2014               	addwfc	??_high_isr+1,w,c
  1314  000126  6EDA               	movwf	fsr2h,c
  1315  000128  0E00               	movlw	0
  1316  00012A  242E               	addwf	high_isr@i,w,c
  1317  00012C  6E03               	movwf	PHYGetLongRAMAddr@address,c
  1318  00012E  6A04               	clrf	PHYGetLongRAMAddr@address+1,c
  1319  000130  0E03               	movlw	3
  1320  000132  2204               	addwfc	PHYGetLongRAMAddr@address+1,f,c
  1321  000134  ECDD  F008         	call	_PHYGetLongRAMAddr	;wreg free
  1322  000138  6EDF               	movwf	indf2,c
  1323  00013A  2A2E               	incf	high_isr@i,f,c
  1324  00013C                     i2l1101:
  1325  00013C  502E               	movf	high_isr@i,w,c
  1326  00013E  6E13               	movwf	??_high_isr& (0+255),c
  1327  000140  6A14               	clrf	(??_high_isr+1)& (0+255),c
  1328  000142  502D               	movf	high_isr@RxBank,w,c
  1329  000144  0D50               	mullw	80
  1330  000146  0E00               	movlw	low _RxBuffer
  1331  000148  24F3               	addwf	prodl,w,c
  1332  00014A  6ED9               	movwf	fsr2l,c
  1333  00014C  0E02               	movlw	high _RxBuffer
  1334  00014E  20F4               	addwfc	prodh,w,c
  1335  000150  6EDA               	movwf	fsr2h,c
  1336  000152  50DF               	movf	indf2,w,c
  1337  000154  6E15               	movwf	(??_high_isr+2)& (0+255),c
  1338  000156  6A16               	clrf	(??_high_isr+3)& (0+255),c
  1339  000158  0E02               	movlw	2
  1340  00015A  2615               	addwf	??_high_isr+2,f,c
  1341  00015C  0E00               	movlw	0
  1342  00015E  2216               	addwfc	??_high_isr+3,f,c
  1343  000160  5013               	movf	??_high_isr,w,c
  1344  000162  5C15               	subwf	??_high_isr+2,w,c
  1345  000164  5016               	movf	??_high_isr+3,w,c
  1346  000166  0A80               	xorlw	128
  1347  000168  6E17               	movwf	(??_high_isr+4)& (0+255),c
  1348  00016A  5014               	movf	??_high_isr+1,w,c
  1349  00016C  0A80               	xorlw	128
  1350  00016E  5817               	subwfb	(??_high_isr+4)& (0+255),w,c
  1351  000170  B0D8               	btfsc	status,0,c
  1352  000172  D7CA               	goto	i2l1102
  1353                           
  1354                           ;drv_mrf_miwi_24j40.c: 1955: }
  1355                           ;drv_mrf_miwi_24j40.c: 1956: PHYSetShortRAMAddr((0x1B), 0x01);
  1356  000174  0E01               	movlw	1
  1357  000176  6E03               	movwf	PHYSetShortRAMAddr@value,c
  1358  000178  0E1B               	movlw	27
  1359  00017A  EC42  F009         	call	_PHYSetShortRAMAddr
  1360                           
  1361                           ;drv_mrf_miwi_24j40.c: 1957: } else
  1362  00017E  D005               	goto	i2l1104
  1363  000180                     i2l1100:
  1364                           
  1365                           ;drv_mrf_miwi_24j40.c: 1958: {
  1366                           ;drv_mrf_miwi_24j40.c: 1961: PHYSetShortRAMAddr((0x1B), 0x01);
  1367  000180  0E01               	movlw	1
  1368  000182  6E03               	movwf	PHYSetShortRAMAddr@value,c
  1369  000184  0E1B               	movlw	27
  1370  000186  EC42  F009         	call	_PHYSetShortRAMAddr
  1371  00018A                     i2l1104:
  1372                           
  1373                           ;drv_mrf_miwi_24j40.c: 1962: }
  1374                           ;drv_mrf_miwi_24j40.c: 1965: PHYSetShortRAMAddr((0x73), 0x00);
  1375  00018A  0E00               	movlw	0
  1376  00018C  6E03               	movwf	PHYSetShortRAMAddr@value,c
  1377  00018E  0E73               	movlw	115
  1378  000190  EC42  F009         	call	_PHYSetShortRAMAddr
  1379                           
  1380                           ;drv_mrf_miwi_24j40.c: 1966: } else
  1381  000194  D005               	goto	i2l1105
  1382  000196                     i2l1099:
  1383                           
  1384                           ;drv_mrf_miwi_24j40.c: 1967: {
  1385                           ;drv_mrf_miwi_24j40.c: 1970: PHYSetShortRAMAddr((0x1B), 0x01);
  1386  000196  0E01               	movlw	1
  1387  000198  6E03               	movwf	PHYSetShortRAMAddr@value,c
  1388  00019A  0E1B               	movlw	27
  1389  00019C  EC42  F009         	call	_PHYSetShortRAMAddr
  1390  0001A0                     i2l1105:
  1391                           
  1392                           ;drv_mrf_miwi_24j40.c: 1977: }
  1393                           ;drv_mrf_miwi_24j40.c: 1979: }
  1394                           ;drv_mrf_miwi_24j40.c: 1982: if (flags.bits.SECIF)
  1395  0001A0  A82B               	btfss	high_isr@flags,4,c
  1396  0001A2  D005               	goto	i2l1106
  1397                           
  1398                           ;drv_mrf_miwi_24j40.c: 1983: {
  1399                           ;drv_mrf_miwi_24j40.c: 1984: PHYSetShortRAMAddr((0x59), 0x80);
  1400  0001A4  0E80               	movlw	128
  1401  0001A6  6E03               	movwf	PHYSetShortRAMAddr@value,c
  1402  0001A8  0E59               	movlw	89
  1403  0001AA  EC42  F009         	call	_PHYSetShortRAMAddr
  1404  0001AE                     i2l1106:
  1405                           
  1406                           ;drv_mrf_miwi_24j40.c: 1985: }
  1407                           ;drv_mrf_miwi_24j40.c: 1986: }
  1408                           ;drv_mrf_miwi_24j40.c: 1987: }
  1409                           ;drv_mrf_miwi_24j40.c: 1992: if (PIR1bits.TMR1IF)
  1410  0001AE  B09E               	btfsc	3998,0,c	;volatile
  1411                           
  1412                           ;drv_mrf_miwi_24j40.c: 1993: {
  1413                           ;drv_mrf_miwi_24j40.c: 1994: if (PIE1bits.TMR1IE)
  1414  0001B0  A09D               	btfss	3997,0,c	;volatile
  1415  0001B2  D007               	goto	i2l1109
  1416                           
  1417                           ;drv_mrf_miwi_24j40.c: 1995: {
  1418                           ;drv_mrf_miwi_24j40.c: 1997: PIR1bits.TMR1IF = 0;
  1419  0001B4  909E               	bcf	3998,0,c	;volatile
  1420                           
  1421                           ;drv_mrf_miwi_24j40.c: 1998: timerExtension1++;
  1422  0001B6  2A4C               	incf	_timerExtension1,f,c	;volatile
  1423                           
  1424                           ;drv_mrf_miwi_24j40.c: 1999: if (timerExtension1 == 0)
  1425  0001B8  504C               	movf	_timerExtension1,w,c	;volatile
  1426  0001BA  A4D8               	btfss	status,2,c
  1427  0001BC  D002               	goto	i2l1109
  1428                           
  1429                           ;drv_mrf_miwi_24j40.c: 2000: {
  1430                           ;drv_mrf_miwi_24j40.c: 2001: timerExtension2++;
  1431  0001BE  0100               	movlb	0	; () banked
  1432  0001C0  2B99               	incf	_timerExtension2& (0+255),f,b	;volatile
  1433  0001C2                     i2l1109:
  1434                           
  1435                           ;drv_mrf_miwi_24j40.c: 2002: }
  1436                           ;drv_mrf_miwi_24j40.c: 2003: }
  1437                           ;drv_mrf_miwi_24j40.c: 2004: }
  1438                           ;drv_mrf_miwi_24j40.c: 2006: UserInterruptHandler();
  1439                           
  1440                           ; BSR set to: 0
  1441                           
  1442                           ; BSR set to: 0
  1443                           
  1444                           ; BSR set to: 0
  1445  0001C2  EC6F  F009         	call	_UserInterruptHandler	;wreg free
  1446                           
  1447                           ;drv_mrf_miwi_24j40.c: 2009: return;
  1448  0001C6  C029  F061         	movff	??_high_isr+22,btemp+3
  1449  0001CA  C028  F060         	movff	??_high_isr+21,btemp+2
  1450  0001CE  C027  F05F         	movff	??_high_isr+20,btemp+1
  1451  0001D2  C026  F05E         	movff	??_high_isr+19,btemp
  1452  0001D6  C025  FFF5         	movff	??_high_isr+18,tablat
  1453  0001DA  C024  FFF8         	movff	??_high_isr+17,tblptru
  1454  0001DE  C023  FFF7         	movff	??_high_isr+16,tblptrh
  1455  0001E2  C022  FFF6         	movff	??_high_isr+15,tblptrl
  1456  0001E6  C021  FFF4         	movff	??_high_isr+14,prodh
  1457  0001EA  C020  FFF3         	movff	??_high_isr+13,prodl
  1458  0001EE  C01F  FFDA         	movff	??_high_isr+12,fsr2h
  1459  0001F2  C01E  FFD9         	movff	??_high_isr+11,fsr2l
  1460  0001F6  C01D  FFE2         	movff	??_high_isr+10,fsr1h
  1461  0001FA  C01C  FFE1         	movff	??_high_isr+9,fsr1l
  1462  0001FE  C01B  FFEA         	movff	??_high_isr+8,fsr0h
  1463  000202  C01A  FFE9         	movff	??_high_isr+7,fsr0l
  1464  000206  C019  FFFB         	movff	??_high_isr+6,pclatu
  1465  00020A  C018  FFFA         	movff	??_high_isr+5,pclath
  1466  00020E  925E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1467  000210  0011               	retfie		f
  1468  000212                     __end_of_high_isr:
  1469                           	opt stack 0
  1470                           pclatu	equ	0xFFB
  1471                           pclath	equ	0xFFA
  1472                           tblptru	equ	0xFF8
  1473                           tblptrh	equ	0xFF7
  1474                           tblptrl	equ	0xFF6
  1475                           tablat	equ	0xFF5
  1476                           prodh	equ	0xFF4
  1477                           prodl	equ	0xFF3
  1478                           intcon3	equ	0xFF0
  1479                           postinc0	equ	0xFEE
  1480                           fsr0h	equ	0xFEA
  1481                           fsr0l	equ	0xFE9
  1482                           wreg	equ	0xFE8
  1483                           postdec1	equ	0xFE5
  1484                           fsr1h	equ	0xFE2
  1485                           fsr1l	equ	0xFE1
  1486                           indf2	equ	0xFDF
  1487                           fsr2h	equ	0xFDA
  1488                           fsr2l	equ	0xFD9
  1489                           status	equ	0xFD8
  1490                           
  1491 ;; *************** function _UserInterruptHandler *****************
  1492 ;; Defined at:
  1493 ;;		line 345 in file "8bitswdk_pic18f46j50_24j40/firmware/src/system_config/8bitwdk_pic18f46j50_24j40/lcd.c"
  1494 ;; Parameters:    Size  Location     Type
  1495 ;;		None
  1496 ;; Auto vars:     Size  Location     Type
  1497 ;;		None
  1498 ;; Return value:  Size  Location     Type
  1499 ;;                  1    wreg      void 
  1500 ;; Registers used:
  1501 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1502 ;; Tracked objects:
  1503 ;;		On entry : 0/0
  1504 ;;		On exit  : 0/0
  1505 ;;		Unchanged: 0/0
  1506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1511 ;;Total ram usage:        0 bytes
  1512 ;; Hardware stack levels used:    1
  1513 ;; Hardware stack levels required when called:    3
  1514 ;; This function calls:
  1515 ;;		_DELAY_ms
  1516 ;;		_I2CTask
  1517 ;; This function is called by:
  1518 ;;		_high_isr
  1519 ;; This function uses a non-reentrant model
  1520 ;;
  1521                           
  1522                           	psect	text5
  1523  0012DE                     __ptext5:
  1524                           	opt stack 0
  1525  0012DE                     _UserInterruptHandler:
  1526                           	opt stack 24
  1527                           
  1528                           ;lcd.c: 348: if( PIR3bits.SSP2IF )
  1529                           
  1530                           ;incstack = 0
  1531  0012DE  AEA4               	btfss	4004,7,c	;volatile
  1532  0012E0  0012               	return	
  1533                           
  1534                           ;lcd.c: 349: {
  1535                           ;lcd.c: 350: PIR3bits.SSP2IF = 0;
  1536  0012E2  9EA4               	bcf	4004,7,c	;volatile
  1537                           
  1538                           ;lcd.c: 351: I2CTask();
  1539  0012E4  ECD3  F007         	call	_I2CTask	;wreg free
  1540                           
  1541                           ;lcd.c: 352: DELAY_ms(5);
  1542  0012E8  0E00               	movlw	0
  1543  0012EA  6E0E               	movwf	DELAY_ms@ms+1,c
  1544  0012EC  0E05               	movlw	5
  1545  0012EE  6E0D               	movwf	DELAY_ms@ms,c
  1546  0012F0  EC2B  F008         	call	_DELAY_ms	;wreg free
  1547  0012F4  0012               	return	
  1548  0012F6                     __end_of_UserInterruptHandler:
  1549                           	opt stack 0
  1550                           pclatu	equ	0xFFB
  1551                           pclath	equ	0xFFA
  1552                           tblptru	equ	0xFF8
  1553                           tblptrh	equ	0xFF7
  1554                           tblptrl	equ	0xFF6
  1555                           tablat	equ	0xFF5
  1556                           prodh	equ	0xFF4
  1557                           prodl	equ	0xFF3
  1558                           intcon3	equ	0xFF0
  1559                           postinc0	equ	0xFEE
  1560                           fsr0h	equ	0xFEA
  1561                           fsr0l	equ	0xFE9
  1562                           wreg	equ	0xFE8
  1563                           postdec1	equ	0xFE5
  1564                           fsr1h	equ	0xFE2
  1565                           fsr1l	equ	0xFE1
  1566                           indf2	equ	0xFDF
  1567                           fsr2h	equ	0xFDA
  1568                           fsr2l	equ	0xFD9
  1569                           status	equ	0xFD8
  1570                           
  1571 ;; *************** function _I2CTask *****************
  1572 ;; Defined at:
  1573 ;;		line 65 in file "8bitswdk_pic18f46j50_24j40/firmware/src/system_config/8bitwdk_pic18f46j50_24j40/lcd.c"
  1574 ;; Parameters:    Size  Location     Type
  1575 ;;		None
  1576 ;; Auto vars:     Size  Location     Type
  1577 ;;		None
  1578 ;; Return value:  Size  Location     Type
  1579 ;;                  1    wreg      void 
  1580 ;; Registers used:
  1581 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1582 ;; Tracked objects:
  1583 ;;		On entry : 0/0
  1584 ;;		On exit  : 0/0
  1585 ;;		Unchanged: 0/0
  1586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1591 ;;Total ram usage:        0 bytes
  1592 ;; Hardware stack levels used:    1
  1593 ;; Hardware stack levels required when called:    2
  1594 ;; This function calls:
  1595 ;;		_DELAY_ms
  1596 ;; This function is called by:
  1597 ;;		_UserInterruptHandler
  1598 ;; This function uses a non-reentrant model
  1599 ;;
  1600                           
  1601                           	psect	text6
  1602  000FA6                     __ptext6:
  1603                           	opt stack 0
  1604  000FA6                     _I2CTask:
  1605                           	opt stack 24
  1606                           
  1607                           ;lcd.c: 68: if( CommandPtr < CommandLen || TextPtr < TextLen )
  1608                           
  1609                           ;incstack = 0
  1610  000FA6  5050               	movf	_CommandLen,w,c
  1611  000FA8  5C4E               	subwf	_CommandPtr,w,c
  1612  000FAA  A0D8               	btfss	status,0,c
  1613  000FAC  D004               	goto	i2u525_40
  1614  000FAE  504F               	movf	_TextLen,w,c
  1615  000FB0  5C4D               	subwf	_TextPtr,w,c
  1616  000FB2  B0D8               	btfsc	status,0,c
  1617  000FB4  0012               	return	
  1618  000FB6                     i2u525_40:
  1619                           
  1620                           ;lcd.c: 69: {
  1621                           ;lcd.c: 70: while (SSP2CON2bits.SEN == 1);
  1622  000FB6  B071               	btfsc	3953,0,c	;volatile
  1623  000FB8  D7FE               	goto	i2u525_40
  1624                           
  1625                           ;lcd.c: 71: if( CommandPtr < CommandLen )
  1626  000FBA  5050               	movf	_CommandLen,w,c
  1627  000FBC  5C4E               	subwf	_CommandPtr,w,c
  1628  000FBE  B0D8               	btfsc	status,0,c
  1629  000FC0  D01A               	goto	i2l90
  1630                           
  1631                           ;lcd.c: 72: {
  1632                           ;lcd.c: 73: SSP2BUF = LCDCommand[CommandPtr];
  1633  000FC2  504E               	movf	_CommandPtr,w,c
  1634  000FC4  0D01               	mullw	1
  1635  000FC6  0E82               	movlw	low _LCDCommand
  1636  000FC8  24F3               	addwf	prodl,w,c
  1637  000FCA  6ED9               	movwf	fsr2l,c
  1638  000FCC  0E00               	movlw	high _LCDCommand
  1639  000FCE  20F4               	addwfc	prodh,w,c
  1640  000FD0  6EDA               	movwf	fsr2h,c
  1641  000FD2  50DF               	movf	indf2,w,c
  1642  000FD4  6E75               	movwf	3957,c	;volatile
  1643                           
  1644                           ;lcd.c: 75: {
  1645                           ;lcd.c: 76: CommandPtr++;
  1646  000FD6  2A4E               	incf	_CommandPtr,f,c
  1647                           
  1648                           ;lcd.c: 77: }
  1649                           ;lcd.c: 78: if( CommandPtr == CommandLen && TextLen == 0 )
  1650  000FD8  5050               	movf	_CommandLen,w,c
  1651  000FDA  184E               	xorwf	_CommandPtr,w,c
  1652  000FDC  A4D8               	btfss	status,2,c
  1653  000FDE  0012               	return	
  1654  000FE0  504F               	movf	_TextLen,w,c
  1655  000FE2  A4D8               	btfss	status,2,c
  1656  000FE4  0012               	return	
  1657                           
  1658                           ;lcd.c: 79: {
  1659                           ;lcd.c: 81: SSP2CON2bits.PEN = 1;
  1660  000FE6  8471               	bsf	3953,2,c	;volatile
  1661                           
  1662                           ;lcd.c: 82: DELAY_ms(300);
  1663  000FE8  0E01               	movlw	1
  1664  000FEA  6E0E               	movwf	DELAY_ms@ms+1,c
  1665  000FEC  0E2C               	movlw	44
  1666  000FEE  6E0D               	movwf	DELAY_ms@ms,c
  1667  000FF0  EC2B  F008         	call	_DELAY_ms	;wreg free
  1668                           
  1669                           ;lcd.c: 83: }
  1670                           ;lcd.c: 84: }
  1671  000FF4  0012               	return	
  1672  000FF6                     i2l90:
  1673                           
  1674                           ;lcd.c: 85: else if( TextPtr < TextLen )
  1675  000FF6  504F               	movf	_TextLen,w,c
  1676  000FF8  5C4D               	subwf	_TextPtr,w,c
  1677  000FFA  B0D8               	btfsc	status,0,c
  1678  000FFC  0012               	return	
  1679                           
  1680                           ;lcd.c: 86: {
  1681                           ;lcd.c: 87: if( LCDText[TextPtr] == 0 )
  1682  000FFE  504D               	movf	_TextPtr,w,c
  1683  001000  0D01               	mullw	1
  1684  001002  0E7B               	movlw	low _LCDText
  1685  001004  24F3               	addwf	prodl,w,c
  1686  001006  6ED9               	movwf	fsr2l,c
  1687  001008  0E01               	movlw	high _LCDText
  1688  00100A  20F4               	addwfc	prodh,w,c
  1689  00100C  6EDA               	movwf	fsr2h,c
  1690  00100E  50DF               	movf	indf2,w,c
  1691  001010  A4D8               	btfss	status,2,c
  1692  001012  D00A               	goto	i2l94
  1693                           
  1694                           ;lcd.c: 88: {
  1695                           ;lcd.c: 89: LCDText[TextPtr] = ' ';
  1696  001014  504D               	movf	_TextPtr,w,c
  1697  001016  0D01               	mullw	1
  1698  001018  0E7B               	movlw	low _LCDText
  1699  00101A  24F3               	addwf	prodl,w,c
  1700  00101C  6ED9               	movwf	fsr2l,c
  1701  00101E  0E01               	movlw	high _LCDText
  1702  001020  20F4               	addwfc	prodh,w,c
  1703  001022  6EDA               	movwf	fsr2h,c
  1704  001024  0E20               	movlw	32
  1705  001026  6EDF               	movwf	indf2,c
  1706  001028                     i2l94:
  1707                           
  1708                           ;lcd.c: 90: }
  1709                           ;lcd.c: 91: SSP2BUF = LCDText[TextPtr];
  1710  001028  504D               	movf	_TextPtr,w,c
  1711  00102A  0D01               	mullw	1
  1712  00102C  0E7B               	movlw	low _LCDText
  1713  00102E  24F3               	addwf	prodl,w,c
  1714  001030  6ED9               	movwf	fsr2l,c
  1715  001032  0E01               	movlw	high _LCDText
  1716  001034  20F4               	addwfc	prodh,w,c
  1717  001036  6EDA               	movwf	fsr2h,c
  1718  001038  50DF               	movf	indf2,w,c
  1719  00103A  6E75               	movwf	3957,c	;volatile
  1720                           
  1721                           ;lcd.c: 94: {
  1722                           ;lcd.c: 95: TextPtr++;
  1723  00103C  2A4D               	incf	_TextPtr,f,c
  1724                           
  1725                           ;lcd.c: 96: }
  1726                           ;lcd.c: 97: if( TextPtr == TextLen )
  1727  00103E  504F               	movf	_TextLen,w,c
  1728  001040  184D               	xorwf	_TextPtr,w,c
  1729  001042  A4D8               	btfss	status,2,c
  1730  001044  0012               	return	
  1731                           
  1732                           ;lcd.c: 98: {
  1733                           ;lcd.c: 100: SSP2CON2bits.PEN = 1;
  1734  001046  8471               	bsf	3953,2,c	;volatile
  1735                           
  1736                           ;lcd.c: 101: DELAY_ms(300);
  1737  001048  0E01               	movlw	1
  1738  00104A  6E0E               	movwf	DELAY_ms@ms+1,c
  1739  00104C  0E2C               	movlw	44
  1740  00104E  6E0D               	movwf	DELAY_ms@ms,c
  1741  001050  EC2B  F008         	call	_DELAY_ms	;wreg free
  1742  001054  0012               	return	
  1743  001056                     __end_of_I2CTask:
  1744                           	opt stack 0
  1745                           pclatu	equ	0xFFB
  1746                           pclath	equ	0xFFA
  1747                           tblptru	equ	0xFF8
  1748                           tblptrh	equ	0xFF7
  1749                           tblptrl	equ	0xFF6
  1750                           tablat	equ	0xFF5
  1751                           prodh	equ	0xFF4
  1752                           prodl	equ	0xFF3
  1753                           intcon3	equ	0xFF0
  1754                           postinc0	equ	0xFEE
  1755                           fsr0h	equ	0xFEA
  1756                           fsr0l	equ	0xFE9
  1757                           wreg	equ	0xFE8
  1758                           postdec1	equ	0xFE5
  1759                           fsr1h	equ	0xFE2
  1760                           fsr1l	equ	0xFE1
  1761                           indf2	equ	0xFDF
  1762                           fsr2h	equ	0xFDA
  1763                           fsr2l	equ	0xFD9
  1764                           status	equ	0xFD8
  1765                           
  1766 ;; *************** function _DELAY_ms *****************
  1767 ;; Defined at:
  1768 ;;		line 108 in file "8bitswdk_pic18f46j50_24j40/firmware/src/system_config/8bitwdk_pic18f46j50_24j40/delay.c"
  1769 ;; Parameters:    Size  Location     Type
  1770 ;;  ms              2   12[COMRAM] unsigned int 
  1771 ;; Auto vars:     Size  Location     Type
  1772 ;;  cyclesRequir    4   14[COMRAM] long 
  1773 ;; Return value:  Size  Location     Type
  1774 ;;                  1    wreg      void 
  1775 ;; Registers used:
  1776 ;;		wreg, status,2, status,0, cstack
  1777 ;; Tracked objects:
  1778 ;;		On entry : 0/0
  1779 ;;		On exit  : 0/0
  1780 ;;		Unchanged: 0/0
  1781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1782 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1783 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1785 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1786 ;;Total ram usage:        6 bytes
  1787 ;; Hardware stack levels used:    1
  1788 ;; Hardware stack levels required when called:    1
  1789 ;; This function calls:
  1790 ;;		___lmul
  1791 ;; This function is called by:
  1792 ;;		_I2CTask
  1793 ;;		_UserInterruptHandler
  1794 ;;		_LCD_Initialize
  1795 ;;		_LCDDisplay
  1796 ;;		_LCDBacklightON
  1797 ;;		_LCDBacklightOFF
  1798 ;; This function uses a non-reentrant model
  1799 ;;
  1800                           
  1801                           	psect	text7
  1802  001056                     __ptext7:
  1803                           	opt stack 0
  1804  001056                     _DELAY_ms:
  1805                           	opt stack 24
  1806                           
  1807                           ;delay.c: 112: int32_t cyclesRequiredForEntireDelay = 0;
  1808                           
  1809                           ;incstack = 0
  1810  001056  0E00               	movlw	0
  1811  001058  6E0F               	movwf	DELAY_ms@cyclesRequiredForEntireDelay,c
  1812  00105A  0E00               	movlw	0
  1813  00105C  6E10               	movwf	DELAY_ms@cyclesRequiredForEntireDelay+1,c
  1814  00105E  0E00               	movlw	0
  1815  001060  6E11               	movwf	DELAY_ms@cyclesRequiredForEntireDelay+2,c
  1816  001062  0E00               	movlw	0
  1817  001064  6E12               	movwf	DELAY_ms@cyclesRequiredForEntireDelay+3,c
  1818                           
  1819                           ;delay.c: 115: cyclesRequiredForEntireDelay = (signed long)(((8000000/2*4)/4)/1000) * ms
      +                          ;
  1820  001066  C00D  F001         	movff	DELAY_ms@ms,___lmul@multiplier
  1821  00106A  C00E  F002         	movff	DELAY_ms@ms+1,___lmul@multiplier+1
  1822  00106E  6A03               	clrf	___lmul@multiplier+2,c
  1823  001070  6A04               	clrf	___lmul@multiplier+3,c
  1824  001072  0EA0               	movlw	160
  1825  001074  6E05               	movwf	___lmul@multiplicand,c
  1826  001076  0E0F               	movlw	15
  1827  001078  6E06               	movwf	___lmul@multiplicand+1,c
  1828  00107A  0E00               	movlw	0
  1829  00107C  6E07               	movwf	___lmul@multiplicand+2,c
  1830  00107E  0E00               	movlw	0
  1831  001080  6E08               	movwf	___lmul@multiplicand+3,c
  1832  001082  ECB2  F008         	call	___lmul	;wreg free
  1833  001086  C001  F00F         	movff	?___lmul,DELAY_ms@cyclesRequiredForEntireDelay
  1834  00108A  C002  F010         	movff	?___lmul+1,DELAY_ms@cyclesRequiredForEntireDelay+1
  1835  00108E  C003  F011         	movff	?___lmul+2,DELAY_ms@cyclesRequiredForEntireDelay+2
  1836  001092  C004  F012         	movff	?___lmul+3,DELAY_ms@cyclesRequiredForEntireDelay+3
  1837                           
  1838                           ;delay.c: 119: cyclesRequiredForEntireDelay -= (148 + 22);
  1839  001096  0E56               	movlw	86
  1840  001098  260F               	addwf	DELAY_ms@cyclesRequiredForEntireDelay,f,c
  1841  00109A  0EFF               	movlw	255
  1842  00109C  2210               	addwfc	DELAY_ms@cyclesRequiredForEntireDelay+1,f,c
  1843  00109E  0EFF               	movlw	255
  1844  0010A0  2211               	addwfc	DELAY_ms@cyclesRequiredForEntireDelay+2,f,c
  1845  0010A2  0EFF               	movlw	255
  1846  0010A4  2212               	addwfc	DELAY_ms@cyclesRequiredForEntireDelay+3,f,c
  1847                           
  1848                           ;delay.c: 121: if (cyclesRequiredForEntireDelay <= (170+25))
  1849  0010A6  BE12               	btfsc	DELAY_ms@cyclesRequiredForEntireDelay+3,7,c
  1850  0010A8  0012               	return	
  1851  0010AA  5012               	movf	DELAY_ms@cyclesRequiredForEntireDelay+3,w,c
  1852  0010AC  1011               	iorwf	DELAY_ms@cyclesRequiredForEntireDelay+2,w,c
  1853  0010AE  1010               	iorwf	DELAY_ms@cyclesRequiredForEntireDelay+1,w,c
  1854  0010B0  E10E               	bnz	i2l43
  1855  0010B2  0EC4               	movlw	196
  1856  0010B4  5C0F               	subwf	DELAY_ms@cyclesRequiredForEntireDelay,w,c
  1857  0010B6  A0D8               	btfss	status,0,c
  1858  0010B8  0012               	return	
  1859  0010BA  D009               	goto	i2l43
  1860  0010BC                     i2l44:
  1861                           
  1862                           ;delay.c: 128: {
  1863                           ;delay.c: 129: __nop();
  1864  0010BC  F000               	nop	
  1865                           
  1866                           ;delay.c: 130: cyclesRequiredForEntireDelay -= 39;
  1867  0010BE  0ED9               	movlw	217
  1868  0010C0  260F               	addwf	DELAY_ms@cyclesRequiredForEntireDelay,f,c
  1869  0010C2  0EFF               	movlw	255
  1870  0010C4  2210               	addwfc	DELAY_ms@cyclesRequiredForEntireDelay+1,f,c
  1871  0010C6  0EFF               	movlw	255
  1872  0010C8  2211               	addwfc	DELAY_ms@cyclesRequiredForEntireDelay+2,f,c
  1873  0010CA  0EFF               	movlw	255
  1874  0010CC  2212               	addwfc	DELAY_ms@cyclesRequiredForEntireDelay+3,f,c
  1875  0010CE                     i2l43:
  1876  0010CE  BE12               	btfsc	DELAY_ms@cyclesRequiredForEntireDelay+3,7,c
  1877  0010D0  0012               	return	
  1878  0010D2  5012               	movf	DELAY_ms@cyclesRequiredForEntireDelay+3,w,c
  1879  0010D4  1011               	iorwf	DELAY_ms@cyclesRequiredForEntireDelay+2,w,c
  1880  0010D6  1010               	iorwf	DELAY_ms@cyclesRequiredForEntireDelay+1,w,c
  1881  0010D8  E1F1               	bnz	i2l44
  1882  0010DA  040F               	decf	DELAY_ms@cyclesRequiredForEntireDelay,w,c
  1883  0010DC  A0D8               	btfss	status,0,c
  1884  0010DE  0012               	return	
  1885  0010E0  D7ED               	goto	i2l44
  1886  0010E2                     __end_of_DELAY_ms:
  1887                           	opt stack 0
  1888                           pclatu	equ	0xFFB
  1889                           pclath	equ	0xFFA
  1890                           tblptru	equ	0xFF8
  1891                           tblptrh	equ	0xFF7
  1892                           tblptrl	equ	0xFF6
  1893                           tablat	equ	0xFF5
  1894                           prodh	equ	0xFF4
  1895                           prodl	equ	0xFF3
  1896                           intcon3	equ	0xFF0
  1897                           postinc0	equ	0xFEE
  1898                           fsr0h	equ	0xFEA
  1899                           fsr0l	equ	0xFE9
  1900                           wreg	equ	0xFE8
  1901                           postdec1	equ	0xFE5
  1902                           fsr1h	equ	0xFE2
  1903                           fsr1l	equ	0xFE1
  1904                           indf2	equ	0xFDF
  1905                           fsr2h	equ	0xFDA
  1906                           fsr2l	equ	0xFD9
  1907                           status	equ	0xFD8
  1908                           
  1909 ;; *************** function ___lmul *****************
  1910 ;; Defined at:
  1911 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
  1912 ;; Parameters:    Size  Location     Type
  1913 ;;  multiplier      4    0[COMRAM] unsigned long 
  1914 ;;  multiplicand    4    4[COMRAM] unsigned long 
  1915 ;; Auto vars:     Size  Location     Type
  1916 ;;  product         4    8[COMRAM] unsigned long 
  1917 ;; Return value:  Size  Location     Type
  1918 ;;                  4    0[COMRAM] unsigned long 
  1919 ;; Registers used:
  1920 ;;		wreg, status,2, status,0
  1921 ;; Tracked objects:
  1922 ;;		On entry : 0/0
  1923 ;;		On exit  : 0/0
  1924 ;;		Unchanged: 0/0
  1925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1926 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1927 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1929 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1930 ;;Total ram usage:       12 bytes
  1931 ;; Hardware stack levels used:    1
  1932 ;; This function calls:
  1933 ;;		Nothing
  1934 ;; This function is called by:
  1935 ;;		_DELAY_ms
  1936 ;;		_DELAY_10us
  1937 ;; This function uses a non-reentrant model
  1938 ;;
  1939                           
  1940                           	psect	text8
  1941  001164                     __ptext8:
  1942                           	opt stack 0
  1943  001164                     ___lmul:
  1944                           	opt stack 24
  1945                           
  1946                           ;incstack = 0
  1947  001164  0E00               	movlw	0
  1948  001166  6E09               	movwf	___lmul@product,c
  1949  001168  0E00               	movlw	0
  1950  00116A  6E0A               	movwf	___lmul@product+1,c
  1951  00116C  0E00               	movlw	0
  1952  00116E  6E0B               	movwf	___lmul@product+2,c
  1953  001170  0E00               	movlw	0
  1954  001172  6E0C               	movwf	___lmul@product+3,c
  1955  001174  A001               	btfss	___lmul@multiplier,0,c
  1956  001176  D008               	goto	i2l1268
  1957  001178  5005               	movf	___lmul@multiplicand,w,c
  1958  00117A  2609               	addwf	___lmul@product,f,c
  1959  00117C  5006               	movf	___lmul@multiplicand+1,w,c
  1960  00117E  220A               	addwfc	___lmul@product+1,f,c
  1961  001180  5007               	movf	___lmul@multiplicand+2,w,c
  1962  001182  220B               	addwfc	___lmul@product+2,f,c
  1963  001184  5008               	movf	___lmul@multiplicand+3,w,c
  1964  001186  220C               	addwfc	___lmul@product+3,f,c
  1965  001188                     i2l1268:
  1966  001188  90D8               	bcf	status,0,c
  1967  00118A  3605               	rlcf	___lmul@multiplicand,f,c
  1968  00118C  3606               	rlcf	___lmul@multiplicand+1,f,c
  1969  00118E  3607               	rlcf	___lmul@multiplicand+2,f,c
  1970  001190  3608               	rlcf	___lmul@multiplicand+3,f,c
  1971  001192  90D8               	bcf	status,0,c
  1972  001194  3204               	rrcf	___lmul@multiplier+3,f,c
  1973  001196  3203               	rrcf	___lmul@multiplier+2,f,c
  1974  001198  3202               	rrcf	___lmul@multiplier+1,f,c
  1975  00119A  3201               	rrcf	___lmul@multiplier,f,c
  1976  00119C  5001               	movf	___lmul@multiplier,w,c
  1977  00119E  1002               	iorwf	___lmul@multiplier+1,w,c
  1978  0011A0  1003               	iorwf	___lmul@multiplier+2,w,c
  1979  0011A2  1004               	iorwf	___lmul@multiplier+3,w,c
  1980  0011A4  A4D8               	btfss	status,2,c
  1981  0011A6  D7E6               	goto	i2l1267
  1982  0011A8  C009  F001         	movff	___lmul@product,?___lmul
  1983  0011AC  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  1984  0011B0  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  1985  0011B4  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  1986  0011B8  0012               	return		;funcret
  1987  0011BA                     __end_of___lmul:
  1988                           	opt stack 0
  1989                           pclatu	equ	0xFFB
  1990                           pclath	equ	0xFFA
  1991                           tblptru	equ	0xFF8
  1992                           tblptrh	equ	0xFF7
  1993                           tblptrl	equ	0xFF6
  1994                           tablat	equ	0xFF5
  1995                           prodh	equ	0xFF4
  1996                           prodl	equ	0xFF3
  1997                           intcon3	equ	0xFF0
  1998                           postinc0	equ	0xFEE
  1999                           fsr0h	equ	0xFEA
  2000                           fsr0l	equ	0xFE9
  2001                           wreg	equ	0xFE8
  2002                           postdec1	equ	0xFE5
  2003                           fsr1h	equ	0xFE2
  2004                           fsr1l	equ	0xFE1
  2005                           indf2	equ	0xFDF
  2006                           fsr2h	equ	0xFDA
  2007                           fsr2l	equ	0xFD9
  2008                           status	equ	0xFD8
  2009                           
  2010 ;; *************** function _PHYSetShortRAMAddr *****************
  2011 ;; Defined at:
  2012 ;;		line 124 in file "../MLA/framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
  2013 ;; Parameters:    Size  Location     Type
  2014 ;;  address         1    wreg     unsigned char 
  2015 ;;  value           1    2[COMRAM] unsigned char 
  2016 ;; Auto vars:     Size  Location     Type
  2017 ;;  address         1    3[COMRAM] unsigned char 
  2018 ;;  tmpRFIE         1    4[COMRAM] volatile unsigned char 
  2019 ;; Return value:  Size  Location     Type
  2020 ;;                  1    wreg      void 
  2021 ;; Registers used:
  2022 ;;		wreg, status,2, cstack
  2023 ;; Tracked objects:
  2024 ;;		On entry : 0/0
  2025 ;;		On exit  : 0/0
  2026 ;;		Unchanged: 0/0
  2027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2028 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2029 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2031 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2032 ;;Total ram usage:        3 bytes
  2033 ;; Hardware stack levels used:    1
  2034 ;; Hardware stack levels required when called:    1
  2035 ;; This function calls:
  2036 ;;		_SPIPut
  2037 ;; This function is called by:
  2038 ;;		_high_isr
  2039 ;;		_InitMRF24J40
  2040 ;;		_MiMAC_SendPacket
  2041 ;;		_MiMAC_SetChannel
  2042 ;;		_MiMAC_SetAltAddress
  2043 ;; This function uses a non-reentrant model
  2044 ;;
  2045                           
  2046                           	psect	text9
  2047  001284                     __ptext9:
  2048                           	opt stack 0
  2049  001284                     _PHYSetShortRAMAddr:
  2050                           	opt stack 26
  2051                           
  2052                           ;incstack = 0
  2053                           ;PHYSetShortRAMAddr@address stored from wreg
  2054  001284  6E04               	movwf	PHYSetShortRAMAddr@address,c
  2055                           
  2056                           ;drv_mrf_miwi_24j40.c: 126: volatile uint8_t tmpRFIE = INTCON3bits.INT1IE;
  2057  001286  0E00               	movlw	0
  2058  001288  B6F0               	btfsc	intcon3,3,c	;volatile
  2059  00128A  0E01               	movlw	1
  2060  00128C  6E05               	movwf	PHYSetShortRAMAddr@tmpRFIE,c	;volatile
  2061                           
  2062                           ;drv_mrf_miwi_24j40.c: 128: INTCON3bits.INT1IE = 0;
  2063  00128E  96F0               	bcf	intcon3,3,c	;volatile
  2064                           
  2065                           ;drv_mrf_miwi_24j40.c: 129: LATBbits.LATB3 = 0;
  2066  001290  968A               	bcf	3978,3,c	;volatile
  2067                           
  2068                           ;drv_mrf_miwi_24j40.c: 130: SPIPut(address);
  2069  001292  5004               	movf	PHYSetShortRAMAddr@address,w,c
  2070  001294  EC56  F009         	call	_SPIPut
  2071                           
  2072                           ;drv_mrf_miwi_24j40.c: 131: SPIPut(value);
  2073  001298  5003               	movf	PHYSetShortRAMAddr@value,w,c
  2074  00129A  EC56  F009         	call	_SPIPut
  2075                           
  2076                           ;drv_mrf_miwi_24j40.c: 132: LATBbits.LATB3 = 1;
  2077  00129E  868A               	bsf	3978,3,c	;volatile
  2078                           
  2079                           ;drv_mrf_miwi_24j40.c: 133: INTCON3bits.INT1IE = tmpRFIE;
  2080  0012A0  B005               	btfsc	PHYSetShortRAMAddr@tmpRFIE,0,c	;volatile
  2081  0012A2  D002               	bra	i2u693_45
  2082  0012A4  96F0               	bcf	intcon3,3,c	;volatile
  2083  0012A6  D001               	bra	i2u693_46
  2084  0012A8                     i2u693_45:
  2085  0012A8  86F0               	bsf	intcon3,3,c	;volatile
  2086  0012AA                     i2u693_46:
  2087  0012AA  0012               	return		;funcret
  2088  0012AC                     __end_of_PHYSetShortRAMAddr:
  2089                           	opt stack 0
  2090                           pclatu	equ	0xFFB
  2091                           pclath	equ	0xFFA
  2092                           tblptru	equ	0xFF8
  2093                           tblptrh	equ	0xFF7
  2094                           tblptrl	equ	0xFF6
  2095                           tablat	equ	0xFF5
  2096                           prodh	equ	0xFF4
  2097                           prodl	equ	0xFF3
  2098                           intcon3	equ	0xFF0
  2099                           postinc0	equ	0xFEE
  2100                           fsr0h	equ	0xFEA
  2101                           fsr0l	equ	0xFE9
  2102                           wreg	equ	0xFE8
  2103                           postdec1	equ	0xFE5
  2104                           fsr1h	equ	0xFE2
  2105                           fsr1l	equ	0xFE1
  2106                           indf2	equ	0xFDF
  2107                           fsr2h	equ	0xFDA
  2108                           fsr2l	equ	0xFD9
  2109                           status	equ	0xFD8
  2110                           
  2111 ;; *************** function _PHYGetShortRAMAddr *****************
  2112 ;; Defined at:
  2113 ;;		line 154 in file "../MLA/framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
  2114 ;; Parameters:    Size  Location     Type
  2115 ;;  address         1    wreg     unsigned char 
  2116 ;; Auto vars:     Size  Location     Type
  2117 ;;  address         1    2[COMRAM] unsigned char 
  2118 ;;  tmpRFIE         1    4[COMRAM] volatile unsigned char 
  2119 ;;  toReturn        1    3[COMRAM] unsigned char 
  2120 ;; Return value:  Size  Location     Type
  2121 ;;                  1    wreg      unsigned char 
  2122 ;; Registers used:
  2123 ;;		wreg, status,2, cstack
  2124 ;; Tracked objects:
  2125 ;;		On entry : 0/0
  2126 ;;		On exit  : 0/0
  2127 ;;		Unchanged: 0/0
  2128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2130 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2132 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2133 ;;Total ram usage:        3 bytes
  2134 ;; Hardware stack levels used:    1
  2135 ;; Hardware stack levels required when called:    2
  2136 ;; This function calls:
  2137 ;;		_SPIGet
  2138 ;;		_SPIPut
  2139 ;; This function is called by:
  2140 ;;		_high_isr
  2141 ;;		_InitMRF24J40
  2142 ;; This function uses a non-reentrant model
  2143 ;;
  2144                           
  2145                           	psect	text10
  2146  00125A                     __ptext10:
  2147                           	opt stack 0
  2148  00125A                     _PHYGetShortRAMAddr:
  2149                           	opt stack 25
  2150                           
  2151                           ;incstack = 0
  2152                           ;PHYGetShortRAMAddr@address stored from wreg
  2153  00125A  6E03               	movwf	PHYGetShortRAMAddr@address,c
  2154                           
  2155                           ;drv_mrf_miwi_24j40.c: 156: uint8_t toReturn;
  2156                           ;drv_mrf_miwi_24j40.c: 157: volatile uint8_t tmpRFIE = INTCON3bits.INT1IE;
  2157  00125C  0E00               	movlw	0
  2158  00125E  B6F0               	btfsc	intcon3,3,c	;volatile
  2159  001260  0E01               	movlw	1
  2160  001262  6E05               	movwf	PHYGetShortRAMAddr@tmpRFIE,c	;volatile
  2161                           
  2162                           ;drv_mrf_miwi_24j40.c: 159: INTCON3bits.INT1IE = 0;
  2163  001264  96F0               	bcf	intcon3,3,c	;volatile
  2164                           
  2165                           ;drv_mrf_miwi_24j40.c: 160: LATBbits.LATB3 = 0;
  2166  001266  968A               	bcf	3978,3,c	;volatile
  2167                           
  2168                           ;drv_mrf_miwi_24j40.c: 161: SPIPut(address);
  2169  001268  5003               	movf	PHYGetShortRAMAddr@address,w,c
  2170  00126A  EC56  F009         	call	_SPIPut
  2171                           
  2172                           ;drv_mrf_miwi_24j40.c: 162: toReturn = SPIGet();
  2173  00126E  EC8C  F009         	call	_SPIGet	;wreg free
  2174  001272  6E04               	movwf	PHYGetShortRAMAddr@toReturn,c
  2175                           
  2176                           ;drv_mrf_miwi_24j40.c: 163: LATBbits.LATB3 = 1;
  2177  001274  868A               	bsf	3978,3,c	;volatile
  2178                           
  2179                           ;drv_mrf_miwi_24j40.c: 164: INTCON3bits.INT1IE = tmpRFIE;
  2180  001276  B005               	btfsc	PHYGetShortRAMAddr@tmpRFIE,0,c	;volatile
  2181  001278  D002               	bra	i2u694_45
  2182  00127A  96F0               	bcf	intcon3,3,c	;volatile
  2183  00127C  D001               	bra	i2u694_46
  2184  00127E                     i2u694_45:
  2185  00127E  86F0               	bsf	intcon3,3,c	;volatile
  2186  001280                     i2u694_46:
  2187                           
  2188                           ;drv_mrf_miwi_24j40.c: 166: return toReturn;
  2189  001280  5004               	movf	PHYGetShortRAMAddr@toReturn,w,c
  2190  001282  0012               	return	
  2191  001284                     __end_of_PHYGetShortRAMAddr:
  2192                           	opt stack 0
  2193                           pclatu	equ	0xFFB
  2194                           pclath	equ	0xFFA
  2195                           tblptru	equ	0xFF8
  2196                           tblptrh	equ	0xFF7
  2197                           tblptrl	equ	0xFF6
  2198                           tablat	equ	0xFF5
  2199                           prodh	equ	0xFF4
  2200                           prodl	equ	0xFF3
  2201                           intcon3	equ	0xFF0
  2202                           postinc0	equ	0xFEE
  2203                           fsr0h	equ	0xFEA
  2204                           fsr0l	equ	0xFE9
  2205                           wreg	equ	0xFE8
  2206                           postdec1	equ	0xFE5
  2207                           fsr1h	equ	0xFE2
  2208                           fsr1l	equ	0xFE1
  2209                           indf2	equ	0xFDF
  2210                           fsr2h	equ	0xFDA
  2211                           fsr2l	equ	0xFD9
  2212                           status	equ	0xFD8
  2213                           
  2214 ;; *************** function _PHYGetLongRAMAddr *****************
  2215 ;; Defined at:
  2216 ;;		line 185 in file "../MLA/framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
  2217 ;; Parameters:    Size  Location     Type
  2218 ;;  address         2    2[COMRAM] unsigned int 
  2219 ;; Auto vars:     Size  Location     Type
  2220 ;;  tmpRFIE         1    7[COMRAM] volatile unsigned char 
  2221 ;;  toReturn        1    6[COMRAM] unsigned char 
  2222 ;; Return value:  Size  Location     Type
  2223 ;;                  1    wreg      unsigned char 
  2224 ;; Registers used:
  2225 ;;		wreg, status,2, status,0, cstack
  2226 ;; Tracked objects:
  2227 ;;		On entry : 0/0
  2228 ;;		On exit  : 0/0
  2229 ;;		Unchanged: 0/0
  2230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2231 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2232 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2233 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2234 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2235 ;;Total ram usage:        6 bytes
  2236 ;; Hardware stack levels used:    1
  2237 ;; Hardware stack levels required when called:    2
  2238 ;; This function calls:
  2239 ;;		_SPIGet
  2240 ;;		_SPIPut
  2241 ;; This function is called by:
  2242 ;;		_high_isr
  2243 ;;		_InitMRF24J40
  2244 ;; This function uses a non-reentrant model
  2245 ;;
  2246                           
  2247                           	psect	text11
  2248  0011BA                     __ptext11:
  2249                           	opt stack 0
  2250  0011BA                     _PHYGetLongRAMAddr:
  2251                           	opt stack 25
  2252                           
  2253                           ;drv_mrf_miwi_24j40.c: 187: uint8_t toReturn;
  2254                           ;drv_mrf_miwi_24j40.c: 188: volatile uint8_t tmpRFIE = INTCON3bits.INT1IE;
  2255                           
  2256                           ;incstack = 0
  2257  0011BA  0E00               	movlw	0
  2258  0011BC  B6F0               	btfsc	intcon3,3,c	;volatile
  2259  0011BE  0E01               	movlw	1
  2260  0011C0  6E08               	movwf	PHYGetLongRAMAddr@tmpRFIE,c	;volatile
  2261                           
  2262                           ;drv_mrf_miwi_24j40.c: 190: INTCON3bits.INT1IE = 0;
  2263  0011C2  96F0               	bcf	intcon3,3,c	;volatile
  2264                           
  2265                           ;drv_mrf_miwi_24j40.c: 191: LATBbits.LATB3 = 0;
  2266  0011C4  968A               	bcf	3978,3,c	;volatile
  2267                           
  2268                           ;drv_mrf_miwi_24j40.c: 192: SPIPut(((address >> 3)&0x7F) | 0x80);
  2269  0011C6  C003  F005         	movff	PHYGetLongRAMAddr@address,??_PHYGetLongRAMAddr
  2270  0011CA  C004  F006         	movff	PHYGetLongRAMAddr@address+1,??_PHYGetLongRAMAddr+1
  2271  0011CE  90D8               	bcf	status,0,c
  2272  0011D0  3206               	rrcf	??_PHYGetLongRAMAddr+1,f,c
  2273  0011D2  3205               	rrcf	??_PHYGetLongRAMAddr,f,c
  2274  0011D4  90D8               	bcf	status,0,c
  2275  0011D6  3206               	rrcf	??_PHYGetLongRAMAddr+1,f,c
  2276  0011D8  3205               	rrcf	??_PHYGetLongRAMAddr,f,c
  2277  0011DA  90D8               	bcf	status,0,c
  2278  0011DC  3206               	rrcf	??_PHYGetLongRAMAddr+1,f,c
  2279  0011DE  3205               	rrcf	??_PHYGetLongRAMAddr,f,c
  2280  0011E0  5005               	movf	??_PHYGetLongRAMAddr,w,c
  2281  0011E2  0B7F               	andlw	127
  2282  0011E4  0980               	iorlw	128
  2283  0011E6  EC56  F009         	call	_SPIPut
  2284                           
  2285                           ;drv_mrf_miwi_24j40.c: 193: SPIPut(((address << 5)&0xE0));
  2286  0011EA  3803               	swapf	PHYGetLongRAMAddr@address,w,c
  2287  0011EC  46E8               	rlncf	wreg,f,c
  2288  0011EE  0BE0               	andlw	224
  2289  0011F0  0BE0               	andlw	224
  2290  0011F2  EC56  F009         	call	_SPIPut
  2291                           
  2292                           ;drv_mrf_miwi_24j40.c: 194: toReturn = SPIGet();
  2293  0011F6  EC8C  F009         	call	_SPIGet	;wreg free
  2294  0011FA  6E07               	movwf	PHYGetLongRAMAddr@toReturn,c
  2295                           
  2296                           ;drv_mrf_miwi_24j40.c: 195: LATBbits.LATB3 = 1;
  2297  0011FC  868A               	bsf	3978,3,c	;volatile
  2298                           
  2299                           ;drv_mrf_miwi_24j40.c: 196: INTCON3bits.INT1IE = tmpRFIE;
  2300  0011FE  B008               	btfsc	PHYGetLongRAMAddr@tmpRFIE,0,c	;volatile
  2301  001200  D002               	bra	i2u695_45
  2302  001202  96F0               	bcf	intcon3,3,c	;volatile
  2303  001204  D001               	bra	i2u695_46
  2304  001206                     i2u695_45:
  2305  001206  86F0               	bsf	intcon3,3,c	;volatile
  2306  001208                     i2u695_46:
  2307                           
  2308                           ;drv_mrf_miwi_24j40.c: 198: return toReturn;
  2309  001208  5007               	movf	PHYGetLongRAMAddr@toReturn,w,c
  2310  00120A  0012               	return	
  2311  00120C                     __end_of_PHYGetLongRAMAddr:
  2312                           	opt stack 0
  2313                           pclatu	equ	0xFFB
  2314                           pclath	equ	0xFFA
  2315                           tblptru	equ	0xFF8
  2316                           tblptrh	equ	0xFF7
  2317                           tblptrl	equ	0xFF6
  2318                           tablat	equ	0xFF5
  2319                           prodh	equ	0xFF4
  2320                           prodl	equ	0xFF3
  2321                           intcon3	equ	0xFF0
  2322                           postinc0	equ	0xFEE
  2323                           fsr0h	equ	0xFEA
  2324                           fsr0l	equ	0xFE9
  2325                           wreg	equ	0xFE8
  2326                           postdec1	equ	0xFE5
  2327                           fsr1h	equ	0xFE2
  2328                           fsr1l	equ	0xFE1
  2329                           indf2	equ	0xFDF
  2330                           fsr2h	equ	0xFDA
  2331                           fsr2l	equ	0xFD9
  2332                           status	equ	0xFD8
  2333                           
  2334 ;; *************** function _SPIGet *****************
  2335 ;; Defined at:
  2336 ;;		line 102 in file "8bitswdk_pic18f46j50_24j40/firmware/src/system_config/8bitwdk_pic18f46j50_24j40/spi.c"
  2337 ;; Parameters:    Size  Location     Type
  2338 ;;		None
  2339 ;; Auto vars:     Size  Location     Type
  2340 ;;		None
  2341 ;; Return value:  Size  Location     Type
  2342 ;;                  1    wreg      unsigned char 
  2343 ;; Registers used:
  2344 ;;		wreg, status,2, cstack
  2345 ;; Tracked objects:
  2346 ;;		On entry : 0/0
  2347 ;;		On exit  : 0/0
  2348 ;;		Unchanged: 0/0
  2349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2354 ;;Total ram usage:        0 bytes
  2355 ;; Hardware stack levels used:    1
  2356 ;; Hardware stack levels required when called:    1
  2357 ;; This function calls:
  2358 ;;		_SPIPut
  2359 ;; This function is called by:
  2360 ;;		_PHYGetShortRAMAddr
  2361 ;;		_PHYGetLongRAMAddr
  2362 ;; This function uses a non-reentrant model
  2363 ;;
  2364                           
  2365                           	psect	text12
  2366  001318                     __ptext12:
  2367                           	opt stack 0
  2368  001318                     _SPIGet:
  2369                           	opt stack 25
  2370                           
  2371                           ;spi.c: 123: SPIPut(0x00);
  2372                           
  2373                           ;incstack = 0
  2374  001318  0E00               	movlw	0
  2375  00131A  EC56  F009         	call	_SPIPut
  2376                           
  2377                           ;spi.c: 124: return SSP1BUF;
  2378  00131E  50C9               	movf	4041,w,c	;volatile
  2379  001320  0012               	return	
  2380  001322                     __end_of_SPIGet:
  2381                           	opt stack 0
  2382                           pclatu	equ	0xFFB
  2383                           pclath	equ	0xFFA
  2384                           tblptru	equ	0xFF8
  2385                           tblptrh	equ	0xFF7
  2386                           tblptrl	equ	0xFF6
  2387                           tablat	equ	0xFF5
  2388                           prodh	equ	0xFF4
  2389                           prodl	equ	0xFF3
  2390                           intcon3	equ	0xFF0
  2391                           postinc0	equ	0xFEE
  2392                           fsr0h	equ	0xFEA
  2393                           fsr0l	equ	0xFE9
  2394                           wreg	equ	0xFE8
  2395                           postdec1	equ	0xFE5
  2396                           fsr1h	equ	0xFE2
  2397                           fsr1l	equ	0xFE1
  2398                           indf2	equ	0xFDF
  2399                           fsr2h	equ	0xFDA
  2400                           fsr2l	equ	0xFD9
  2401                           status	equ	0xFD8
  2402                           
  2403 ;; *************** function _SPIPut *****************
  2404 ;; Defined at:
  2405 ;;		line 45 in file "8bitswdk_pic18f46j50_24j40/firmware/src/system_config/8bitwdk_pic18f46j50_24j40/spi.c"
  2406 ;; Parameters:    Size  Location     Type
  2407 ;;  v               1    wreg     unsigned char 
  2408 ;; Auto vars:     Size  Location     Type
  2409 ;;  v               1    1[COMRAM] unsigned char 
  2410 ;;  i               1    0[COMRAM] unsigned char 
  2411 ;; Return value:  Size  Location     Type
  2412 ;;                  1    wreg      void 
  2413 ;; Registers used:
  2414 ;;		wreg
  2415 ;; Tracked objects:
  2416 ;;		On entry : 0/0
  2417 ;;		On exit  : 0/0
  2418 ;;		Unchanged: 0/0
  2419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2421 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2423 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2424 ;;Total ram usage:        2 bytes
  2425 ;; Hardware stack levels used:    1
  2426 ;; This function calls:
  2427 ;;		Nothing
  2428 ;; This function is called by:
  2429 ;;		_SPIGet
  2430 ;;		_PHYSetShortRAMAddr
  2431 ;;		_PHYGetShortRAMAddr
  2432 ;;		_PHYGetLongRAMAddr
  2433 ;;		_PHYSetLongRAMAddr
  2434 ;; This function uses a non-reentrant model
  2435 ;;
  2436                           
  2437                           	psect	text13
  2438  0012AC                     __ptext13:
  2439                           	opt stack 0
  2440  0012AC                     _SPIPut:
  2441                           	opt stack 26
  2442                           
  2443                           ;incstack = 0
  2444                           ;SPIPut@v stored from wreg
  2445  0012AC  6E02               	movwf	SPIPut@v,c
  2446                           
  2447                           ;spi.c: 64: {
  2448                           ;spi.c: 66: uint8_t i;
  2449                           ;spi.c: 68: PIR1bits.SSP1IF = 0;
  2450  0012AE  969E               	bcf	3998,3,c	;volatile
  2451                           
  2452                           ;spi.c: 70: i = SSP1BUF;
  2453  0012B0  CFC9 F001          	movff	4041,SPIPut@i	;volatile
  2454  0012B4                     i2l147:
  2455                           
  2456                           ;spi.c: 73: {
  2457                           ;spi.c: 74: SSP1CON1bits.WCOL = 0;
  2458  0012B4  9EC6               	bcf	4038,7,c	;volatile
  2459                           
  2460                           ;spi.c: 75: SSP1BUF = v;
  2461  0012B6  C002  FFC9         	movff	SPIPut@v,4041	;volatile
  2462                           
  2463                           ;spi.c: 76: } while( SSP1CON1bits.WCOL );
  2464  0012BA  BEC6               	btfsc	4038,7,c	;volatile
  2465  0012BC  D7FB               	goto	i2l147
  2466  0012BE                     i2u510_40:
  2467                           
  2468                           ;spi.c: 78: while( PIR1bits.SSP1IF == 0 );
  2469  0012BE  A69E               	btfss	3998,3,c	;volatile
  2470  0012C0  D7FE               	goto	i2u510_40
  2471                           
  2472                           ;spi.c: 80: PIR1bits.SSP1IF = 0;
  2473  0012C2  969E               	bcf	3998,3,c	;volatile
  2474  0012C4  0012               	return		;funcret
  2475  0012C6                     __end_of_SPIPut:
  2476                           	opt stack 0
  2477                           pclatu	equ	0xFFB
  2478                           pclath	equ	0xFFA
  2479                           tblptru	equ	0xFF8
  2480                           tblptrh	equ	0xFF7
  2481                           tblptrl	equ	0xFF6
  2482                           tablat	equ	0xFF5
  2483                           prodh	equ	0xFF4
  2484                           prodl	equ	0xFF3
  2485                           intcon3	equ	0xFF0
  2486                           postinc0	equ	0xFEE
  2487                           fsr0h	equ	0xFEA
  2488                           fsr0l	equ	0xFE9
  2489                           wreg	equ	0xFE8
  2490                           postdec1	equ	0xFE5
  2491                           fsr1h	equ	0xFE2
  2492                           fsr1l	equ	0xFE1
  2493                           indf2	equ	0xFDF
  2494                           fsr2h	equ	0xFDA
  2495                           fsr2l	equ	0xFD9
  2496                           status	equ	0xFD8
  2497                           pclatu	equ	0xFFB
  2498                           pclath	equ	0xFFA
  2499                           tblptru	equ	0xFF8
  2500                           tblptrh	equ	0xFF7
  2501                           tblptrl	equ	0xFF6
  2502                           tablat	equ	0xFF5
  2503                           prodh	equ	0xFF4
  2504                           prodl	equ	0xFF3
  2505                           intcon3	equ	0xFF0
  2506                           postinc0	equ	0xFEE
  2507                           fsr0h	equ	0xFEA
  2508                           fsr0l	equ	0xFE9
  2509                           wreg	equ	0xFE8
  2510                           postdec1	equ	0xFE5
  2511                           fsr1h	equ	0xFE2
  2512                           fsr1l	equ	0xFE1
  2513                           indf2	equ	0xFDF
  2514                           fsr2h	equ	0xFDA
  2515                           fsr2l	equ	0xFD9
  2516                           status	equ	0xFD8
  2517                           
  2518                           	psect	rparam
  2519  0000                     pclatu	equ	0xFFB
  2520                           pclath	equ	0xFFA
  2521                           tblptru	equ	0xFF8
  2522                           tblptrh	equ	0xFF7
  2523                           tblptrl	equ	0xFF6
  2524                           tablat	equ	0xFF5
  2525                           prodh	equ	0xFF4
  2526                           prodl	equ	0xFF3
  2527                           intcon3	equ	0xFF0
  2528                           postinc0	equ	0xFEE
  2529                           fsr0h	equ	0xFEA
  2530                           fsr0l	equ	0xFE9
  2531                           wreg	equ	0xFE8
  2532                           postdec1	equ	0xFE5
  2533                           fsr1h	equ	0xFE2
  2534                           fsr1l	equ	0xFE1
  2535                           indf2	equ	0xFDF
  2536                           fsr2h	equ	0xFDA
  2537                           fsr2l	equ	0xFD9
  2538                           status	equ	0xFD8
  2539                           
  2540                           	psect	temp
  2541  00005E                     btemp:
  2542                           	opt stack 0
  2543  00005E                     	ds	1
  2544  0000                     int$flags	set	btemp
  2545  0000                     wtemp6	set	btemp+1
  2546                           pclatu	equ	0xFFB
  2547                           pclath	equ	0xFFA
  2548                           tblptru	equ	0xFF8
  2549                           tblptrh	equ	0xFF7
  2550                           tblptrl	equ	0xFF6
  2551                           tablat	equ	0xFF5
  2552                           prodh	equ	0xFF4
  2553                           prodl	equ	0xFF3
  2554                           intcon3	equ	0xFF0
  2555                           postinc0	equ	0xFEE
  2556                           fsr0h	equ	0xFEA
  2557                           fsr0l	equ	0xFE9
  2558                           wreg	equ	0xFE8
  2559                           postdec1	equ	0xFE5
  2560                           fsr1h	equ	0xFE2
  2561                           fsr1l	equ	0xFE1
  2562                           indf2	equ	0xFDF
  2563                           fsr2h	equ	0xFDA
  2564                           fsr2l	equ	0xFD9
  2565                           status	equ	0xFD8


Data Sizes:
    Strings     73
    Constant    90
    Data        11
    BSS         638
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     46      93
    BANK0           160      7     153
    BANK1           256      0     156
    BANK2           256      0     160
    BANK3           256      0     140
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    initValue.PAddress	PTR unsigned char  size(2) Largest target is 8
		 -> myLongAddress(BANK0[8]), 

    transParam.DestAddress	PTR unsigned char  size(2) Largest target is 91
		 -> NULL(NULL[0]), ConnectionTable(BANK1[91]), tempShortAddress(COMRAM[2]), openSocketInfo(BANK0[26]), 
		 -> MiWiTasks@sourceShortAddress(COMRAM[2]), MiWiTasks@destShortAddress(COMRAM[2]), 

    MACInitParams.PAddress	PTR unsigned char  size(2) Largest target is 8
		 -> myLongAddress(BANK0[8]), 

    S1849$PAddress	PTR unsigned char  size(2) Largest target is 8
		 -> myLongAddress(BANK0[8]), 

    MIP.PAddress	PTR unsigned char  size(2) Largest target is 8
		 -> myLongAddress(BANK0[8]), 

    S1755$Payload	PTR unsigned char  size(2) Largest target is 160
		 -> RxBuffer(BANK2[160]), 

    MACRxPacket.Payload	PTR unsigned char  size(2) Largest target is 160
		 -> RxBuffer.Payload(BANK2[79]), RxBuffer(BANK2[160]), 

    S1755$SourceAddress	PTR unsigned char  size(2) Largest target is 160
		 -> RxBuffer(BANK2[160]), 

    MACRxPacket.SourceAddress	PTR unsigned char  size(2) Largest target is 160
		 -> RxBuffer.Payload(BANK2[79]), RxBuffer(BANK2[160]), 

    S1738$DestAddress	PTR unsigned char  size(2) Largest target is 91
		 -> NULL(NULL[0]), ConnectionTable(BANK1[91]), tempShortAddress(COMRAM[2]), openSocketInfo(BANK0[26]), 
		 -> MiWiTasks@sourceShortAddress(COMRAM[2]), MiWiTasks@destShortAddress(COMRAM[2]), 

    MTP.DestAddress	PTR unsigned char  size(2) Largest target is 91
		 -> NULL(NULL[0]), ConnectionTable.AltAddress(BANK1[2]), ConnectionTable(BANK1[91]), tempShortAddress(COMRAM[2]), 
		 -> openSocketInfo.ShortAddress1(BANK0[2]), openSocketInfo(BANK0[26]), MiWiTasks@sourceShortAddress(COMRAM[2]), MiWiTasks@destShortAddress(COMRAM[2]), 

    S1648$Payload	PTR unsigned char  size(2) Largest target is 160
		 -> RxBuffer(BANK2[160]), 

    rxMessage.Payload	PTR unsigned char  size(2) Largest target is 160
		 -> RxBuffer.Payload(BANK2[79]), RxBuffer(BANK2[160]), 

    S1648$SourceAddress	PTR unsigned char  size(2) Largest target is 160
		 -> RxBuffer(BANK2[160]), 

    rxMessage.SourceAddress	PTR unsigned char  size(2) Largest target is 160
		 -> RxBuffer.Payload(BANK2[79]), RxBuffer(BANK2[160]), 

    _uartPrint@str	PTR unsigned char  size(2) Largest target is 5
		 -> STR_3(CODE[5]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    _UserInterruptHandler->_DELAY_ms
    _I2CTask->_DELAY_ms
    _DELAY_ms->___lmul
    _PHYSetShortRAMAddr->_SPIPut
    _PHYGetShortRAMAddr->_SPIPut
    _PHYGetLongRAMAddr->_SPIPut
    _SPIGet->_SPIPut

Critical Paths under _main in BANK0

    _main->__uartPrint
    __uartPrint->_uartWrite

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     265
                         __uartPrint
                     _uartInitialize
 ---------------------------------------------------------------------------------
 (1) _uartInitialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) __uartPrint                                           6     4      2     265
                                              1 BANK0      6     4      2
                          _uartWrite
 ---------------------------------------------------------------------------------
 (2) _uartWrite                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _high_isr                                            28    28      0    6401
                                             18 COMRAM    28    28      0
                  _PHYGetLongRAMAddr
                 _PHYGetShortRAMAddr
                 _PHYSetShortRAMAddr
               _UserInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _UserInterruptHandler                                 0     0      0    3120
                           _DELAY_ms
                            _I2CTask
 ---------------------------------------------------------------------------------
 (5) _I2CTask                                              0     0      0    1560
                           _DELAY_ms
 ---------------------------------------------------------------------------------
 (6) _DELAY_ms                                             6     4      2    1560
                                             12 COMRAM     6     4      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (7) ___lmul                                              12     4      8     600
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) _PHYSetShortRAMAddr                                   3     2      1    2404
                                              2 COMRAM     3     2      1
                             _SPIPut
 ---------------------------------------------------------------------------------
 (4) _PHYGetShortRAMAddr                                   3     3      0     114
                                              2 COMRAM     3     3      0
                             _SPIGet
                             _SPIPut
 ---------------------------------------------------------------------------------
 (4) _PHYGetLongRAMAddr                                    6     4      2     403
                                              2 COMRAM     6     4      2
                             _SPIGet
                             _SPIPut
 ---------------------------------------------------------------------------------
 (5) _SPIGet                                               0     0      0      23
                             _SPIPut
 ---------------------------------------------------------------------------------
 (5) _SPIPut                                               2     2      0      23
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   __uartPrint
     _uartWrite
   _uartInitialize

 _high_isr (ROOT)
   _PHYGetLongRAMAddr
     _SPIGet
       _SPIPut
     _SPIPut
   _PHYGetShortRAMAddr
     _SPIGet
       _SPIPut
     _SPIPut
   _PHYSetShortRAMAddr
     _SPIPut
   _UserInterruptHandler
     _DELAY_ms
       ___lmul
     _I2CTask
       _DELAY_ms
         ___lmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      8C      12       54.7%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      A0      10       62.5%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      9C       8       60.9%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      7      99       5       95.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2E      5D       1       98.9%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2BE       6        0.0%
DATA                 0      0     2BE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Sep 19 15:10:35 2019

                        _RoutingTable 0072                     _ActiveScanResults 0300  
                                 l320 1218                                   l319 123A  
                                 l272 1308                                   _MTP 003A  
         __size_of_PHYSetShortRAMAddr 0028                       __end_of_I2CTask 1056  
                                 prod 000FF3                                   wreg 000FE8  
                          _TXSTA2bits 000FA8                                  l8706 130E  
                                STR_1 0F8E                                  STR_2 0F7D  
                                STR_3 0F9F                                  STR_4 0F5B  
                                STR_5 0F6C                                  _LATA 000F89  
                                _LATB 000F8A                                  _LATD 000F8C  
                                _LATE 000F8D                                  i2l43 10CE  
                                i2l44 10BC                                  i2l90 0FF6  
                                i2l94 1028                                  _main 12F6  
                                _role 0044                                  fsr0h 000FEA  
                                fsr1h 000FE2                                  fsr2h 000FDA  
                                fsr0l 000FE9                                  indf2 000FDF  
                                fsr1l 000FE1                                  fsr2l 000FD9  
                                btemp 005E                                  prodh 000FF4  
                                prodl 000FF3                                  start 0212  
                    __end_of_DELAY_ms 10E2                          ___param_bank 000000  
                   _PHYGetLongRAMAddr 11BA                    ?_PHYGetLongRAMAddr 0003  
                       __CFG_PLLDIV$2 000000                          _BAUDCON1bits 000F7E  
                               ?_main 0001                                 _T1CON 000FCD  
                               i2l147 12B4                   ??_PHYGetLongRAMAddr 0005  
                               _TMR1H 000FCF                                 _TMR0L 000FD6  
                               _TMR1L 000FCE                                 _TRISA 000F92  
                               _TRISB 000F93                                 _TRISC 000F94  
                               _TRISD 000F95                                 _TRISE 000F96  
                          _CommandLen 0050                            _CommandPtr 004E  
                 ___lmul@multiplicand 0005                            _MiWiSeqNum 0046  
                      _myShortAddress 0057            __end_of_PHYGetShortRAMAddr 1284  
                     __end_of_dpowers 0F53                                 pclath 000FFA  
                               tablat 000FF5                                 status 000FD8  
                               wtemp6 005F             __end_of_PHYGetLongRAMAddr 120C  
                     __initialization 10E2                          __end_of_main 130A  
                       high_isr@flags 002B                     _MACCurrentChannel 0095  
           PHYGetShortRAMAddr@address 0003                             ??_I2CTask 0013  
                      __CFG_OSC$HSPLL 000000                      __end_of_ScanTime 0F3D  
                              ??_main 00F9                         __activetblptr 000002  
           PHYGetShortRAMAddr@tmpRFIE 0005             PHYSetShortRAMAddr@address 0004  
                              _EECON2 000FA7                                _ANCON0 000F48  
                              _ANCON1 000F49                                i2l1100 0180  
                              i2l1101 013C                                i2l1102 0108  
                              i2l1104 018A                                i2l1105 01A0  
                              i2l1106 01AE                                i2l1109 01C2  
                              i2l1093 0088                                i2l1096 009A  
                              i2l1098 00B6                                i2l1267 1174  
                              i2l1099 0196                                i2l1268 1188  
                      __CFG_WDTEN$OFF 000000                                _INTCON 000FF2  
                              i2l8578 0092                                _RCREG2 000FAA  
                              _RCSTA2 000F9C                                _OSCCON 000FD3  
                              _SPBRG2 000FAB                                _RPINR1 000EE7  
                              _RPOR17 000ED7                                _SPIGet 1318  
                              _SPIPut 12AC                                _TXREG2 000FA9  
           PHYSetShortRAMAddr@tmpRFIE 0005                                _TXSTA2 000FA8  
       __size_of_UserInterruptHandler 0018                        __CFG_XINST$OFF 000000  
                              _TxData 0048                      __end_of_high_isr 0212  
                              ___lmul 1164                                clear_0 1120  
                              clear_1 112C                                clear_2 1138  
                              clear_3 1144                                clear_4 1150  
                        __pdataCOMRAM 005C                        _openSocketInfo 00CD  
                        __mediumconst 0000                                tblptrh 000FF7  
                              tblptrl 000FF6                                tblptru 000FF8  
                           ?_DELAY_ms 000D                            __accesstop 0060  
             __end_of__initialization 1156                         ___rparam_used 000001  
          __size_of_PHYGetLongRAMAddr 0052                 _ActiveScanResultIndex 004A  
                      __pcstackCOMRAM 0001                        high_isr@RxBank 002D  
                        __pidataBANK0 1322                       _ConnectionTable 0120  
                          ??_DELAY_ms 000F               __size_of_uartInitialize 0018  
                          __pbssBANK0 0060                            __pbssBANK1 0100  
                          __pbssBANK2 0200                            __pbssBANK3 0300  
                             ?_SPIGet 0001                               ?_SPIPut 0001  
          PHYGetShortRAMAddr@toReturn 0004                               ?___lmul 0001  
                          __uartPrint 120C                               _I2CTask 0FA6  
                      ___lmul@product 0009                               SPIPut@i 0001  
                             SPIPut@v 0002            __end_of_PHYSetShortRAMAddr 12AC  
                  __size_of_uartWrite 000E                               _LCDText 017B  
                             _SPBRGH2 000F7D                               _RPINR16 000EF6  
                      _failureCounter 0091                               _SSP2ADD 000F74  
                             _SSP1BUF 000FC9                               _SSP2BUF 000F75  
                           ?_high_isr 0001                          __uartPrint@i 00F7  
                     _timerExtension1 004C                       _timerExtension2 0099  
                     __size_of_SPIGet 000A                       __size_of_SPIPut 001A  
                  _PHYGetShortRAMAddr 125A                            DELAY_ms@ms 000D  
                 _AcknowledgementAddr 0093                               __Hparam 0000  
                             __Lparam 0000                               _TextLen 004F  
                             _TextPtr 004D                       __size_of___lmul 0056  
                 ?_PHYGetShortRAMAddr 0001                          __psmallconst 0F00  
                      _tempNodeStatus 0049                               __pcinit 10E2  
                             __ramtop 0F00                               __ptext0 12F6  
                             __ptext1 12C6                               __ptext2 120C  
                             __ptext3 130A                               __ptext5 12DE  
                             __ptext6 0FA6                               __ptext7 1056  
                             __ptext8 1164                               __ptext9 1284  
                             _myPANID 0055                     __end_of_hexpowers 0F5B  
                           _T1CONbits 000FCD                               _dpowers 0F49  
                       _myLongAddress 00EA                             _MAC_PANID 0053  
                ??_PHYGetShortRAMAddr 0003                            ??_high_isr 0013  
                end_of_initialization 1156                      _MiWiStateMachine 0041  
                   __end_of_octpowers 0F49                         __Lmediumconst 0000  
                   __end_of_uartWrite 1318                               postdec1 000FE5  
                             postinc0 000FEE  DELAY_ms@cyclesRequiredForEntireDelay 000F  
                         ?__uartPrint 00F3                             _PORTBbits 000F81  
        __end_of_UserInterruptHandler 12F6                             _TRISAbits 000F92  
                           _TRISBbits 000F93                             _TRISCbits 000F94  
                           _TRISDbits 000F95                        _uartInitialize 12C6  
                           _BankIndex 005C                     __size_of_DELAY_ms 008C  
                      __uartPrint@str 00F3                        __end_of_SPIGet 1322  
                      __end_of_SPIPut 12C6                        __end_of___lmul 11BA  
            PHYGetLongRAMAddr@address 0003                         __pidataCOMRAM 132B  
              __end_of_uartInitialize 12DE                   start_initialization 10E2  
            PHYGetLongRAMAddr@tmpRFIE 0008                   __size_of__uartPrint 004E  
                     high_isr@results 002A                              ??_SPIGet 0003  
                            ??_SPIPut 0001                        _currentChannel 005B  
                            ??___lmul 0009                           __pdataBANK0 00E9  
                            ?_I2CTask 0001                           __pbssCOMRAM 002F  
                     ?_uartInitialize 0001                         __pcstackBANK0 00F2  
                         _defaultHops 005D                    _PHYSetShortRAMAddr 1284  
             PHYSetShortRAMAddr@value 0003                     __size_of_high_isr 020A  
                 ?_PHYSetShortRAMAddr 0003                  _UserInterruptHandler 12DE  
                    _MiWiCapacityInfo 0098                             __pintcode 0008  
                ??_PHYSetShortRAMAddr 0004                           __smallconst 0F00  
                  _AcknowledgementSeq 00E9                              _DELAY_ms 1056  
                           _hexpowers 0F53                              _LATBbits 000F8A  
                            _LATCbits 000F8B                              _LATDbits 000F8C  
                           _tempPANID 00E7                 ?_UserInterruptHandler 0001  
                           _octpowers 0F3D                              _PIE1bits 000F9D  
                            _PIE3bits 000FA3             PHYGetLongRAMAddr@toReturn 0007  
                            i2u510_40 12BE                              _PIR1bits 000F9E  
                            i2u525_40 0FB6                              _PIR3bits 000FA4  
                           _rxMessage 0060                              i2u693_45 12A8  
                            i2u693_46 12AA                              i2u694_45 127E  
                            i2u694_46 1280                              i2u695_45 1206  
                            i2u695_46 1208                              i2u947_40 00BA  
                          uartWrite@c 00F2                             _uartWrite 130A  
                            _SSP1CON1 000FC6                              _SSP2CON1 000F72  
                            _SSP2CON2 000F71                              _SSP1STAT 000FC7  
                            _SSP2STAT 000F73                          ??__uartPrint 00F5  
                         _MACRxPacket 002F                      __size_of_I2CTask 00B0  
                           high_isr@i 002E                       _MiWiAckRequired 0045  
                            _ConnMode 004B                     ___lmul@multiplier 0001  
                         _INTCON2bits 000FF1                           _INTCON3bits 000FF0  
         __size_of_PHYGetShortRAMAddr 002A                             copy_data0 10F6  
                  __end_of__uartPrint 125A                              _ScanTime 0F01  
                            _RxBuffer 0200                              __Hrparam 0000  
                            _TxBuffer 009A                              __Lrparam 0000  
                          ?_uartWrite 0001                       _tempLongAddress 007A  
                          _IEEESeqNum 0096                              __ptext10 125A  
                            __ptext11 11BA                              __ptext12 1318  
                            __ptext13 12AC                      _switch0PressTime 008A  
                        _SSP1CON1bits 000FC6                              _high_isr 0008  
                        _SSP2CON1bits 000F72                          _SSP2CON2bits 000F71  
                    _switch1PressTime 0086                ??_UserInterruptHandler 0013  
                       __size_of_main 0014                              _myParent 0047  
                          _LCDCommand 0082                      _tempShortAddress 0059  
                            int$flags 005E                      ??_uartInitialize 00F2  
               __CFG_CPUDIV$OSC3_PLL3 000000                           _OSCTUNEbits 000F9B  
                          _INTCONbits 000FF2                      _myNetworkAddress 0051  
                            intlevel2 0000                            _RCSTA2bits 000F9C  
                         ??_uartWrite 00F2                         _MACInitParams 008E  
                      _MRF24J40Status 0043                      _BroadcastRecords 0100  
                          _PPSCONbits 000EFF                            _WDTCONbits 000FC0  
                   _knownCoordinators 0097                        _RouterFailures 006A  
